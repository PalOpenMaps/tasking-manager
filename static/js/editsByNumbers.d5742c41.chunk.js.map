{"version":3,"sources":["utils/formatChartJSData.js","components/userDetail/editsByNumbers.js"],"names":["formatChartData","reference","stats","data","datasets","backgroundColor","labels","map","f","field","total","reduce","a","b","v","Math","round","borderColor","label","formatTimelineData","mappedTasksConfig","validatedTasksConfig","mapped","color","fill","validated","entry","date","cumulative_mapped","total_tasks","cumulative_validated","formatTasksStatsData","formatTooltip","context","dataset","dataIndex","concat","formatTimelineTooltip","isPercent","ChartJS","register","ArcElement","Tooltip","Legend","EditsByNumbers","_ref","osmStats","intl","useIntl","formatMessage","typesMessages","buildings","CHART_COLOURS","red","white","roads","green","pointsOfInterest","orange","waterways","blue","_jsx","className","children","_jsxs","FormattedMessage","messages","editsTitle","Object","keys","length","some","x","isNaN","Doughnut","options","aspectRatio","plugins","legend","position","boxWidth","tooltip","callbacks","noEditsData"],"mappings":"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","file":"static/js/editsByNumbers.d5742c41.chunk.js","sourcesContent":["export const formatChartData = (reference, stats) => {\n  let data = { datasets: [{ data: [], backgroundColor: [] }], labels: [] };\n\n  data.datasets[0].data = reference.map((f) => stats[f.field]);\n  const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\n  data.datasets[0].data = data.datasets[0].data.map((v) => Math.round((v / total) * 100));\n  data.datasets[0].backgroundColor = reference.map((f) => f.backgroundColor);\n  data.datasets[0].borderColor = reference.map((f) => f.borderColor);\n  data.labels = reference.map((f) => f.label);\n\n  return data;\n};\n\nexport const formatTimelineData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    borderColor: mappedTasksConfig.color,\n    fill: false,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    borderColor: validatedTasksConfig.color,\n    fill: false,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) =>\n    Math.round((entry.cumulative_mapped / entry.total_tasks) * 100),\n  );\n  validated.data = stats.map((entry) =>\n    Math.round((entry.cumulative_validated / entry.total_tasks) * 100),\n  );\n\n  return { datasets: [validated, mapped], labels: labels };\n};\n\nexport const formatTasksStatsData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) => entry.mapped);\n  validated.data = stats.map((entry) => entry.validated);\n\n  return { datasets: [mapped, validated], labels: labels };\n};\n\nexport const formatTooltip = (context) => {\n  var label = context.label;\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}%`;\n};\n\nexport const formatTimelineTooltip = (context, isPercent) => {\n  var label = context.dataset.label || '';\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}${isPercent ? '%' : ''}`;\n};\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport messages from './messages';\nimport typesMessages from '../messages';\nimport { CHART_COLOURS } from '../../config';\nimport { formatChartData, formatTooltip } from '../../utils/formatChartJSData';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst EditsByNumbers = ({ osmStats }) => {\n  const intl = useIntl();\n  let reference = [\n    {\n      label: intl.formatMessage(typesMessages.buildings),\n      field: 'buildings',\n      backgroundColor: CHART_COLOURS.red,\n      borderColor: CHART_COLOURS.white,\n    },\n    {\n      label: intl.formatMessage(typesMessages.roads),\n      field: 'roads',\n      backgroundColor: CHART_COLOURS.green,\n      borderColor: CHART_COLOURS.white,\n    },\n    {\n      label: intl.formatMessage(typesMessages.pointsOfInterest),\n      field: 'total_poi_count_add',\n      backgroundColor: CHART_COLOURS.orange,\n      borderColor: CHART_COLOURS.white,\n    },\n    {\n      label: intl.formatMessage(typesMessages.waterways),\n      field: 'total_waterway_count_add',\n      backgroundColor: CHART_COLOURS.blue,\n      borderColor: CHART_COLOURS.white,\n    },\n  ];\n\n  const data = formatChartData(reference, osmStats);\n\n  return (\n    <div className=\"pb4 ph3 pt2 bg-white blue-dark shadow-6 h-100\">\n      <div className=\"ml2 mt1\">\n        <h3 className=\"f125 mv3 fw6\">\n          <FormattedMessage {...messages.editsTitle} />\n        </h3>\n        {Object.keys(osmStats).length && data.datasets[0].data.some((x) => !isNaN(x)) ? (\n          <Doughnut\n            data={data}\n            options={{\n              aspectRatio: 2,\n              plugins: {\n                legend: { position: 'right', labels: { boxWidth: 12 } },\n                tooltip: { callbacks: { label: (context) => formatTooltip(context) } },\n              },\n            }}\n          />\n        ) : (\n          <div className=\"h-100 tc pv5 blue-grey\">\n            <FormattedMessage {...messages.noEditsData} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditsByNumbers;\n"],"sourceRoot":""}