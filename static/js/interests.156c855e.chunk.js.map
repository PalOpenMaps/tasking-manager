{"version":3,"sources":["components/interests/index.js","views/interests.js"],"names":["InterestCard","_ref","interest","_jsx","Link","to","concat","id","className","children","_jsxs","HashtagIcon","style","paddingTop","name","InterestsManagement","_ref2","interests","_userDetails","isInterestsFetched","query","setQuery","useState","filteredInterests","filter","toLowerCase","includes","Management","title","FormattedMessage","messages","manage","values","entity","categories","showAddButton","managementView","ReactPlaceholder","showLoadingAnimation","customPlaceholder","nCardPlaceholders","delay","ready","TextField","value","placeholderMsg","searchCategories","onChange","e","target","onCloseIconClick","length","map","i","n","noCategories","InterestInformation","props","_Fragment","Field","component","type","required","InterestForm","Form","onSubmit","updateInterest","initialValues","render","_ref3","handleSubmit","dirty","submitSucceeded","dirtySinceLastSubmit","form","submitting","dirtyForm","categoryInfo","disabled","Button","onClick","restart","cancel","disabledClassName","save","CreateInterest","useSetTitleTag","navigate","useNavigate","token","useSelector","state","auth","isError","setIsError","createInterest","payload","pushToLocalJSONAPI","JSON","stringify","then","result","toast","success","entityCreationSuccess","catch","pristine","newCategory","EntityError","CustomButton","FormSubmitButton","createCategory","ListInterests","userDetails","error","loading","useFetch","EditInterest","useParams","projectsError","projectsLoading","projects","onFailure","manageCategory","DeleteModal","updateEntity","disabledForm","action","Projects","viewAllEndpoint","ownerEntity"],"mappings":"8bAaO,MAAMA,EAAeC,IAAmB,IAAlB,SAAEC,GAAUD,EACvC,OACEE,cAACC,IAAI,CAACC,GAAE,GAAAC,OAAKJ,EAASK,GAAE,KAAKC,UAAU,uBAAsBC,SAC3DC,eAAA,OAAKF,UAAU,0EAAyEC,SAAA,CACtFN,cAAA,OAAKK,UAAU,gBAAeC,SAC5BN,cAAA,OAAKK,UAAU,6CAA4CC,SACzDN,cAAA,QAAMK,UAAU,oBAAmBC,SACjCN,cAACQ,IAAW,CAACC,MAAO,CAAEC,WAAY,qBAIxCV,cAAA,MAAIK,UAAU,mBAAkBC,SAAEP,EAASY,WAExC,EAIEC,EAAsBC,IAAsD,IAArD,UAAEC,EAAS,aAAEC,EAAY,mBAAEC,GAAoBH,EACjF,MAAOI,EAAOC,GAAYC,mBAAS,IAI7BC,EAA6B,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWO,QAAQtB,GAC3CA,EAASY,KAAKW,cAAcC,SAASN,EAAMK,iBAG7C,OACEtB,cAACwB,IAAU,CACTC,MACEzB,cAAC0B,IAAgB,IACXC,IAASC,OACbC,OAAQ,CAAEC,OAAQ9B,cAAC0B,IAAgB,IAAKC,IAASI,gBAGrDC,eAAe,EACfC,gBAAc,EAAA3B,SAEdC,eAAC2B,IAAgB,CACfC,sBAAsB,EACtBC,kBAAmBC,YAAkB,GACrCC,MAAO,GACPC,MAAOvB,EAAmBV,SAAA,CAE1BN,cAAA,OAAKK,UAAU,gBAAeC,SAC5BN,cAACwC,IAAS,CACRC,MAAOxB,EACPyB,eAAgBf,IAASgB,iBACzBC,SA3BmBC,GAAM3B,EAAS2B,EAAEC,OAAOL,OA4B3CM,iBAAkBA,IAAM7B,EAAS,QAGnB,OAAjBE,QAAiB,IAAjBA,KAAmB4B,OAClB5B,EAAkB6B,KAAI,CAACC,EAAGC,IAAMnD,cAACH,EAAY,CAASE,SAAUmD,GAAbC,KAEnDnD,cAAA,OAAAM,SACEN,cAAC0B,IAAgB,IAAKC,IAASyB,qBAI1B,EAIJC,EAAuBC,GAKhCtD,cAAAuD,WAAA,CAAAjD,SACEC,eAAA,OAAKF,UAAU,KAAIC,SAAA,CACjBN,cAAA,SAAOK,UANQ,aAMgBC,SAC7BN,cAAC0B,IAAgB,IAAKC,IAAShB,SAEjCX,cAACwD,IAAK,CAAC7C,KAAK,OAAO8C,UAAU,QAAQC,KAAK,OAAOrD,UARlC,sEAQ2DsD,UAAQ,SAM7EC,EAAgBN,GAEzBtD,cAAC6D,IAAI,CACHC,SAAWjC,GAAWyB,EAAMS,eAAelC,GAC3CmC,cAAeV,EAAMvD,SACrBkE,OAAQC,IAQD,IARE,aACPC,EAAY,MACZC,EAAK,gBACLC,EAAe,qBACfC,EAAoB,KACpBC,EAAI,WACJC,EAAU,OACV3C,GACDqC,EACC,MAAMO,EAAYJ,EAAkBC,GAAwBF,EAAQA,EACpE,OACE7D,eAAA,OAAKF,UAAU,gBAAeC,SAAA,CAC5BC,eAAA,OAAKF,UAAS,8BAAAF,OAAgCsE,EAAY,WAAa,MAAOnE,SAAA,CAC5EN,cAAA,MAAIK,UAAU,2BAA0BC,SACtCN,cAAC0B,IAAgB,IAAKC,IAAS+C,iBAEjC1E,cAAA,QAAMI,GAAG,gBAAgB0D,SAAUK,EAAa7D,SAC9CN,cAAA,YAAUK,UAAU,SAASsE,SAAUH,EAAWlE,SAChDN,cAACqD,EAAmB,WAIzBoB,GACClE,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACxBN,cAAA,OAAKK,UAAU,sCAAqCC,SAClDN,cAAC4E,IAAM,CAACvE,UAAU,6BAA6BwE,QAASA,IAAMN,EAAKO,UAAUxE,SAC3EN,cAAC0B,IAAgB,IAAKC,IAASoD,aAGnC/E,cAAA,OAAKK,UAAU,2BAA0BC,SACvCN,cAAC4E,IAAM,CACLC,QAASA,IAAMV,IACf9D,UAAU,2BACV2E,kBAAkB,gCAA+B1E,SAEjDN,cAAC0B,IAAgB,IAAKC,IAASsD,gBAKnC,I,6DCvHT,MAAMC,EAAiBA,KAC5BC,YAAe,uBACf,MAAMC,EAAWC,cACXC,EAAQC,aAAaC,GAAUA,EAAMC,KAAKH,SACzCI,EAASC,GAAcxE,oBAAS,GAqBvC,OACEnB,cAAC6D,IAAI,CACHC,SAAWjC,IAAW+D,OArBFC,EAqBiBhE,EApBvC8D,GAAW,QACXG,YAAmB,aAAcC,KAAKC,UAAUH,GAAUP,EAAO,QAC9DW,MAAMC,IACLC,IAAMC,QACJpG,cAAC0B,IAAgB,IACXC,IAAS0E,sBACbxE,OAAQ,CACNC,OAAQ,eAIdsD,EAAS,sBAADjF,OAAuB+F,EAAO9F,IAAK,IAE5CkG,OAAM,KACLX,GAAW,EAAK,IAfEE,KAqByB,EAC7C5B,OAAQnE,IAA2D,IAA1D,aAAEqE,EAAY,SAAEoC,EAAQ,KAAEhC,EAAI,WAAEC,EAAU,OAAE3C,GAAQ/B,EAC3D,OACES,eAAA,QAAMuD,SAAUK,EAAc9D,UAAU,YAAWC,SAAA,CACjDC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACxBN,cAAA,MAAIK,UAAU,4CAA2CC,SACvDN,cAAC0B,IAAgB,IAAKC,IAAS6E,gBAEjCjG,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC9BC,eAAA,OAAKF,UAAU,oCAAmCC,SAAA,CAChDN,cAAA,MAAIK,UAAU,uBAAsBC,SAClCN,cAAC0B,IAAgB,IAAKC,IAAS+C,iBAEjC1E,cAACqD,EAAmB,OAErBqC,GAAW1F,cAACyG,IAAW,CAAC3E,OAAO,gBAElC9B,cAAA,OAAKK,UAAU,kCAEjBE,eAAA,OAAKF,UAAU,6CAA4CC,SAAA,CACzDN,cAAA,OAAKK,UAAU,kCAAiCC,SAC9CN,cAACC,IAAI,CAACC,GAAI,MAAMI,SACdN,cAAC0G,IAAY,CAACrG,UAAU,+CAA8CC,SACpEN,cAAC0B,IAAgB,IAAKC,IAASoD,eAIrC/E,cAAA,OAAKK,UAAU,8BAA6BC,SAC1CN,cAAC2G,IAAgB,CACfhC,SAAUH,GAAc+B,EACxBlG,UAAU,2BACV2E,kBAAkB,gCAA+B1E,SAEjDN,cAAC0B,IAAgB,IAAKC,IAASiF,0BAIhC,GAGL,EAICC,EAAgBA,KAC3B1B,YAAe,qBACf,MAAM2B,EAAcvB,aAAaC,GAAUA,EAAMC,KAAKqB,eAE/CC,EAAOC,EAASlG,GAAamG,YAAS,cACvCjG,GAAsBgG,IAAYD,EAExC,OACE/G,cAACY,EAAmB,CAClBE,UAAWA,EAAUA,UACrBgG,YAAaA,EACb9F,mBAAoBA,GACpB,EAIOkG,EAAeA,KAC1B,MAAM,GAAE9G,GAAO+G,cACTL,EAAcvB,aAAaC,GAAUA,EAAMC,KAAKqB,cAChDxB,EAAQC,aAAaC,GAAUA,EAAMC,KAAKH,SACzCI,EAASC,GAAcxE,oBAAS,IAChC4F,EAAOC,EAASjH,GAAYkH,YAAS,aAAD9G,OAAcC,EAAE,MAC3D+E,YAAe,QAADhF,OAASJ,EAASY,OAEhC,MAAOyG,EAAeC,EAAiBC,GAAYL,YAAS,uBAAD9G,OAClCC,EAAE,wBACzBA,GAGImH,EAAYA,IAAM5B,GAAW,GAKnC,OACEpF,eAAA,OAAKF,UAAU,gBAAeC,SAAA,CAC5BC,eAAA,OAAKF,UAAU,KAAIC,SAAA,CACjBN,cAAA,MAAIK,UAAU,0DAAyDC,SACrEN,cAAC0B,IAAgB,IAAKC,IAAS6F,mBAEjCxH,cAACyH,IAAW,CAACrH,GAAIL,EAASK,GAAIO,KAAMZ,EAASY,KAAM+C,KAAK,iBAE1DnD,eAAA,OAAKF,UAAU,sBAAqBC,SAAA,CAClCN,cAAC4D,EAAY,CACXkD,YAAaA,EACb/G,SAAU,CAAEY,KAAMZ,EAASY,MAC3BoD,eAfgB8B,GACtB6B,YAAa,aAADvH,OAAcC,EAAE,KAAK,WAAYyF,EAASP,EAAO,KAAMiC,GAe7DI,aAAcZ,GAASC,IAExBtB,GAAW1F,cAACyG,IAAW,CAAC3E,OAAO,WAAW8F,OAAO,gBAEpD5H,cAAA,OAAKK,UAAU,gCAA+BC,SAC5CN,cAAC6H,IAAQ,CACPP,UAAWD,IAAoBD,GAAiBE,EAChDQ,gBAAe,+BAAA3H,OAAiCC,GAChD2H,YAAY,iBAGZ,C","file":"static/js/interests.156c855e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\nimport ReactPlaceholder from 'react-placeholder';\n\nimport messages from '../teamsAndOrgs/messages';\nimport { Management } from '../teamsAndOrgs/management';\nimport { HashtagIcon } from '../svgIcons';\nimport { Button } from '../button';\nimport { nCardPlaceholders } from '../teamsAndOrgs/campaignsPlaceholder';\nimport { TextField } from '../formInputs';\n\nexport const InterestCard = ({ interest }) => {\n  return (\n    <Link to={`${interest.id}/`} className=\"w-50-ns w-100 fl pr3\">\n      <div className=\"cf bg-white blue-dark br1 mv2 pv4 ph3 ba br1 b--grey-light shadow-hover\">\n        <div className=\"dib v-mid pr3\">\n          <div className=\"z-1 fl br-100 tc h2 w2 bg-blue-light white\">\n            <span className=\"relative w-50 dib\">\n              <HashtagIcon style={{ paddingTop: '0.4175rem' }} />\n            </span>\n          </div>\n        </div>\n        <h3 className=\"f3 mv0 dib v-mid\">{interest.name}</h3>\n      </div>\n    </Link>\n  );\n};\n\nexport const InterestsManagement = ({ interests, _userDetails, isInterestsFetched }) => {\n  const [query, setQuery] = useState('');\n\n  const onSearchInputChange = (e) => setQuery(e.target.value);\n\n  const filteredInterests = interests?.filter((interest) =>\n    interest.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  return (\n    <Management\n      title={\n        <FormattedMessage\n          {...messages.manage}\n          values={{ entity: <FormattedMessage {...messages.categories} /> }}\n        />\n      }\n      showAddButton={true}\n      managementView\n    >\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        customPlaceholder={nCardPlaceholders(4)}\n        delay={10}\n        ready={isInterestsFetched}\n      >\n        <div className=\"w-20-l w-25-m\">\n          <TextField\n            value={query}\n            placeholderMsg={messages.searchCategories}\n            onChange={onSearchInputChange}\n            onCloseIconClick={() => setQuery('')}\n          />\n        </div>\n        {filteredInterests?.length ? (\n          filteredInterests.map((i, n) => <InterestCard key={n} interest={i} />)\n        ) : (\n          <div>\n            <FormattedMessage {...messages.noCategories} />\n          </div>\n        )}\n      </ReactPlaceholder>\n    </Management>\n  );\n};\n\nexport const InterestInformation = (props) => {\n  const labelClasses = 'db pt3 pb2';\n  const fieldClasses = 'blue-grey w-100 pv3 ph2 input-reset ba b--grey-light bg-transparent';\n\n  return (\n    <>\n      <div className=\"cf\">\n        <label className={labelClasses}>\n          <FormattedMessage {...messages.name} />\n        </label>\n        <Field name=\"name\" component=\"input\" type=\"text\" className={fieldClasses} required />\n      </div>\n    </>\n  );\n};\n\nexport const InterestForm = (props) => {\n  return (\n    <Form\n      onSubmit={(values) => props.updateInterest(values)}\n      initialValues={props.interest}\n      render={({\n        handleSubmit,\n        dirty,\n        submitSucceeded,\n        dirtySinceLastSubmit,\n        form,\n        submitting,\n        values,\n      }) => {\n        const dirtyForm = submitSucceeded ? dirtySinceLastSubmit && dirty : dirty;\n        return (\n          <div className=\"blue-grey mb3\">\n            <div className={`bg-white b--grey-light pa4 ${dirtyForm ? 'bt bl br' : 'ba'}`}>\n              <h3 className=\"f3 fw6 dib blue-dark mv0\">\n                <FormattedMessage {...messages.categoryInfo} />\n              </h3>\n              <form id=\"interest-form\" onSubmit={handleSubmit}>\n                <fieldset className=\"bn pa0\" disabled={submitting}>\n                  <InterestInformation />\n                </fieldset>\n              </form>\n            </div>\n            {dirtyForm && (\n              <div className=\"cf pt0 h3\">\n                <div className=\"w-70-l w-50 fl tr dib bg-grey-light\">\n                  <Button className=\"blue-dark bg-grey-light h3\" onClick={() => form.restart()}>\n                    <FormattedMessage {...messages.cancel} />\n                  </Button>\n                </div>\n                <div className=\"w-30-l w-50 h-100 fr dib\">\n                  <Button\n                    onClick={() => handleSubmit()}\n                    className=\"w-100 h-100 bg-red white\"\n                    disabledClassName=\"bg-red o-50 white w-100 h-100\"\n                  >\n                    <FormattedMessage {...messages.save} />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      }}\n    ></Form>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetch } from '../hooks/UseFetch';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Form } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\nimport toast from 'react-hot-toast';\n\nimport messages from './messages';\nimport { InterestsManagement, InterestForm, InterestInformation } from '../components/interests';\nimport { FormSubmitButton, CustomButton } from '../components/button';\nimport { Projects } from '../components/teamsAndOrgs/projects';\nimport { DeleteModal } from '../components/deleteModal';\nimport { pushToLocalJSONAPI } from '../network/genericJSONRequest';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { updateEntity } from '../utils/management';\nimport { EntityError } from '../components/alert';\n\nexport const CreateInterest = () => {\n  useSetTitleTag('Create new category');\n  const navigate = useNavigate();\n  const token = useSelector((state) => state.auth.token);\n  const [isError, setIsError] = useState(false);\n\n  const createInterest = (payload) => {\n    setIsError(false);\n    pushToLocalJSONAPI('interests/', JSON.stringify(payload), token, 'POST')\n      .then((result) => {\n        toast.success(\n          <FormattedMessage\n            {...messages.entityCreationSuccess}\n            values={{\n              entity: 'category',\n            }}\n          />,\n        );\n        navigate(`/manage/categories/${result.id}`);\n      })\n      .catch(() => {\n        setIsError(true);\n      });\n  };\n\n  return (\n    <Form\n      onSubmit={(values) => createInterest(values)}\n      render={({ handleSubmit, pristine, form, submitting, values }) => {\n        return (\n          <form onSubmit={handleSubmit} className=\"blue-grey\">\n            <div className=\"cf vh-100\">\n              <h3 className=\"f2 mb3 ttu blue-dark fw7 barlow-condensed\">\n                <FormattedMessage {...messages.newCategory} />\n              </h3>\n              <div className=\"w-40-l w-100 fl\">\n                <div className=\"bg-white b--grey-light ba pa4 mb3\">\n                  <h3 className=\"f3 blue-dark mv0 fw6\">\n                    <FormattedMessage {...messages.categoryInfo} />\n                  </h3>\n                  <InterestInformation />\n                </div>\n                {isError && <EntityError entity=\"category\" />}\n              </div>\n              <div className=\"w-40-l w-100 fl pl5-l pl0 \"></div>\n            </div>\n            <div className=\"fixed left-0 bottom-0 cf bg-white h3 w-100\">\n              <div className=\"w-80-ns w-60-m w-50 h-100 fl tr\">\n                <Link to={'../'}>\n                  <CustomButton className=\"bg-white mr5 pr2 h-100 bn bg-white blue-dark\">\n                    <FormattedMessage {...messages.cancel} />\n                  </CustomButton>\n                </Link>\n              </div>\n              <div className=\"w-20-l w-40-m w-50 h-100 fr\">\n                <FormSubmitButton\n                  disabled={submitting || pristine}\n                  className=\"w-100 h-100 bg-red white\"\n                  disabledClassName=\"bg-red o-50 white w-100 h-100\"\n                >\n                  <FormattedMessage {...messages.createCategory} />\n                </FormSubmitButton>\n              </div>\n            </div>\n          </form>\n        );\n      }}\n    ></Form>\n  );\n};\n\nexport const ListInterests = () => {\n  useSetTitleTag('Manage categories');\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  // TO DO: filter teams of current user\n  const [error, loading, interests] = useFetch(`interests/`);\n  const isInterestsFetched = !loading && !error;\n\n  return (\n    <InterestsManagement\n      interests={interests.interests}\n      userDetails={userDetails}\n      isInterestsFetched={isInterestsFetched}\n    />\n  );\n};\n\nexport const EditInterest = () => {\n  const { id } = useParams();\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const token = useSelector((state) => state.auth.token);\n  const [isError, setIsError] = useState(false);\n  const [error, loading, interest] = useFetch(`interests/${id}/`);\n  useSetTitleTag(`Edit ${interest.name}`);\n\n  const [projectsError, projectsLoading, projects] = useFetch(\n    `projects/?interests=${id}&omitMapResults=true`,\n    id,\n  );\n\n  const onFailure = () => setIsError(true);\n\n  const updateInterest = (payload) =>\n    updateEntity(`interests/${id}/`, 'category', payload, token, null, onFailure);\n\n  return (\n    <div className=\"cf pv4 bg-tan\">\n      <div className=\"cf\">\n        <h3 className=\"f2 ttu blue-dark fw7 barlow-condensed v-mid ma0 dib ttu\">\n          <FormattedMessage {...messages.manageCategory} />\n        </h3>\n        <DeleteModal id={interest.id} name={interest.name} type=\"interests\" />\n      </div>\n      <div className=\"w-40-l w-100 mt4 fl\">\n        <InterestForm\n          userDetails={userDetails}\n          interest={{ name: interest.name }}\n          updateInterest={updateInterest}\n          disabledForm={error || loading}\n        />\n        {isError && <EntityError entity=\"category\" action=\"updation\" />}\n      </div>\n      <div className=\"w-60-l w-100 mt4 pl5-l pl0 fr\">\n        <Projects\n          projects={!projectsLoading && !projectsError && projects}\n          viewAllEndpoint={`/manage/projects/?interests=${id}`}\n          ownerEntity=\"category\"\n        />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}