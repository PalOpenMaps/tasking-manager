{"version":3,"sources":["components/user/usersPlaceholder.js","components/user/list.js","views/users.js"],"names":["nCardPlaceholders","N","Array","keys","map","_n","i","_jsxs","className","children","_jsx","RoundShape","style","width","height","color","TextRow","marginTop","UserFilter","_ref","filters","setFilters","updateFilters","intl","inputRef","useRef","FormattedMessage","messages","enterUsername","msg","onSubmit","e","preventDefault","SearchIcon","onClick","current","focus","id","ref","autoComplete","value","username","onChange","target","placeholder","textIndent","type","CloseIcon","p","concat","RoleFilter","_ref2","options","role","label","Dropdown","n","MapperLevelFilter","_ref3","l","level","SearchNav","_ref4","initialFilters","field","f","clearFilters","UsersTable","_ref5","token","useSelector","state","auth","response","setResponse","useState","userDetails","status","setStatus","message","loading","setLoading","error","setError","useEffect","async","url","fetchLocalJSONAPI","then","res","catch","err","fetchUsers","Object","entries","_ref6","key","val","filter","v","join","users","totalUsers","values","total","pagination","ReactPlaceholder","showLoadingAnimation","customPlaceholder","delay","ready","user","UserListCard","PaginatorLine","activePage","page","setPageFn","lastPage","pages","UserEditMenu","_ref7","close","iconClass","updateAttribute","attribute","attributeValue","endpoint","mapperLevel","success","toast","userAttributeUpdationSuccess","userAttributeUpdationFailure","setRole","CheckIcon","setLevel","mappingLevel","_ref8","isHovered","setHovered","onMouseEnter","onMouseLeave","UserAvatar","picture","pictureUrl","colorClasses","rel","href","Popup","trigger","SettingsIcon","position","closeOnDocumentClick","UsersList","useSetTitleTag","manageUsers"],"mappings":"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","file":"static/js/users.f37f52ab.chunk.js","sourcesContent":["import React from 'react';\nimport { TextRow, RoundShape } from 'react-placeholder/lib/placeholders';\n\nexport const userCardPlaceholderTemplate = () => (_n, i) =>\n  (\n    <div\n      key={i}\n      className={`bg-white cf flex items-center pa3 ba mb1 b--grey-light blue-dark shadow-hover`}\n    >\n      <div className=\"w-50-ns w-100 fl flex items-center\">\n        <RoundShape\n          className=\"show-loading-animation dib mt1\"\n          style={{ width: 32, height: 32 }}\n          color=\"#DDD\"\n        />\n        <TextRow\n          className=\"show-loading-animation blue-grey mr2 ml3 dib\"\n          color=\"#CCC\"\n          style={{ width: '45%', marginTop: 0 }}\n        />\n      </div>\n      <div className=\"w-20 fl dib-ns dn tc\">\n        <TextRow\n          className=\"show-loading-animation blue-grey mr2 ml3\"\n          color=\"#CCC\"\n          style={{ width: '45%', marginTop: 0 }}\n        />\n      </div>\n      <div className=\"w-20 fl dib-ns dn tc\">\n        <TextRow\n          className=\"show-loading-animation blue-grey mr2 ml3\"\n          color=\"#CCC\"\n          style={{ width: '45%', marginTop: 0 }}\n        />\n      </div>\n    </div>\n  );\n\nexport const nCardPlaceholders = (N) => {\n  return [...Array(N).keys()].map(userCardPlaceholderTemplate());\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport ReactPlaceholder from 'react-placeholder';\nimport toast from 'react-hot-toast';\nimport Popup from 'reactjs-popup';\n\nimport messages from './messages';\nimport { UserAvatar } from './avatar';\nimport { fetchLocalJSONAPI } from '../../network/genericJSONRequest';\nimport { PaginatorLine } from '../paginator';\nimport { SearchIcon, CloseIcon, SettingsIcon, CheckIcon } from '../svgIcons';\nimport { Dropdown } from '../dropdown';\nimport { nCardPlaceholders } from './usersPlaceholder';\n\nconst UserFilter = ({ filters, setFilters, updateFilters, intl }) => {\n  const inputRef = useRef(null);\n\n  return (\n    <div>\n      <FormattedMessage {...messages.enterUsername}>\n        {(msg) => {\n          return (\n            <form\n              className=\"relative\"\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <div>\n                <SearchIcon\n                  onClick={() => inputRef.current.focus()}\n                  className={`absolute grey-light pl2 pt2`}\n                />\n              </div>\n              <input\n                id=\"name\"\n                ref={inputRef}\n                autoComplete=\"off\"\n                value={filters.username !== '' ? filters.username : ''}\n                onChange={(e) => updateFilters('username', e.target.value)}\n                placeholder={msg}\n                className={'input-reset ba b--grey-light pa1 lh-copy db w-100'}\n                style={{ textIndent: '30px' }}\n                type=\"text\"\n                aria-describedby=\"name-desc\"\n              />\n\n              <CloseIcon\n                onClick={() => {\n                  setFilters((p) => {\n                    return { ...p, username: '' };\n                  });\n                }}\n                className={`absolute w1 h1 top-0 pt2 pointer pr2 right-0 red ${\n                  filters.username ? '' : 'dn'\n                }`}\n              />\n            </form>\n          );\n        }}\n      </FormattedMessage>\n    </div>\n  );\n};\n\nconst RoleFilter = ({ filters, setFilters, updateFilters }) => {\n  const roles = ['ALL', 'MAPPER', 'ADMIN', 'READ_ONLY'];\n\n  const options = roles.map((role) => {\n    return { value: role, label: <FormattedMessage {...messages[`userRole${role}`]} /> };\n  });\n\n  return (\n    <div>\n      <Dropdown\n        onChange={(n) => {\n          const value = n && n[0] && n[0].value;\n          updateFilters('role', value);\n        }}\n        options={options}\n        value={filters.role}\n        className={'ba b--grey-light bg-white mr1 f6 v-mid pv2 fl mt1 br1 f5 pointer'}\n      />\n    </div>\n  );\n};\n\nconst MapperLevelFilter = ({ filters, setFilters, updateFilters }) => {\n  const mapperLevels = ['ALL', 'BEGINNER', 'INTERMEDIATE', 'ADVANCED'];\n\n  const options = mapperLevels.map((l) => {\n    return { value: l, label: <FormattedMessage {...messages[`mapperLevel${l}`]} /> };\n  });\n\n  return (\n    <div>\n      <Dropdown\n        onChange={(n) => {\n          const value = n && n[0] && n[0].value;\n          updateFilters('level', value);\n        }}\n        options={options}\n        value={filters.level}\n        className={'ba b--grey-light bg-white mr1 f6 v-mid pv2 fl mt1 br1 f5 pointer'}\n      />\n    </div>\n  );\n};\n\nexport const SearchNav = ({ filters, setFilters, initialFilters }) => {\n  const updateFilters = (field, value) => {\n    setFilters((f) => {\n      return { ...f, [field]: value };\n    });\n  };\n\n  const clearFilters = (e) => {\n    setFilters(initialFilters);\n  };\n\n  return (\n    <div className=\"w-100 mb3 flex items-center\">\n      <div className=\"fl w-20 mr3\">\n        <UserFilter filters={filters} setFilters={setFilters} updateFilters={updateFilters} />\n      </div>\n      <div className=\"mr3 tr\">\n        <MapperLevelFilter\n          filters={filters}\n          setFilters={setFilters}\n          updateFilters={updateFilters}\n        />\n      </div>\n      <div className=\"tr mr3\">\n        <RoleFilter filters={filters} setFilters={setFilters} updateFilters={updateFilters} />\n      </div>\n      {(filters.username || filters.level !== 'ALL' || filters.role !== 'ALL') && (\n        <div className=\"tr red pointer\" onClick={clearFilters}>\n          <FormattedMessage {...messages.clearFilters} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const UsersTable = ({ filters, setFilters }) => {\n  const token = useSelector((state) => state.auth.token);\n  const [response, setResponse] = useState(null);\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const [status, setStatus] = useState({ status: null, message: '' });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async (filters) => {\n      setLoading(true);\n      const url = `users/?${filters}`;\n      fetchLocalJSONAPI(url, token)\n        .then((res) => {\n          setResponse(res);\n          setLoading(false);\n        })\n        .catch((err) => setError(err));\n    };\n\n    // Filter elements according to logic.\n    const urlFilters = Object.entries(filters)\n      .map(([key, val]) => {\n        if (key === 'role' || key === 'level') {\n          if (val !== 'ALL') {\n            return `${key}=${val}`;\n          } else {\n            return null;\n          }\n        }\n\n        if (val !== '') {\n          return `${key}=${val}`;\n        }\n        return null;\n      })\n      .filter((v) => v !== null)\n      .join('&');\n\n    fetchUsers(urlFilters);\n  }, [filters, token, status]);\n\n  return (\n    <div className=\"w-100\">\n      {response?.users && (\n        <p className=\"f6 mt0\">\n          <FormattedMessage\n            {...messages.totalUsers}\n            values={{ total: response.pagination.total }}\n          />\n        </p>\n      )}\n      <div className=\"w-100 f5\">\n        <ReactPlaceholder\n          showLoadingAnimation={true}\n          customPlaceholder={nCardPlaceholders(4)}\n          delay={10}\n          ready={!loading && !error}\n        >\n          <ul className=\"list pa0 ma0\">\n            {response?.users.map((user) => (\n              <UserListCard\n                user={user}\n                key={user.id}\n                token={token}\n                username={userDetails.username}\n                setStatus={setStatus}\n              />\n            ))}\n          </ul>\n        </ReactPlaceholder>\n        {response === null || response.pagination.total === 0 ? null : (\n          <PaginatorLine\n            activePage={filters.page}\n            setPageFn={(val) =>\n              setFilters((f) => {\n                return { ...f, page: val };\n              })\n            }\n            lastPage={response.pagination.pages}\n            className=\"pv3 tr\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const UserEditMenu = ({ user, token, close, setStatus }) => {\n  const roles = ['MAPPER', 'ADMIN', 'READ_ONLY'];\n  const mapperLevels = ['BEGINNER', 'INTERMEDIATE', 'ADVANCED'];\n  const iconClass = 'h1 w1 red';\n\n  const updateAttribute = (attribute, attributeValue) => {\n    const endpoint = {\n      role: `users/${user.username}/actions/set-role/${attributeValue}/`,\n      mapperLevel: `users/${user.username}/actions/set-level/${attributeValue}/`,\n    };\n\n    fetchLocalJSONAPI(endpoint[attribute], token, 'PATCH')\n      .then(() => {\n        close();\n        setStatus({ success: true });\n        toast.success(\n          <FormattedMessage\n            {...messages.userAttributeUpdationSuccess}\n            values={{\n              attribute,\n            }}\n          />,\n        );\n      })\n      .catch(() =>\n        toast.error(\n          <FormattedMessage\n            {...messages.userAttributeUpdationFailure}\n            values={{\n              attribute,\n            }}\n          />,\n        ),\n      );\n  };\n\n  return (\n    <div className=\"w-100 f6 tl ph1\">\n      <div className=\"w-100 bb b--tan\">\n        <p className=\"b mv3\">\n          <FormattedMessage {...messages.setRole} />\n        </p>\n        {roles.map((role) => {\n          return (\n            <div\n              key={role}\n              role=\"button\"\n              onClick={() => updateAttribute('role', role)}\n              className=\"mv1 pv1 dim pointer w-100 flex items-center justify-between\"\n            >\n              <p className=\"ma0\">\n                <FormattedMessage {...messages[`userRole${role}`]} />\n              </p>\n              {role === user.role ? <CheckIcon className={iconClass} /> : null}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"w-100\">\n        <p className=\"b mv3\">\n          <FormattedMessage {...messages.setLevel} />\n        </p>\n        {mapperLevels.map((level) => {\n          return (\n            <div\n              key={level}\n              role=\"button\"\n              onClick={() => updateAttribute('mapperLevel', level)}\n              className=\"mv1 pv1 dim pointer w-100 flex items-center justify-between\"\n            >\n              <p className=\"ma0\">\n                <FormattedMessage {...messages[`mapperLevel${level}`]} />\n              </p>\n              {level === user.mappingLevel ? <CheckIcon className={iconClass} /> : null}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport function UserListCard({ user, token, username, setStatus }: Object) {\n  const [isHovered, setHovered] = useState(false);\n\n  return (\n    <li\n      key={user.username}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className={`bg-white cf flex items-center pa3 ba mb1 b--grey-light blue-dark ${\n        isHovered ? 'shadow-4' : ''\n      }`}\n    >\n      <div className=\"w-50-ns w-100 fl\">\n        <UserAvatar\n          picture={user.pictureUrl}\n          username={user.username}\n          colorClasses=\"white bg-blue-grey\"\n        />\n        <a\n          className=\"blue-grey mr2 ml3 link\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={`/users/${user.username}`}\n        >\n          {user.username}\n        </a>\n      </div>\n      <div className=\"w-20 fl dib-ns dn tc\">\n        <FormattedMessage {...messages[`mapperLevel${user.mappingLevel}`]} />\n      </div>\n      <div className=\"w-20 fl dib-ns dn tc\">\n        <FormattedMessage {...messages[`userRole${user.role}`]} />\n      </div>\n\n      {username === user.username ? null : (\n        <div className=\"w-10 fl tr\">\n          <Popup\n            trigger={\n              <span>\n                <SettingsIcon width=\"18px\" height=\"18px\" className=\"pointer hover-blue-grey\" />\n              </span>\n            }\n            position=\"right center\"\n            closeOnDocumentClick\n            className=\"user-popup\"\n          >\n            {(close) => (\n              <UserEditMenu user={user} token={token} close={close} setStatus={setStatus} />\n            )}\n          </Popup>\n        </div>\n      )}\n    </li>\n  );\n}\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { SearchNav, UsersTable } from '../components/user/list';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\n\nexport const UsersList = () => {\n  useSetTitleTag('Manage users');\n  const initialFilters = { level: 'ALL', role: 'ALL', username: '', page: 1 };\n  const [filters, setFilters] = useState(initialFilters);\n\n  return (\n    <div className=\"pv4 blue-dark\">\n      <h3 className=\"barlow-condensed f2 ma0 v-mid dib ttu\">\n        <FormattedMessage {...messages.manageUsers} />\n      </h3>\n      <SearchNav filters={filters} setFilters={setFilters} initialFilters={initialFilters} />\n      <div className=\"w-50-l w-70-m w-100 mb4\">\n        <UsersTable filters={filters} setFilters={setFilters} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}