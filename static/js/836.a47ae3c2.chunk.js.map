{"version":3,"sources":["utils/editorsList.js","hooks/UseImageryOption.js","components/mappingTypes.js","components/taskSelection/lockedTasks.js","components/taskSelection/imagery.js","components/taskSelection/footer.js"],"names":["getEditors","filterList","customEditor","editors","label","value","url","RAPID_EDITOR_URL","ID_EDITOR_URL","POTLATCH2_EDITOR_URL","filter","i","includes","push","name","IMAGERY_OPTIONS","useImageryOption","imagery","useMemo","filtered","length","TITLED_ICONS","Icon","RoadIcon","title","HomeIcon","WavesIcon","TaskIcon","AsteriskIcon","MappingTypes","_ref","types","colorClass","intl","useIntl","_jsx","_Fragment","children","map","Element","k","formatMessage","messages","className","concat","height","AnotherProjectLock","projectId","lockedTasksLength","action","location","useLocation","_jsxs","FormattedMessage","anotherLockedTask","values","project","n","Link","to","state","directedFrom","pathname","Button","goToProject","SameProjectLock","_ref2","lockedTasks","navigate","useNavigate","tasks","taskId","onClick","mapOrValidate","LicenseError","_ref3","id","close","lockTasks","token","useSelector","auth","license","setLicense","useState","useEffect","async","res","fetchLocalJSONAPI","fetchLicense","lockErrorLicense","lockErrorLicenseDescription","description","plainText","cancel","pushToLocalJSONAPI","then","acceptLicense","LockError","_ref4","error","selectedTasks","setSelectedTasks","shouldShowDeselectButton","lockError","lockErrorDescription","LockErrorButtons","_ref5","user","userDetails","hasTasksChanged","setHasTasksChanged","closeModal","handleDeselectAndValidate","userMappedTaskIds","features","feature","properties","mappedBy","remainingSelectedTasks","selectedTask","deselectAndValidate","LockedTaskModalContent","_ref6","useGetLockedTasks","status","licenseError","licenseId","Imagery","imageryOption","customMessageId","startsWith","getCustomMessageId","noImageryDefined","copyImageryURL","ClipboardIcon","width","handleCopyToClipboard","navigator","clipboard","writeText","TaskSelectionFooter","defaultUserEditor","taskAction","locale","preferences","editor","setEditor","editorOptions","setEditorOptions","isPending","setIsPending","setLockError","dispatch","useDispatch","fetchLockedTasks","useFetchLockedTasks","lockSuccess","endpoint","windowObjectReference","urlParams","openEditor","window","innerWidth","innerHeight","updateReduxState","lockFailed","message","type","safari","fetch","formatJosmUrl","jsonp","e","open","mappedTasks","task","taskStatus","JSON","stringify","taskIds","catch","mappingEditors","validationEditorOptions","validationEditors","updateEditor","mappingEditorOptions","arr","titleClasses","Popup","modal","closeOnEscape","closeOnDocumentClick","onClose","typesOfMapping","mappingTypes","Dropdown","options","display","selectEditor","toTop","onChange","loading","selectAnotherProject","number"],"mappings":"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","file":"static/js/836.a47ae3c2.chunk.js","sourcesContent":["import { ID_EDITOR_URL, POTLATCH2_EDITOR_URL, RAPID_EDITOR_URL } from '../config';\n\nexport function getEditors(filterList, customEditor) {\n  let editors = [\n    {\n      label: 'RapiD',\n      value: 'RAPID',\n      url: RAPID_EDITOR_URL,\n    },\n    {\n      label: 'iD Editor',\n      value: 'ID',\n      url: ID_EDITOR_URL,\n    },\n    {\n      label: 'JOSM',\n      value: 'JOSM',\n      url: 'http://127.0.0.1:8111',\n    },\n    {\n      label: 'Potlatch 2',\n      value: 'POTLATCH_2',\n      url: POTLATCH2_EDITOR_URL,\n    },\n    {\n      label: 'Field Papers',\n      value: 'FIELD_PAPERS',\n      url: 'http://fieldpapers.org/compose',\n    },\n  ];\n  if (filterList) {\n    editors = editors.filter((i) => filterList.includes(i.value));\n  }\n  if (customEditor && filterList.includes('CUSTOM')) {\n    editors.push({ label: customEditor.name, value: 'CUSTOM', url: customEditor.url });\n  }\n  return editors;\n}\n","import { useMemo } from 'react';\n\nexport const IMAGERY_OPTIONS = [\n  { label: 'Bing', value: 'Bing' },\n  { label: 'Mapbox Satellite', value: 'Mapbox' },\n  { label: 'ESRI World Imagery', value: 'EsriWorldImagery' },\n  { label: 'ESRI World Imagery (Clarity) Beta', value: 'EsriWorldImageryClarity' },\n  { label: 'Maxar Premium', value: 'Maxar-Premium' },\n  { label: 'Maxar Standard', value: 'Maxar-Standard' },\n  { label: 'Custom', value: 'custom' },\n];\n\nexport const useImageryOption = (imagery) => {\n  const getImagery = useMemo(() => {\n    if (imagery) {\n      const filtered = IMAGERY_OPTIONS.filter((i) => i.value === imagery);\n      if (filtered.length) {\n        return filtered[0];\n      }\n      return IMAGERY_OPTIONS[IMAGERY_OPTIONS.length - 1];\n    } else {\n      return null;\n    }\n  }, [imagery]);\n  return getImagery;\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport messages from './messages';\nimport { RoadIcon, HomeIcon, WavesIcon, TaskIcon, AsteriskIcon } from './svgIcons';\n\nexport const TITLED_ICONS = [\n  { Icon: RoadIcon, title: 'roads', value: 'ROADS' },\n  { Icon: HomeIcon, title: 'buildings', value: 'BUILDINGS' },\n  { Icon: WavesIcon, title: 'waterways', value: 'WATERWAYS' },\n  { Icon: TaskIcon, title: 'landUse', value: 'LAND_USE' },\n  { Icon: AsteriskIcon, title: 'other', value: 'OTHER' },\n];\n\nexport function MappingTypes({ types = [], colorClass }: Object) {\n  const intl = useIntl();\n  return (\n    <>\n      {TITLED_ICONS.map((Element, k) => (\n        <span title={intl.formatMessage(messages[Element.title])} key={k}>\n          <Element.Icon\n            className={`ml1 mr3 ${\n              types && types.includes(Element.value) ? colorClass : 'grey-light'\n            }`}\n            height=\"23\"\n          />\n        </span>\n      ))}\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchLocalJSONAPI, pushToLocalJSONAPI } from '../../network/genericJSONRequest';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { Button } from '../button';\nimport { useGetLockedTasks } from '../../hooks/UseLockedTasks';\n\nexport function AnotherProjectLock({ projectId, lockedTasksLength, action }: Object) {\n  const location = useLocation();\n\n  return (\n    <>\n      <h3 className=\"barlow-condensed f3 fw6 mv0\">\n        <FormattedMessage {...messages.anotherLockedTask} />\n      </h3>\n      <div className=\"mv4 lh-title\">\n        <FormattedMessage\n          {...messages[\n            lockedTasksLength > 1\n              ? 'anotherProjectLockTextPlural'\n              : 'anotherProjectLockTextSingular'\n          ]}\n          values={{\n            project: <span className=\"fw6\">{projectId}</span>,\n            n: <span className=\"fw6\">{lockedTasksLength}</span>,\n            action: (\n              <span className=\"ttl\">\n                <FormattedMessage {...messages[action]} />\n              </span>\n            ),\n          }}\n        />\n      </div>\n      <Link to={`/projects/${projectId}/${action}/`} state={{ directedFrom: location.pathname }}>\n        <Button className=\"bg-red white\">\n          <FormattedMessage {...messages.goToProject} values={{ project: projectId }} />\n        </Button>\n      </Link>\n    </>\n  );\n}\n\nexport function SameProjectLock({ lockedTasks, action }: Object) {\n  const navigate = useNavigate();\n  return (\n    <>\n      <h3 className=\"barlow-condensed f3 fw6 mv0\">\n        <FormattedMessage {...messages.anotherLockedTask} />\n      </h3>\n      <div className=\"mv4 lh-title\">\n        <FormattedMessage\n          {...messages[\n            lockedTasks.tasks.length > 1\n              ? 'currentProjectLockTextPlural'\n              : 'currentProjectLockTextSingular'\n          ]}\n          values={{ taskId: <span className=\"fw6\">{lockedTasks.tasks}</span> }}\n        />\n      </div>\n      <Button\n        className=\"bg-red white\"\n        onClick={() => navigate(`/projects/${lockedTasks.project}/${action}/`)}\n      >\n        <FormattedMessage\n          {...messages[lockedTasks.tasks.length > 1 ? 'workOnTasksPlural' : 'workOnTasksSingular']}\n          values={{ mapOrValidate: <FormattedMessage {...messages[action]} /> }}\n        />\n      </Button>\n    </>\n  );\n}\n\nexport const LicenseError = ({ id, close, lockTasks }) => {\n  const token = useSelector((state) => state.auth.token);\n  const [license, setLicense] = useState(null);\n\n  useEffect(() => {\n    const fetchLicense = async (id) => {\n      const res = await fetchLocalJSONAPI(`licenses/${id}/`);\n      setLicense(res);\n    };\n    fetchLicense(id);\n  }, [id]);\n\n  const acceptLicense = () => {\n    pushToLocalJSONAPI(`licenses/${id}/actions/accept-for-me/`, null, token).then(() =>\n      lockTasks(),\n    );\n  };\n\n  return (\n    <>\n      <h3 className=\"barlow-condensed f3 fw6 mv0\">\n        <FormattedMessage {...messages.lockErrorLicense} />\n      </h3>\n      {license === null ? null : (\n        <div className=\"mt3 lh-title\">\n          <FormattedMessage {...messages.lockErrorLicenseDescription} />\n          <div className=\"h5 ph2 overflow-scroll\">\n            <p className=\"fw6 f5 ttu\">{license.name}</p>\n            <p className=\"f6\">{license.description}</p>\n            <p className=\"f6\">{license.plainText}</p>\n          </div>\n          <div className=\"w-100 pt3\">\n            <Button onClick={() => close()} className=\"blue-dark bg-white mr2\">\n              <FormattedMessage {...messages.cancel} />\n            </Button>\n            <Button onClick={() => acceptLicense()} className=\"white bg-red\">\n              <FormattedMessage {...messages.acceptLicense} />\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport function LockError({ error, close, tasks, selectedTasks, setSelectedTasks, lockTasks }) {\n  const shouldShowDeselectButton = error === 'CannotValidateMappedTask' && selectedTasks.length > 1;\n\n  return (\n    <>\n      <h3 className=\"barlow-condensed f3 fw6 mv0\">\n        {messages[`${error}Error`] ? (\n          <FormattedMessage {...messages[`${error}Error`]} />\n        ) : (\n          <FormattedMessage {...messages.lockError} />\n        )}\n      </h3>\n      <div className=\"mv4 lh-title\">\n        {messages[`${error}ErrorDescription`] ? (\n          <FormattedMessage {...messages[`${error}ErrorDescription`]} />\n        ) : (\n          <FormattedMessage {...messages.lockErrorDescription} />\n        )}\n      </div>\n      <LockErrorButtons\n        close={close}\n        shouldShowDeselectButton={shouldShowDeselectButton}\n        tasks={tasks}\n        selectedTasks={selectedTasks}\n        setSelectedTasks={setSelectedTasks}\n        lockTasks={lockTasks}\n      />\n    </>\n  );\n}\n\nfunction LockErrorButtons({\n  close,\n  shouldShowDeselectButton,\n  lockTasks,\n  tasks,\n  selectedTasks,\n  setSelectedTasks,\n}) {\n  const user = useSelector((state) => state.auth.userDetails);\n  const [hasTasksChanged, setHasTasksChanged] = useState(false);\n\n  const handleDeselectAndValidate = () => {\n    const userMappedTaskIds = tasks.features\n      .filter((feature) => feature.properties.mappedBy === user.id)\n      .map((feature) => feature.properties.taskId);\n\n    const remainingSelectedTasks = selectedTasks.filter(\n      (selectedTask) => !userMappedTaskIds.includes(selectedTask),\n    );\n    setSelectedTasks(remainingSelectedTasks);\n    // Set the flag to indicate that tasks have changed.\n    // Note: The introduction of useEffect pattern might benefit\n    // from future optimization.\n    setHasTasksChanged(true);\n  };\n\n  useEffect(() => {\n    if (hasTasksChanged) {\n      lockTasks();\n      setHasTasksChanged(false);\n    }\n  }, [hasTasksChanged, lockTasks]);\n\n  return (\n    <div className=\"w-100 pt3 flex justify-end\">\n      <Button\n        onClick={close}\n        className={`mr2 ${shouldShowDeselectButton ? 'bg-transparent black' : 'bg-red white'}`}\n      >\n        <FormattedMessage {...messages.closeModal} />\n      </Button>\n      {shouldShowDeselectButton && (\n        <Button onClick={handleDeselectAndValidate} className=\"bg-red white mr2\">\n          <FormattedMessage {...messages.deselectAndValidate} />\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport function LockedTaskModalContent({\n  project,\n  error,\n  close,\n  lockTasks,\n  tasks,\n  selectedTasks,\n  setSelectedTasks,\n}: Object) {\n  const lockedTasks = useGetLockedTasks();\n  const action = lockedTasks.status === 'LOCKED_FOR_VALIDATION' ? 'validate' : 'map';\n  const licenseError = error === 'UserLicenseError' && !lockedTasks.project;\n\n  return (\n    <div className=\"blue-dark bg-white pv2 pv4-ns ph2 ph4-ns\">\n      {licenseError && <LicenseError id={project.licenseId} close={close} lockTasks={lockTasks} />}\n      {/* Other error happened */}\n      {error === 'JOSM' && <LockError error={error} close={close} />}\n      {!lockedTasks.project && !licenseError && error !== 'JOSM' && (\n        <LockError\n          error={error}\n          close={close}\n          lockTasks={lockTasks}\n          tasks={tasks}\n          selectedTasks={selectedTasks}\n          setSelectedTasks={setSelectedTasks}\n        />\n      )}\n      {/* User has tasks locked on another project */}\n      {lockedTasks.project && lockedTasks.project !== project.projectId && error !== 'JOSM' && (\n        <AnotherProjectLock\n          projectId={lockedTasks.project}\n          action={action}\n          lockedTasksLength={lockedTasks.tasks.length}\n        />\n      )}\n      {/* User has tasks locked on the current project */}\n      {lockedTasks.project === project.projectId && error !== 'JOSM' && (\n        <SameProjectLock action={action} lockedTasks={lockedTasks} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport messages from './messages';\nimport { ClipboardIcon } from '../svgIcons';\nimport { useImageryOption } from '../../hooks/UseImageryOption';\n\nfunction getCustomMessageId(imagery) {\n  if (imagery) {\n    if (imagery.startsWith('tms')) {\n      return 'customTMSLayer';\n    }\n    if (imagery.startsWith('wms')) {\n      return 'customWMSLayer';\n    }\n    if (imagery.startsWith('wmts')) {\n      return 'customWMTSLayer';\n    }\n    if (imagery.startsWith('http') || imagery.startsWith('https')) {\n      return 'customLayer';\n    }\n  }\n}\n\nexport function Imagery({ value = '' }: Object) {\n  const intl = useIntl();\n  //eslint-disable-next-line\n  const imageryOption = useImageryOption(value);\n  const customMessageId = getCustomMessageId(value);\n\n  const handleCopyToClipboard = () => navigator.clipboard.writeText(value);\n\n  return (\n    <p className={`f125 fw7 pt1 pr3 ma0 truncate blue-dark`}>\n      {customMessageId && ( // show wms, wmts, tms, or other custom layers\n        <span title={value}>\n          <FormattedMessage {...messages[customMessageId]} />\n        </span>\n      )}\n\n      {imageryOption !== null && imageryOption.value !== 'custom' && (\n        // show Bing, Mapbox, ESRI and Maxar layers\n        <span>{imageryOption.label}</span>\n      )}\n      {!customMessageId && imageryOption !== null && imageryOption.value === 'custom' && (\n        // other not recognized custom layers, example: Digital Globe\n        <span>{value}</span>\n      )}\n      {!imageryOption && <FormattedMessage {...messages.noImageryDefined} />}\n      {customMessageId && (\n        <span\n          className=\"pointer pl2 blue-light hover-blue-dark\"\n          title={intl.formatMessage(messages.copyImageryURL)}\n        >\n          <ClipboardIcon width=\"16px\" height=\"16px\" onClick={handleCopyToClipboard} />\n        </span>\n      )}\n    </p>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { getEditors } from '../../utils/editorsList';\nimport { openEditor, formatJosmUrl } from '../../utils/openEditor';\nimport { useFetchLockedTasks } from '../../hooks/UseLockedTasks';\nimport { pushToLocalJSONAPI, fetchLocalJSONAPI } from '../../network/genericJSONRequest';\nimport { Dropdown } from '../dropdown';\nimport { Button } from '../button';\nimport { Imagery } from './imagery';\nimport { MappingTypes } from '../mappingTypes';\nimport { LockedTaskModalContent } from './lockedTasks';\n\nconst TaskSelectionFooter = ({\n  defaultUserEditor,\n  project,\n  tasks,\n  taskAction,\n  selectedTasks,\n  setSelectedTasks,\n}) => {\n  const navigate = useNavigate();\n  const token = useSelector((state) => state.auth.token);\n  const locale = useSelector((state) => state.preferences.locale);\n  const [editor, setEditor] = useState(defaultUserEditor);\n  const [editorOptions, setEditorOptions] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const [lockError, setLockError] = useState(null);\n  const dispatch = useDispatch();\n  const fetchLockedTasks = useFetchLockedTasks();\n\n  const lockSuccess = (status, endpoint, windowObjectReference) => {\n    const urlParams = openEditor(\n      editor,\n      project,\n      tasks,\n      selectedTasks,\n      [window.innerWidth, window.innerHeight],\n      windowObjectReference,\n      locale,\n    );\n    updateReduxState(selectedTasks, project.projectId, status);\n    setIsPending(false);\n    navigate(`/projects/${project.projectId}/${endpoint}/${urlParams}`);\n  };\n\n  const lockFailed = (windowObjectReference, message) => {\n    // JOSM and iD don't open a new window\n    if (!['JOSM', 'ID', 'RAPID'].includes(editor)) {\n      windowObjectReference.close();\n    }\n    fetchLockedTasks();\n    setLockError(message);\n    setIsPending(false);\n  };\n\n  const updateReduxState = (tasks, project, status) => {\n    dispatch({ type: 'SET_LOCKED_TASKS', tasks: tasks });\n    dispatch({ type: 'SET_PROJECT', project: project });\n    dispatch({ type: 'SET_TASKS_STATUS', status: status });\n  };\n\n  const lockTasks = async () => {\n    // if user can not map or validate the project, lead him to the explore projects page\n    if (\n      ['selectAnotherProject', 'mappingIsComplete', 'projectIsComplete'].includes(taskAction) ||\n      project.status === 'ARCHIVED'\n    ) {\n      navigate(`/explore/`);\n      return;\n    }\n    // then pass to the JOSM check and validate/map checks\n    if (editor === 'JOSM' && !window.safari) {\n      try {\n        await fetch(formatJosmUrl('version', { jsonp: 'checkJOSM' }));\n      } catch (e) {\n        setLockError('JOSM');\n        return;\n      }\n    }\n    let windowObjectReference;\n    if (!['JOSM', 'ID', 'RAPID'].includes(editor)) {\n      windowObjectReference = window.open('', `TM-${project.projectId}-${selectedTasks}`);\n    }\n    if (['validateSelectedTask', 'validateAnotherTask', 'validateATask'].includes(taskAction)) {\n      const mappedTasks = selectedTasks.filter(\n        (id) =>\n          tasks.features.filter(\n            (task) => task.properties.taskId === id && task.properties.taskStatus === 'MAPPED',\n          ).length,\n      );\n      if (!mappedTasks.length) {\n        setLockError('noMappedTasksSelected');\n      } else {\n        setIsPending(true);\n        pushToLocalJSONAPI(\n          `projects/${project.projectId}/tasks/actions/lock-for-validation/`,\n          JSON.stringify({ taskIds: mappedTasks }),\n          token,\n        )\n          .then((res) => {\n            lockSuccess('LOCKED_FOR_VALIDATION', 'validate', windowObjectReference);\n          })\n          .catch((e) => lockFailed(windowObjectReference, e.message));\n      }\n    }\n    if (['mapSelectedTask', 'mapAnotherTask', 'mapATask'].includes(taskAction)) {\n      setIsPending(true);\n      fetchLocalJSONAPI(\n        `projects/${project.projectId}/tasks/actions/lock-for-mapping/${selectedTasks[0]}/`,\n        token,\n        'POST',\n      )\n        .then((res) => {\n          lockSuccess('LOCKED_FOR_MAPPING', 'map', windowObjectReference);\n        })\n        .catch((e) => lockFailed(windowObjectReference, e.message));\n    }\n    if (['resumeMapping', 'resumeValidation'].includes(taskAction)) {\n      const urlParams = openEditor(\n        editor,\n        project,\n        tasks,\n        selectedTasks,\n        [window.innerWidth, window.innerHeight],\n        windowObjectReference,\n        locale,\n      );\n      const endpoint = taskAction === 'resumeMapping' ? 'map' : 'validate';\n      navigate(`/projects/${project.projectId}/${endpoint}/${urlParams}`);\n    }\n  };\n\n  // update the editors options for mapping or for validation,\n  // according to the status of the task that is currently selected\n  useEffect(() => {\n    if (\n      taskAction &&\n      project.mappingEditors &&\n      (taskAction.startsWith('validate') || taskAction === 'resumeValidation')\n    ) {\n      const validationEditorOptions = getEditors(project.validationEditors, project.customEditor);\n      setEditorOptions(validationEditorOptions);\n      // activate defaultUserEditor if it's allowed. If not, use the first allowed editor for validation\n      if (!project.validationEditors.includes(editor)) {\n        updateEditor(validationEditorOptions);\n      }\n    } else {\n      const mappingEditorOptions = getEditors(project.mappingEditors, project.customEditor);\n      setEditorOptions(mappingEditorOptions);\n      // activate defaultUserEditor if it's allowed. If not, use the first allowed editor\n      if (!project.mappingEditors.includes(editor)) {\n        updateEditor(mappingEditorOptions);\n      }\n    }\n  }, [\n    editor,\n    taskAction,\n    project.mappingEditors,\n    project.validationEditors,\n    project.customEditor,\n    defaultUserEditor,\n  ]);\n\n  const updateEditor = (arr) => setEditor(arr[0].value);\n  const titleClasses = 'db ttu f7 blue-grey mb2 fw5';\n\n  return (\n    <div className=\"cf bg-white pb2 ph4-l ph2\">\n      {lockError !== null && (\n        <Popup\n          modal\n          open\n          closeOnEscape={true}\n          closeOnDocumentClick={true}\n          onClose={() => setLockError(null)}\n        >\n          {(close) => (\n            <LockedTaskModalContent\n              project={project}\n              error={lockError}\n              close={close}\n              lockTasks={lockTasks}\n              tasks={tasks}\n              selectedTasks={selectedTasks}\n              setSelectedTasks={setSelectedTasks}\n            />\n          )}\n        </Popup>\n      )}\n      <div className=\"w-25-ns w-40 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.typesOfMapping} />\n        </h3>\n        <div className=\"db fl pt1\">\n          <MappingTypes types={project.mappingTypes} />\n        </div>\n      </div>\n      <div className=\"w-25-ns w-60 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.imagery} />\n        </h3>\n        <Imagery value={project.imagery} />\n      </div>\n      <div className=\"w-20-ns w-40 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.editor} />\n        </h3>\n        <Dropdown\n          options={editorOptions}\n          value={editor}\n          display={<FormattedMessage {...messages.selectEditor} />}\n          className=\"bg-white bn pl0\"\n          toTop={true}\n          onChange={updateEditor}\n        />\n      </div>\n      <div className=\"w-30-ns w-60 fl tr\">\n        <div className=\"mt3\">\n          <Button className=\"white bg-red fw5\" onClick={() => lockTasks()} loading={isPending}>\n            {['selectAnotherProject', 'mappingIsComplete', 'projectIsComplete'].includes(\n              taskAction,\n            ) || project.status === 'ARCHIVED' ? (\n              <FormattedMessage {...messages.selectAnotherProject} />\n            ) : (\n              <FormattedMessage\n                {...messages[taskAction]}\n                values={{ number: selectedTasks ? selectedTasks.length : 0 }}\n              />\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskSelectionFooter;\n"],"sourceRoot":""}