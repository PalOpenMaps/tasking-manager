{"version":3,"sources":["../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","../node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","../node_modules/@formatjs/ecma402-abstract/lib/262.js","../node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","../node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","../node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","../node_modules/@formatjs/ecma402-abstract/lib/GetStringOrBooleanOption.js","../node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","../node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","../node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ApplyUnsignedRoundingMode.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatApproximately.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","../node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRange.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRangeToParts.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/GetUnsignedRoundingMode.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","../node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","../node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","../node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","../node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","../node_modules/@formatjs/ecma402-abstract/lib/data.js"],"names":["CanonicalizeLocaleList","locales","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","_a","zoneNames","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","reduce","all","z","ianaTimeZone","ToString","o","TypeError","String","ToNumber","val","undefined","NaN","Number","TimeClip","time","isFinite","Math","abs","n","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","Object","x","y","is","ArrayCreate","len","Array","HasOwnProperty","prop","prototype","hasOwnProperty","call","Type","MS_PER_DAY","mod","Day","t","WeekDay","DayFromYear","Date","UTC","TimeFromYear","YearFromTime","getUTCFullYear","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","HOURS_PER_DAY","MINUTES_PER_HOUR","SECONDS_PER_MINUTE","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","HourFromTime","MinFromTime","SecFromTime","OrdinaryHasInstance","C","O","internalSlots","boundTargetFunction","P","isPrototypeOf","msFromTime","CoerceOptionsToObject","options","create","DefaultNumberOption","inputVal","min","max","fallback","RangeError","concat","GetNumberOption","property","minimum","maximum","GetOption","opts","type","values","value","Boolean","filter","length","join","GetOptionsObject","GetStringOrBooleanOption","trueValue","falsyValue","indexOf","SANCTIONED_UNITS","removeUnitNamespace","unit","slice","SIMPLE_UNITS","map","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNamesFromData","Set","linkNames","forEach","add","keys","linkName","has","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","replace","_","c","test","IsWellFormedUnitIdentifier","toLowerCase","units","split","numerator","denominator","ApplyUnsignedRoundingMode","r1","r2","unsignedRoundingMode","d1","d2","CollapseNumberRange","result","ComputeExponentForMagnitude","numberFormat","magnitude","getInternalSlots","notation","dataLocaleData","numberingSystem","compactDisplay","style","currencyDisplay","thresholdMap","numbers","nu","short","decimal","long","num","pow","thresholds","i","magnitudeKey","other","match","ToRawPrecision","minPrecision","maxPrecision","m","e","xFinal","int","p","repeat","xToString","toString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","getMagnitude","round","adjustDecimalPlace","cut","formattedString","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","f","mantissa","exponent","k","a","b","FormatNumericToString","intlObject","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","minimumIntegerDigits","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","FormatApproximately","approximatelySign","symbols","push","digitMapping","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","source","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","data","pl","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","pattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","exec","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","_i","numberPatternParts_1","part","apply","paritionNumberIntoParts","useGrouping","minusSign","plusSign","percentSign","substring","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","_b","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","_c","_d","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","negativePattern","rules","select","PartitionNumberPattern","nan","POSITIVE_INFINITY","NEGATIVE_INFINITY","infinity","signDisplay","PartitionNumberRangePattern","xResult","yResult","xResult_1","rangeSign","yResult_1","FormatNumericRange","FormatNumericRangeToParts","index","FormatNumericToParts","nf","implDetails","parts","parts_1","negativeMapping","ceil","expand","trunc","halfCeil","halfFloor","halfExpand","halfTrunc","halfEven","positiveMapping","GetUnsignedRoundingMode","roundingMode","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","roundingPriority","hasSd","hasFd","needSd","needFd","SetNumberFormatUnitOptions","VALID_ROUND_INCREMENT_VALUES","InitializeNumberFormat","localeData","availableLocales","numberingSystemNames","getDefaultLocale","requestedLocales","opt","matcher","localeMatcher","r","ResolveLocale","from","dataLocale","invariant","locale","cDigits","roundingIncrement","trailingZeroDisplay","defaultUseGrouping","PartitionPattern","beginIndex","endIndex","nextIndex","SupportedLocales","LookupSupportedLocales","RangePatternType","_super","MissingLocaleDataError","_this","this","arguments","__extends","isMissingLocaleDataError"],"mappings":"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Y,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,QAAW,CACP,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,geACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,QAAW,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,SAAY,CACR,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,SAAY,CACR,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,SAAY,CACR,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,SAAY,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,SAAY,CACR,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,QAAW,CACP,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,QAAW,CACP,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ,KAAQ,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEJ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","file":"static/js/7.dad8f36e.chunk.js","sourcesContent":["/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var zoneNames = _a.zoneNames, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = zoneNames.reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e15) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\n","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    return ToObject(options);\n}\n","/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function DefaultNumberOption(inputVal, min, max, fallback) {\n    if (inputVal === undefined) {\n        // @ts-expect-error\n        return fallback;\n    }\n    var val = Number(inputVal);\n    if (isNaN(val) || val < min || val > max) {\n        throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n    }\n    return Math.floor(val);\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    if (typeof opts !== 'object') {\n        throw new TypeError('Options must be an object');\n    }\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    if (typeof options === 'object') {\n        return options;\n    }\n    throw new TypeError('Options must be an object');\n}\n","/**\n * https://tc39.es/ecma402/#sec-getstringorbooleanoption\n * @param opts\n * @param prop\n * @param values\n * @param trueValue\n * @param falsyValue\n * @param fallback\n */\nimport { ToString } from './262';\nexport function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {\n    var value = opts[prop];\n    if (value === undefined) {\n        return fallback;\n    }\n    if (value === true) {\n        return trueValue;\n    }\n    var valueBoolean = Boolean(value);\n    if (valueBoolean === false) {\n        return falsyValue;\n    }\n    value = ToString(value);\n    if (value === 'true' || value === 'false') {\n        return fallback;\n    }\n    if ((values || []).indexOf(value) === -1) {\n        throw new RangeError(\"Invalid value \".concat(value));\n    }\n    return value;\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var zoneNamesFromData = _a.zoneNamesFromData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set();\n    var linkNames = new Set();\n    zoneNamesFromData.map(function (z) { return z.toUpperCase(); }).forEach(function (z) { return zoneNames.add(z); });\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\n        linkNames.add(linkName.toUpperCase());\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n    });\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","export function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {\n    if (x === r1)\n        return r1;\n    if (unsignedRoundingMode === undefined) {\n        throw new Error('unsignedRoundingMode is mandatory');\n    }\n    if (unsignedRoundingMode === 'zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'infinity') {\n        return r2;\n    }\n    var d1 = x - r1;\n    var d2 = r2 - x;\n    if (d1 < d2) {\n        return r1;\n    }\n    if (d2 < d1) {\n        return r2;\n    }\n    if (d1 !== d2) {\n        throw new Error('Unexpected error');\n    }\n    if (unsignedRoundingMode === 'half-zero') {\n        return r1;\n    }\n    if (unsignedRoundingMode === 'half-infinity') {\n        return r2;\n    }\n    if (unsignedRoundingMode !== 'half-even') {\n        throw new Error(\"Unexpected value for unsignedRoundingMode: \".concat(unsignedRoundingMode));\n    }\n    var cardinality = (r1 / (r2 - r1)) % 2;\n    if (cardinality === 0) {\n        return r1;\n    }\n    return r2;\n}\n","/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n */\nexport function CollapseNumberRange(result) {\n    return result;\n}\n","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        var xToString = x.toString();\n        // If xToString is formatted as scientific notation, the number is either very small or very\n        // large. If the precision of the formatted string is lower that requested max precision, we\n        // should still infer them from the formatted string, otherwise the formatted result might have\n        // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n        var xToStringExponentIndex = xToString.indexOf('e');\n        var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n        var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n        if (xToStringExponentIndex >= 0 &&\n            xToStringMantissaWithoutDecimalPoint.length <= p) {\n            e = +xToStringExponent;\n            m =\n                xToStringMantissaWithoutDecimalPoint +\n                    repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n            xFinal = x;\n        }\n        else {\n            e = getMagnitude(x);\n            var decimalPlaceOffset = e - p + 1;\n            // n is the integer containing the required precision digits. To derive the formatted string,\n            // we will adjust its decimal place in the logic below.\n            var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n            // The rounding caused the change of magnitude, so we should increment `e` by 1.\n            if (adjustDecimalPlace(n, p - 1) >= 10) {\n                e = e + 1;\n                // Divide n by 10 to swallow one precision.\n                n = Math.floor(n / 10);\n            }\n            m = n.toString();\n            // Equivalent of n * 10 ** (e - p + 1)\n            xFinal = adjustDecimalPlace(n, p - 1 - e);\n        }\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n        int = e + 1;\n    }\n    else {\n        m = \"0.\".concat(repeat('0', -e - 1)).concat(m);\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n    // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n    function adjustDecimalPlace(x, magnitude) {\n        return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n    }\n}\n","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = \"\".concat(a, \".\").concat(b);\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","/**\n * https://tc39.es/ecma402/#sec-formatapproximately\n */\nexport function FormatApproximately(numberFormat, result, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    var approximatelySign = symbols.approximatelySign;\n    result.push({ type: 'approximatelySign', value: approximatelySign });\n    return result;\n}\n","export var digitMapping = {\n    \"adlm\": [\n        \"𞥐\",\n        \"𞥑\",\n        \"𞥒\",\n        \"𞥓\",\n        \"𞥔\",\n        \"𞥕\",\n        \"𞥖\",\n        \"𞥗\",\n        \"𞥘\",\n        \"𞥙\"\n    ],\n    \"ahom\": [\n        \"𑜰\",\n        \"𑜱\",\n        \"𑜲\",\n        \"𑜳\",\n        \"𑜴\",\n        \"𑜵\",\n        \"𑜶\",\n        \"𑜷\",\n        \"𑜸\",\n        \"𑜹\"\n    ],\n    \"arab\": [\n        \"٠\",\n        \"١\",\n        \"٢\",\n        \"٣\",\n        \"٤\",\n        \"٥\",\n        \"٦\",\n        \"٧\",\n        \"٨\",\n        \"٩\"\n    ],\n    \"arabext\": [\n        \"۰\",\n        \"۱\",\n        \"۲\",\n        \"۳\",\n        \"۴\",\n        \"۵\",\n        \"۶\",\n        \"۷\",\n        \"۸\",\n        \"۹\"\n    ],\n    \"bali\": [\n        \"᭐\",\n        \"᭑\",\n        \"᭒\",\n        \"᭓\",\n        \"᭔\",\n        \"᭕\",\n        \"᭖\",\n        \"᭗\",\n        \"᭘\",\n        \"᭙\"\n    ],\n    \"beng\": [\n        \"০\",\n        \"১\",\n        \"২\",\n        \"৩\",\n        \"৪\",\n        \"৫\",\n        \"৬\",\n        \"৭\",\n        \"৮\",\n        \"৯\"\n    ],\n    \"bhks\": [\n        \"𑱐\",\n        \"𑱑\",\n        \"𑱒\",\n        \"𑱓\",\n        \"𑱔\",\n        \"𑱕\",\n        \"𑱖\",\n        \"𑱗\",\n        \"𑱘\",\n        \"𑱙\"\n    ],\n    \"brah\": [\n        \"𑁦\",\n        \"𑁧\",\n        \"𑁨\",\n        \"𑁩\",\n        \"𑁪\",\n        \"𑁫\",\n        \"𑁬\",\n        \"𑁭\",\n        \"𑁮\",\n        \"𑁯\"\n    ],\n    \"cakm\": [\n        \"𑄶\",\n        \"𑄷\",\n        \"𑄸\",\n        \"𑄹\",\n        \"𑄺\",\n        \"𑄻\",\n        \"𑄼\",\n        \"𑄽\",\n        \"𑄾\",\n        \"𑄿\"\n    ],\n    \"cham\": [\n        \"꩐\",\n        \"꩑\",\n        \"꩒\",\n        \"꩓\",\n        \"꩔\",\n        \"꩕\",\n        \"꩖\",\n        \"꩗\",\n        \"꩘\",\n        \"꩙\"\n    ],\n    \"deva\": [\n        \"०\",\n        \"१\",\n        \"२\",\n        \"३\",\n        \"४\",\n        \"५\",\n        \"६\",\n        \"७\",\n        \"८\",\n        \"९\"\n    ],\n    \"diak\": [\n        \"𑥐\",\n        \"𑥑\",\n        \"𑥒\",\n        \"𑥓\",\n        \"𑥔\",\n        \"𑥕\",\n        \"𑥖\",\n        \"𑥗\",\n        \"𑥘\",\n        \"𑥙\"\n    ],\n    \"fullwide\": [\n        \"０\",\n        \"１\",\n        \"２\",\n        \"３\",\n        \"４\",\n        \"５\",\n        \"６\",\n        \"７\",\n        \"８\",\n        \"９\"\n    ],\n    \"gong\": [\n        \"𑶠\",\n        \"𑶡\",\n        \"𑶢\",\n        \"𑶣\",\n        \"𑶤\",\n        \"𑶥\",\n        \"𑶦\",\n        \"𑶧\",\n        \"𑶨\",\n        \"𑶩\"\n    ],\n    \"gonm\": [\n        \"𑵐\",\n        \"𑵑\",\n        \"𑵒\",\n        \"𑵓\",\n        \"𑵔\",\n        \"𑵕\",\n        \"𑵖\",\n        \"𑵗\",\n        \"𑵘\",\n        \"𑵙\"\n    ],\n    \"gujr\": [\n        \"૦\",\n        \"૧\",\n        \"૨\",\n        \"૩\",\n        \"૪\",\n        \"૫\",\n        \"૬\",\n        \"૭\",\n        \"૮\",\n        \"૯\"\n    ],\n    \"guru\": [\n        \"੦\",\n        \"੧\",\n        \"੨\",\n        \"੩\",\n        \"੪\",\n        \"੫\",\n        \"੬\",\n        \"੭\",\n        \"੮\",\n        \"੯\"\n    ],\n    \"hanidec\": [\n        \"〇\",\n        \"一\",\n        \"二\",\n        \"三\",\n        \"四\",\n        \"五\",\n        \"六\",\n        \"七\",\n        \"八\",\n        \"九\"\n    ],\n    \"hmng\": [\n        \"𖭐\",\n        \"𖭑\",\n        \"𖭒\",\n        \"𖭓\",\n        \"𖭔\",\n        \"𖭕\",\n        \"𖭖\",\n        \"𖭗\",\n        \"𖭘\",\n        \"𖭙\"\n    ],\n    \"hmnp\": [\n        \"𞅀\",\n        \"𞅁\",\n        \"𞅂\",\n        \"𞅃\",\n        \"𞅄\",\n        \"𞅅\",\n        \"𞅆\",\n        \"𞅇\",\n        \"𞅈\",\n        \"𞅉\"\n    ],\n    \"java\": [\n        \"꧐\",\n        \"꧑\",\n        \"꧒\",\n        \"꧓\",\n        \"꧔\",\n        \"꧕\",\n        \"꧖\",\n        \"꧗\",\n        \"꧘\",\n        \"꧙\"\n    ],\n    \"kali\": [\n        \"꤀\",\n        \"꤁\",\n        \"꤂\",\n        \"꤃\",\n        \"꤄\",\n        \"꤅\",\n        \"꤆\",\n        \"꤇\",\n        \"꤈\",\n        \"꤉\"\n    ],\n    \"khmr\": [\n        \"០\",\n        \"១\",\n        \"២\",\n        \"៣\",\n        \"៤\",\n        \"៥\",\n        \"៦\",\n        \"៧\",\n        \"៨\",\n        \"៩\"\n    ],\n    \"knda\": [\n        \"೦\",\n        \"೧\",\n        \"೨\",\n        \"೩\",\n        \"೪\",\n        \"೫\",\n        \"೬\",\n        \"೭\",\n        \"೮\",\n        \"೯\"\n    ],\n    \"lana\": [\n        \"᪀\",\n        \"᪁\",\n        \"᪂\",\n        \"᪃\",\n        \"᪄\",\n        \"᪅\",\n        \"᪆\",\n        \"᪇\",\n        \"᪈\",\n        \"᪉\"\n    ],\n    \"lanatham\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"laoo\": [\n        \"໐\",\n        \"໑\",\n        \"໒\",\n        \"໓\",\n        \"໔\",\n        \"໕\",\n        \"໖\",\n        \"໗\",\n        \"໘\",\n        \"໙\"\n    ],\n    \"lepc\": [\n        \"᪐\",\n        \"᪑\",\n        \"᪒\",\n        \"᪓\",\n        \"᪔\",\n        \"᪕\",\n        \"᪖\",\n        \"᪗\",\n        \"᪘\",\n        \"᪙\"\n    ],\n    \"limb\": [\n        \"᥆\",\n        \"᥇\",\n        \"᥈\",\n        \"᥉\",\n        \"᥊\",\n        \"᥋\",\n        \"᥌\",\n        \"᥍\",\n        \"᥎\",\n        \"᥏\"\n    ],\n    \"mathbold\": [\n        \"𝟎\",\n        \"𝟏\",\n        \"𝟐\",\n        \"𝟑\",\n        \"𝟒\",\n        \"𝟓\",\n        \"𝟔\",\n        \"𝟕\",\n        \"𝟖\",\n        \"𝟗\"\n    ],\n    \"mathdbl\": [\n        \"𝟘\",\n        \"𝟙\",\n        \"𝟚\",\n        \"𝟛\",\n        \"𝟜\",\n        \"𝟝\",\n        \"𝟞\",\n        \"𝟟\",\n        \"𝟠\",\n        \"𝟡\"\n    ],\n    \"mathmono\": [\n        \"𝟶\",\n        \"𝟷\",\n        \"𝟸\",\n        \"𝟹\",\n        \"𝟺\",\n        \"𝟻\",\n        \"𝟼\",\n        \"𝟽\",\n        \"𝟾\",\n        \"𝟿\"\n    ],\n    \"mathsanb\": [\n        \"𝟬\",\n        \"𝟭\",\n        \"𝟮\",\n        \"𝟯\",\n        \"𝟰\",\n        \"𝟱\",\n        \"𝟲\",\n        \"𝟳\",\n        \"𝟴\",\n        \"𝟵\"\n    ],\n    \"mathsans\": [\n        \"𝟢\",\n        \"𝟣\",\n        \"𝟤\",\n        \"𝟥\",\n        \"𝟦\",\n        \"𝟧\",\n        \"𝟨\",\n        \"𝟩\",\n        \"𝟪\",\n        \"𝟫\"\n    ],\n    \"mlym\": [\n        \"൦\",\n        \"൧\",\n        \"൨\",\n        \"൩\",\n        \"൪\",\n        \"൫\",\n        \"൬\",\n        \"൭\",\n        \"൮\",\n        \"൯\"\n    ],\n    \"modi\": [\n        \"𑙐\",\n        \"𑙑\",\n        \"𑙒\",\n        \"𑙓\",\n        \"𑙔\",\n        \"𑙕\",\n        \"𑙖\",\n        \"𑙗\",\n        \"𑙘\",\n        \"𑙙\"\n    ],\n    \"mong\": [\n        \"᠐\",\n        \"᠑\",\n        \"᠒\",\n        \"᠓\",\n        \"᠔\",\n        \"᠕\",\n        \"᠖\",\n        \"᠗\",\n        \"᠘\",\n        \"᠙\"\n    ],\n    \"mroo\": [\n        \"𖩠\",\n        \"𖩡\",\n        \"𖩢\",\n        \"𖩣\",\n        \"𖩤\",\n        \"𖩥\",\n        \"𖩦\",\n        \"𖩧\",\n        \"𖩨\",\n        \"𖩩\"\n    ],\n    \"mtei\": [\n        \"꯰\",\n        \"꯱\",\n        \"꯲\",\n        \"꯳\",\n        \"꯴\",\n        \"꯵\",\n        \"꯶\",\n        \"꯷\",\n        \"꯸\",\n        \"꯹\"\n    ],\n    \"mymr\": [\n        \"၀\",\n        \"၁\",\n        \"၂\",\n        \"၃\",\n        \"၄\",\n        \"၅\",\n        \"၆\",\n        \"၇\",\n        \"၈\",\n        \"၉\"\n    ],\n    \"mymrshan\": [\n        \"႐\",\n        \"႑\",\n        \"႒\",\n        \"႓\",\n        \"႔\",\n        \"႕\",\n        \"႖\",\n        \"႗\",\n        \"႘\",\n        \"႙\"\n    ],\n    \"mymrtlng\": [\n        \"꧰\",\n        \"꧱\",\n        \"꧲\",\n        \"꧳\",\n        \"꧴\",\n        \"꧵\",\n        \"꧶\",\n        \"꧷\",\n        \"꧸\",\n        \"꧹\"\n    ],\n    \"newa\": [\n        \"𑑐\",\n        \"𑑑\",\n        \"𑑒\",\n        \"𑑓\",\n        \"𑑔\",\n        \"𑑕\",\n        \"𑑖\",\n        \"𑑗\",\n        \"𑑘\",\n        \"𑑙\"\n    ],\n    \"nkoo\": [\n        \"߀\",\n        \"߁\",\n        \"߂\",\n        \"߃\",\n        \"߄\",\n        \"߅\",\n        \"߆\",\n        \"߇\",\n        \"߈\",\n        \"߉\"\n    ],\n    \"olck\": [\n        \"᱐\",\n        \"᱑\",\n        \"᱒\",\n        \"᱓\",\n        \"᱔\",\n        \"᱕\",\n        \"᱖\",\n        \"᱗\",\n        \"᱘\",\n        \"᱙\"\n    ],\n    \"orya\": [\n        \"୦\",\n        \"୧\",\n        \"୨\",\n        \"୩\",\n        \"୪\",\n        \"୫\",\n        \"୬\",\n        \"୭\",\n        \"୮\",\n        \"୯\"\n    ],\n    \"osma\": [\n        \"𐒠\",\n        \"𐒡\",\n        \"𐒢\",\n        \"𐒣\",\n        \"𐒤\",\n        \"𐒥\",\n        \"𐒦\",\n        \"𐒧\",\n        \"𐒨\",\n        \"𐒩\"\n    ],\n    \"rohg\": [\n        \"𐴰\",\n        \"𐴱\",\n        \"𐴲\",\n        \"𐴳\",\n        \"𐴴\",\n        \"𐴵\",\n        \"𐴶\",\n        \"𐴷\",\n        \"𐴸\",\n        \"𐴹\"\n    ],\n    \"saur\": [\n        \"꣐\",\n        \"꣑\",\n        \"꣒\",\n        \"꣓\",\n        \"꣔\",\n        \"꣕\",\n        \"꣖\",\n        \"꣗\",\n        \"꣘\",\n        \"꣙\"\n    ],\n    \"segment\": [\n        \"🯰\",\n        \"🯱\",\n        \"🯲\",\n        \"🯳\",\n        \"🯴\",\n        \"🯵\",\n        \"🯶\",\n        \"🯷\",\n        \"🯸\",\n        \"🯹\"\n    ],\n    \"shrd\": [\n        \"𑇐\",\n        \"𑇑\",\n        \"𑇒\",\n        \"𑇓\",\n        \"𑇔\",\n        \"𑇕\",\n        \"𑇖\",\n        \"𑇗\",\n        \"𑇘\",\n        \"𑇙\"\n    ],\n    \"sind\": [\n        \"𑋰\",\n        \"𑋱\",\n        \"𑋲\",\n        \"𑋳\",\n        \"𑋴\",\n        \"𑋵\",\n        \"𑋶\",\n        \"𑋷\",\n        \"𑋸\",\n        \"𑋹\"\n    ],\n    \"sinh\": [\n        \"෦\",\n        \"෧\",\n        \"෨\",\n        \"෩\",\n        \"෪\",\n        \"෫\",\n        \"෬\",\n        \"෭\",\n        \"෮\",\n        \"෯\"\n    ],\n    \"sora\": [\n        \"𑃰\",\n        \"𑃱\",\n        \"𑃲\",\n        \"𑃳\",\n        \"𑃴\",\n        \"𑃵\",\n        \"𑃶\",\n        \"𑃷\",\n        \"𑃸\",\n        \"𑃹\"\n    ],\n    \"sund\": [\n        \"᮰\",\n        \"᮱\",\n        \"᮲\",\n        \"᮳\",\n        \"᮴\",\n        \"᮵\",\n        \"᮶\",\n        \"᮷\",\n        \"᮸\",\n        \"᮹\"\n    ],\n    \"takr\": [\n        \"𑛀\",\n        \"𑛁\",\n        \"𑛂\",\n        \"𑛃\",\n        \"𑛄\",\n        \"𑛅\",\n        \"𑛆\",\n        \"𑛇\",\n        \"𑛈\",\n        \"𑛉\"\n    ],\n    \"talu\": [\n        \"᧐\",\n        \"᧑\",\n        \"᧒\",\n        \"᧓\",\n        \"᧔\",\n        \"᧕\",\n        \"᧖\",\n        \"᧗\",\n        \"᧘\",\n        \"᧙\"\n    ],\n    \"tamldec\": [\n        \"௦\",\n        \"௧\",\n        \"௨\",\n        \"௩\",\n        \"௪\",\n        \"௫\",\n        \"௬\",\n        \"௭\",\n        \"௮\",\n        \"௯\"\n    ],\n    \"telu\": [\n        \"౦\",\n        \"౧\",\n        \"౨\",\n        \"౩\",\n        \"౪\",\n        \"౫\",\n        \"౬\",\n        \"౭\",\n        \"౮\",\n        \"౯\"\n    ],\n    \"thai\": [\n        \"๐\",\n        \"๑\",\n        \"๒\",\n        \"๓\",\n        \"๔\",\n        \"๕\",\n        \"๖\",\n        \"๗\",\n        \"๘\",\n        \"๙\"\n    ],\n    \"tibt\": [\n        \"༠\",\n        \"༡\",\n        \"༢\",\n        \"༣\",\n        \"༤\",\n        \"༥\",\n        \"༦\",\n        \"༧\",\n        \"༨\",\n        \"༩\"\n    ],\n    \"tirh\": [\n        \"𑓐\",\n        \"𑓑\",\n        \"𑓒\",\n        \"𑓓\",\n        \"𑓔\",\n        \"𑓕\",\n        \"𑓖\",\n        \"𑓗\",\n        \"𑓘\",\n        \"𑓙\"\n    ],\n    \"vaii\": [\n        \"ᘠ\",\n        \"ᘡ\",\n        \"ᘢ\",\n        \"ᘣ\",\n        \"ᘤ\",\n        \"ᘥ\",\n        \"ᘦ\",\n        \"ᘧ\",\n        \"ᘨ\",\n        \"ᘩ\"\n    ],\n    \"wara\": [\n        \"𑣠\",\n        \"𑣡\",\n        \"𑣢\",\n        \"𑣣\",\n        \"𑣤\",\n        \"𑣥\",\n        \"𑣦\",\n        \"𑣧\",\n        \"𑣨\",\n        \"𑣩\"\n    ],\n    \"wcho\": [\n        \"𞋰\",\n        \"𞋱\",\n        \"𞋲\",\n        \"𞋳\",\n        \"𞋴\",\n        \"𞋵\",\n        \"𞋶\",\n        \"𞋷\",\n        \"𞋸\",\n        \"𞋹\"\n    ]\n};\n","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n","import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && Boolean(options.useGrouping), decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (x == Number.POSITIVE_INFINITY || x == Number.NEGATIVE_INFINITY) {\n        n = symbols.infinity;\n    }\n    else {\n        if (!SameValue(x, -0)) {\n            if (!isFinite(x)) {\n                throw new Error('Input must be a mathematical value');\n            }\n            if (internalSlots.style == 'percent') {\n                x *= 100;\n            }\n            ;\n            _b = ComputeExponent(numberFormat, x, {\n                getInternalSlots: getInternalSlots,\n            }), exponent = _b[0], magnitude = _b[1];\n            // Preserve more precision by doing multiplication when exponent is negative.\n            x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        }\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return formatToParts({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (isNaN(x) || isNaN(y)) {\n        throw new RangeError('Input must be a number');\n    }\n    var result = [];\n    var xResult = PartitionNumberPattern(numberFormat, x, { getInternalSlots: getInternalSlots });\n    var yResult = PartitionNumberPattern(numberFormat, y, { getInternalSlots: getInternalSlots });\n    if (xResult === yResult) {\n        return FormatApproximately(numberFormat, xResult, { getInternalSlots: getInternalSlots });\n    }\n    for (var _i = 0, xResult_1 = xResult; _i < xResult_1.length; _i++) {\n        var r = xResult_1[_i];\n        r.source = 'startRange';\n    }\n    result = result.concat(xResult);\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    result.push({ type: 'literal', value: symbols.rangeSign, source: 'shared' });\n    for (var _b = 0, yResult_1 = yResult; _b < yResult_1.length; _b++) {\n        var r = yResult_1[_b];\n        r.source = 'endRange';\n    }\n    result = result.concat(yResult);\n    return CollapseNumberRange(result);\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrange\n */\nexport function FormatNumericRange(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part) { return part.value; }).join('');\n}\n","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrangetoparts\n */\nexport function FormatNumericRangeToParts(numberFormat, x, y, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n        getInternalSlots: getInternalSlots,\n    });\n    return parts.map(function (part, index) { return ({\n        type: part.type,\n        value: part.value,\n        source: part.source,\n        result: index.toString(),\n    }); });\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(nf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","var negativeMapping = {\n    ceil: 'zero',\n    floor: 'infinity',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-zero',\n    halfFloor: 'half-infinity',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nvar positiveMapping = {\n    ceil: 'infinity',\n    floor: 'zero',\n    expand: 'infinity',\n    trunc: 'zero',\n    halfCeil: 'half-infinity',\n    halfFloor: 'half-zero',\n    halfExpand: 'half-infinity',\n    halfTrunc: 'half-zero',\n    halfEven: 'half-even',\n};\nexport function GetUnsignedRoundingMode(roundingMode, isNegative) {\n    if (isNegative) {\n        return negativeMapping[roundingMode];\n    }\n    return positiveMapping[roundingMode];\n}\n","import { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n    var hasSd = mnsd !== undefined || mxsd !== undefined;\n    var hasFd = mnfd !== undefined || mxfd !== undefined;\n    var needSd = true;\n    var needFd = true;\n    if (roundingPriority === 'auto') {\n        needSd = hasSd;\n        if (hasSd || (!hasFd && notation === 'compact')) {\n            needFd = false;\n        }\n    }\n    if (needSd) {\n        if (hasSd) {\n            mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n            mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n            internalSlots.minimumSignificantDigits = mnsd;\n            internalSlots.maximumSignificantDigits = mxsd;\n        }\n        else {\n            internalSlots.minimumSignificantDigits = 1;\n            internalSlots.maximumSignificantDigits = 21;\n        }\n    }\n    if (needFd) {\n        if (hasFd) {\n            mnfd = DefaultNumberOption(mnfd, 0, 20, undefined);\n            mxfd = DefaultNumberOption(mxfd, 0, 20, undefined);\n            if (mnfd === undefined) {\n                // @ts-expect-error\n                mnfd = Math.min(mnfdDefault, mxfd);\n            }\n            else if (mxfd === undefined) {\n                mxfd = Math.max(mxfdDefault, mnfd);\n            }\n            else if (mnfd > mxfd) {\n                throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n            }\n            internalSlots.minimumFractionDigits = mnfd;\n            internalSlots.maximumFractionDigits = mxfd;\n        }\n        else {\n            internalSlots.minimumFractionDigits = mnfdDefault;\n            internalSlots.maximumFractionDigits = mxfdDefault;\n        }\n    }\n    if (needSd || needFd) {\n        if (roundingPriority === 'morePrecision') {\n            internalSlots.roundingType = 'morePrecision';\n        }\n        else if (roundingPriority === 'lessPrecision') {\n            internalSlots.roundingType = 'lessPrecision';\n        }\n        else if (hasSd) {\n            internalSlots.roundingType = 'significantDigits';\n        }\n        else {\n            internalSlots.roundingType = 'fractionDigits';\n        }\n    }\n    else {\n        internalSlots.roundingType = 'morePrecision';\n        internalSlots.minimumFractionDigits = 0;\n        internalSlots.maximumFractionDigits = 0;\n        internalSlots.minimumSignificantDigits = 1;\n        internalSlots.maximumSignificantDigits = 2;\n    }\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetOption } from '../GetOption';\nimport { GetStringOrBooleanOption } from '../GetStringOrBooleanOption';\nimport { invariant } from '../utils';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nvar VALID_ROUND_INCREMENT_VALUES = [\n    1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000,\n];\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = CoerceOptionsToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(Array.from(availableLocales), requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[r.dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var roundingIncrement = GetNumberOption(options, 'roundingIncrement', 1, 5000, 1);\n    if (VALID_ROUND_INCREMENT_VALUES.indexOf(roundingIncrement) === -1) {\n        throw new RangeError(\"Invalid rounding increment value: \".concat(roundingIncrement, \".\\nValid values are \").concat(VALID_ROUND_INCREMENT_VALUES, \".\"));\n    }\n    if (roundingIncrement !== 1 &&\n        internalSlots.roundingType !== 'fractionDigits') {\n        throw new TypeError(\"For roundingIncrement > 1 only fractionDigits is a valid roundingType\");\n    }\n    if (roundingIncrement !== 1 &&\n        internalSlots.maximumFractionDigits !== internalSlots.minimumFractionDigits) {\n        throw new RangeError('With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.');\n    }\n    internalSlots.roundingIncrement = roundingIncrement;\n    var trailingZeroDisplay = GetOption(options, 'trailingZeroDisplay', 'string', ['auto', 'stripIfInteger'], 'auto');\n    internalSlots.trailingZeroDisplay = trailingZeroDisplay;\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    var defaultUseGrouping = 'auto';\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n        defaultUseGrouping = 'min2';\n    }\n    internalSlots.useGrouping = GetStringOrBooleanOption(options, 'useGrouping', ['min2', 'auto', 'always'], 'always', false, defaultUseGrouping);\n    internalSlots.signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero', 'negative'], 'auto');\n    internalSlots.roundingMode = GetOption(options, 'roundingMode', 'string', [\n        'ceil',\n        'floor',\n        'expand',\n        'trunc',\n        'halfCeil',\n        'halfFloor',\n        'halfExpand',\n        'halfTrunc',\n        'halfEven',\n    ], 'halfExpand');\n    return nf;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { LookupSupportedLocales } from '@formatjs/intl-localematcher';\nimport { ToObject } from './262';\nimport { GetOption } from './GetOption';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n    }\n    return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n"],"sourceRoot":""}