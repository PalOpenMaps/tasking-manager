{"version":3,"sources":["components/homepage/messages.js","components/header/topBar.js","components/homepage/contactForm.js","views/contact.js"],"names":["defineMessages","jumbotronTitle","id","defaultMessage","jumbotronHeadLine","secJumbotronTitle","secJumbotronHeadLine","secJumbotronHeadLine2","featuredProjects","howItWorks","startButton","joinButton","buildingsStats","roadsStats","editsStats","communityStats","mappersStats","statsLoadingError","mappingFlowTitle","mappingFlowHeadline","mappingCardTitle","validationCardTitle","usingDataCardTitle","mappingCardDescription","validationCardDescription","usingDataCardDescription","whoIsMappingTitle","whoIsMappingHeadline","organizationContactTitle","organizationContactButton","errorLoadingTheX","contacterTitle","contacterName","contacterEmail","contacterMessage","contacterHeaderText","contacterSend","serviceDesk","contactServiceDesk","testimonialsTitle","ifrcCitation","ifrcBio","TopBar","_ref","pageName","_jsx","className","children","ContactForm","props","labelClasses","fieldClasses","Form","onSubmit","values","submitMessage","initialValues","contactUsValues","render","handleSubmit","pristine","form","submitting","_jsxs","FormattedMessage","messages","SERVICE_DESK","b","chunks","href","target","rel","link","disabled","disabledForm","Field","name","component","type","required","FormSubmitButton","disabledClassName","ContactUsPopup","icon","title","body","proceed","proceedFn","Popup","modal","open","closeOnDocumentClick","close","_Fragment","Button","onClick","ContactPage","useSetTitleTag","navigate","useNavigate","sentStatus","setSentStatus","useState","popups","setPopupMessage","useEffect","HomeIcon","height","width","contactUsThanksTitle","contactUsThanksBody","contactUsThanksProceed","contactUs","pushToLocalJSONAPI","JSON","stringify","then","success","catch","e","AlertIcon","contactUsThanksError","message"],"mappings":"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","file":"static/js/contact.84cd115d.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on homepage.\n */\nexport default defineMessages({\n  jumbotronTitle: {\n    id: 'home.mainSection.title',\n    defaultMessage: 'Map for people in need',\n  },\n  jumbotronHeadLine: {\n    id: 'home.mainSection.lead',\n    defaultMessage:\n      'Join a global community that is mapping the places most vulnerable to disaster and poverty in order to support humanitarian aid and sustainable development across the world.',\n  },\n  secJumbotronTitle: {\n    id: 'home.callToAction.title',\n    defaultMessage: \"We can't do it without you\",\n  },\n  secJumbotronHeadLine: {\n    id: 'home.callToAction.firstLeadLine',\n    defaultMessage:\n      'Anyone can contribute to the map. If you have never mapped before and would like to get started, visit our {link} page.',\n  },\n  secJumbotronHeadLine2: {\n    id: 'home.callToAction.secondLeadLine',\n    defaultMessage:\n      'Are you an experienced mapper? Click below to see what projects are available for mapping.',\n  },\n  featuredProjects: {\n    id: 'home.featuredProjects.title',\n    defaultMessage: 'Featured Projects',\n  },\n  howItWorks: {\n    id: 'home.callToAction.learnLink',\n    defaultMessage: 'How it works',\n  },\n  startButton: {\n    id: 'home.mainSection.button.start',\n    defaultMessage: 'Start mapping',\n  },\n  joinButton: {\n    id: 'home.mainSection.button.join',\n    defaultMessage: 'Join the community',\n  },\n  buildingsStats: {\n    id: 'home.stats.buildings',\n    defaultMessage: 'Buildings Mapped',\n  },\n  roadsStats: {\n    id: 'home.stats.roads',\n    defaultMessage: 'Mapped Roads (Km)',\n  },\n  editsStats: {\n    id: 'home.stats.edits',\n    defaultMessage: 'Total Map Edits',\n  },\n  communityStats: {\n    id: 'home.stats.community',\n    defaultMessage: 'Total Mappers',\n  },\n  mappersStats: {\n    id: 'home.stats.mappers',\n    defaultMessage: 'Mappers Online',\n  },\n  statsLoadingError: {\n    id: 'home.stats.loading.error',\n    defaultMessage: 'An error occured while loading the stats',\n  },\n  mappingFlowTitle: {\n    id: 'home.mappingFlow.title',\n    defaultMessage:\n      'Each year, disasters around the world kill nearly {number} and affect or displace 200 million people. Mapping can help change this.',\n  },\n  mappingFlowHeadline: {\n    id: 'home.mappingFlow.headLine',\n    defaultMessage:\n      'Organizations use Tasking Manager to create mapping projects for areas around the world where data is needed to help save or improve lives.',\n  },\n  mappingCardTitle: {\n    id: 'home.mappingFlow.cards.mapping.title',\n    defaultMessage: 'Mapping',\n  },\n  validationCardTitle: {\n    id: 'home.mappingFlow.cards.validation.title',\n    defaultMessage: 'Validation',\n  },\n  usingDataCardTitle: {\n    id: 'home.mappingFlow.cards.usingData.title',\n    defaultMessage: 'Using the data',\n  },\n  mappingCardDescription: {\n    id: 'home.mappingFlow.cards.mapping.description',\n    defaultMessage:\n      'Volunteers use satellite imagery from OpenStreetMap to trace buildings, roadways, and other features.',\n  },\n  validationCardDescription: {\n    id: 'home.mappingFlow.cards.validation.description',\n    defaultMessage: 'Experienced volunteers check the map data to ensure it is high quality.',\n  },\n  usingDataCardDescription: {\n    id: 'home.mappingFlow.cards.usingData.description',\n    defaultMessage:\n      'Humanitarian organizations use the map data to plan for disaster response and other life saving activities.',\n  },\n  whoIsMappingTitle: {\n    id: 'home.whoIsMapping.title',\n    defaultMessage: 'Who uses the maps?',\n  },\n  whoIsMappingHeadline: {\n    id: 'home.whoIsMapping.headline',\n    defaultMessage:\n      'Trusted global organizations use Tasking Manager to get the map data they need to reach those in need.',\n  },\n  organizationContactTitle: {\n    id: 'home.whoIsMapping.contact.title',\n    defaultMessage: 'Does your organization want to work with us?',\n  },\n  organizationContactButton: {\n    id: 'home.whoIsMapping.contact.button',\n    defaultMessage: 'Contact us',\n  },\n  errorLoadingTheX: {\n    id: 'home.featuredProjects.error',\n    defaultMessage: 'Error loading the {xWord}',\n  },\n  contacterTitle: {\n    id: 'home.contact.contacterTitle',\n    defaultMessage: 'Send us a message',\n  },\n  contacterName: {\n    id: 'home.contact.contacterName',\n    defaultMessage: 'Name',\n  },\n  contacterEmail: {\n    id: 'home.contact.contacterEmail',\n    defaultMessage: 'Email',\n  },\n  contacterMessage: {\n    id: 'home.contact.contacterMessage',\n    defaultMessage: 'Message',\n  },\n  contacterHeaderText: {\n    id: 'home.contact.contacterHeadText',\n    defaultMessage:\n      'Want to discuss working with us? Or, have a question or feedback that you would like to share? Fill out the form below to contact our team.',\n  },\n  contacterSend: {\n    id: 'home.contact.submit',\n    defaultMessage: 'Send',\n  },\n  serviceDesk: {\n    id: 'home.contact.serviceDesk',\n    defaultMessage: 'Service Desk',\n  },\n  contactServiceDesk: {\n    id: 'home.contact.serviceDesk.description',\n    defaultMessage: 'You can also contact us through our <b>{link}</b>.',\n  },\n  testimonialsTitle: {\n    id: 'home.testimonials.title',\n    defaultMessage: 'You can make a difference',\n  },\n  ifrcCitation: {\n    id: 'home.testimonials.ifrc.citation',\n    defaultMessage:\n      'In the early days of the Cyclone Idai response, IFRC was looking for detailed maps to get a sense of the scale of the flooding, which were also used for search and rescue operations. Later on, we had requests to identify where certain buildings, such as health centres or hospitals, were located so our health team could assess the damage and medical needs of patients.',\n  },\n  ifrcBio: {\n    id: 'home.testimonials.ifrc.bio',\n    defaultMessage: 'Remote Coordinator for the IFRC Information Management Team for Cyclone Idai',\n  },\n});\n","import React from 'react';\n\nexport function TopBar({ pageName }: Object) {\n  return (\n    <div className=\"cf w-100 bg-mask\">\n      <div className=\"ph6-l\">\n        <h1 className=\"ttu f1 barlow-condensed white pv3 ph4 mt6 mb0 bg-red dib\">{pageName}</h1>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { FormSubmitButton } from '../button';\nimport { SERVICE_DESK } from '../../config';\n\nexport const ContactForm = (props) => {\n  const labelClasses = 'db pt3 pb2';\n  const fieldClasses = 'blue-grey w-100 pv3 ph2 input-reset ba b--grey-light bg-transparent';\n\n  return (\n    <Form\n      onSubmit={(values) => props.submitMessage(values)}\n      initialValues={props.contactUsValues}\n      render={({ handleSubmit, pristine, form, submitting, values }) => {\n        return (\n          <div className=\"blue-grey mb3\">\n            <div className={`bg-white b--grey-light pa4`}>\n              <h3 className=\"f3 fw6 dib blue-dark mv0\">\n                <FormattedMessage {...messages.contacterTitle} />\n              </h3>\n              <div className=\"pt3 lh-title\">\n                <FormattedMessage {...messages.contacterHeaderText} />\n                {SERVICE_DESK && ' '}\n                {SERVICE_DESK && (\n                  <FormattedMessage\n                    {...messages.contactServiceDesk}\n                    values={{\n                      b: (chunks) => (\n                        <a\n                          href={SERVICE_DESK}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                          className=\"red link\"\n                        >\n                          {chunks}\n                        </a>\n                      ),\n                      link: <FormattedMessage {...messages.serviceDesk} />,\n                    }}\n                  />\n                )}\n              </div>\n              <form id=\"contact-form\" onSubmit={handleSubmit}>\n                <fieldset className=\"bn pa0\" disabled={submitting || props.disabledForm}>\n                  <div className=\"cf\">\n                    <label className={labelClasses}>\n                      <FormattedMessage {...messages.contacterName} />\n                    </label>\n                    <Field\n                      name=\"name\"\n                      component=\"input\"\n                      type=\"text\"\n                      className={fieldClasses}\n                      required\n                    />\n                  </div>\n                  <div className=\"cf\">\n                    <label className={labelClasses}>\n                      <FormattedMessage {...messages.contacterEmail} />\n                    </label>\n                    <Field\n                      name=\"email\"\n                      type=\"email\"\n                      component=\"input\"\n                      className={fieldClasses}\n                      required\n                    />\n                  </div>\n                  <div className=\"cf\">\n                    <label className={labelClasses}>\n                      <FormattedMessage {...messages.contacterMessage} />\n                    </label>\n                    <Field\n                      name=\"content\"\n                      component=\"textarea\"\n                      type=\"text\"\n                      className={fieldClasses}\n                      required\n                    />\n                  </div>\n                  <div className=\"w-20-l w-40-m w-50 h-100 fr\">\n                    <FormSubmitButton\n                      disabled={submitting || pristine}\n                      className=\"w-100 h-100 bg-red white mt3\"\n                      disabledClassName=\"bg-red o-50 white w-100 h-100 mt3\"\n                    >\n                      <FormattedMessage {...messages.contacterSend} />\n                    </FormSubmitButton>\n                  </div>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        );\n      }}\n    ></Form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { TopBar } from '../components/header/topBar';\nimport { ContactForm } from '../components/homepage/contactForm';\nimport { pushToLocalJSONAPI } from '../network/genericJSONRequest';\nimport { AlertIcon, HomeIcon } from '../components/svgIcons';\nimport { Button } from '../components/button';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\n\nconst ContactUsPopup = ({ icon, title, body, proceed, proceedFn }) => (\n  <Popup modal open closeOnDocumentClick>\n    {(close) => (\n      <div className=\"pv4\">\n        <div className=\"cf tc red\">{icon}</div>\n        <div className=\"cf blue-dark tc\">\n          <>\n            <h3 className=\"barlow-condensed f3\">{title}</h3>\n            <div className=\"pt3\">{body}</div>\n            <Button\n              className=\"bg-red mt3 white\"\n              onClick={() => {\n                proceedFn();\n                close();\n              }}\n            >\n              {proceed}\n            </Button>\n          </>\n        </div>\n      </div>\n    )}\n  </Popup>\n);\n\nexport const ContactPage = () => {\n  useSetTitleTag('Contact us');\n  const navigate = useNavigate();\n  const [sentStatus, setSentStatus] = useState(null);\n  const [popups, setPopupMessage] = useState(null);\n\n  useEffect(() => {\n    if (sentStatus === 'success') {\n      setPopupMessage(\n        <ContactUsPopup\n          icon={<HomeIcon height=\"50px\" width=\"50px\" />}\n          title={<FormattedMessage {...messages.contactUsThanksTitle} />}\n          body={<FormattedMessage {...messages.contactUsThanksBody} />}\n          proceed={<FormattedMessage {...messages.contactUsThanksProceed} />}\n          proceedFn={() => {\n            navigate('/');\n          }}\n        />,\n      );\n    }\n  }, [navigate, sentStatus]);\n\n  const sendContactUs = (form) => {\n    setSentStatus('started');\n\n    pushToLocalJSONAPI(`system/contact-admin/`, JSON.stringify(form), null, 'POST')\n      .then((success) => setSentStatus('success'))\n      .catch((e) => {\n        setSentStatus('failure');\n        setPopupMessage(\n          <ContactUsPopup\n            icon={<AlertIcon height=\"50px\" width=\"50px\" />}\n            title={<FormattedMessage {...messages.contactUsThanksError} />}\n            body={e.message}\n            proceed={<FormattedMessage {...messages.contactUsThanksProceed} />}\n            proceedFn={() => null}\n          />,\n        );\n      });\n  };\n\n  return (\n    <div className=\"pt180 pull-center\">\n      <TopBar pageName={<FormattedMessage {...messages.contactUs} />} />\n      <div className=\"pl6-l ph4-ns ph2 mr4-l f5 w-60-l\">\n        <div className=\"cf f5 blue-dark\">\n          <ContactForm submitMessage={sendContactUs} />\n          {popups}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}