{"version":3,"sources":["components/rapidEditor.js"],"names":["baseCdnUrl","concat","rapidName","rapidVersion","equalsUrlParameters","first","second","size","key","value","has","get","updateUrl","hashParams","oldUrl","window","location","href","newUrl","pathname","search","toString","history","pushState","dispatchEvent","HashChangeEvent","generateStartingHash","_ref","comment","presets","gpxUrl","powerUser","imagery","URLSearchParams","hash","substring","set","undefined","join","startsWith","resizeRapid","rapidContext","_rapidContext$systems","uiSystem","systems","ui","started","resize","RapidEditor","_ref2","setDisable","showSidebar","dispatch","useDispatch","session","useSelector","state","auth","rapidLoaded","setRapidLoaded","useState","Rapid","context","dom","editor","locale","preferences","windowInit","useEffect","style","document","createElement","setAttribute","head","appendChild","script","src","async","onload","body","type","isVisible","className","Context","embed","containerNode","assetPath","apiConnections","url","OSM_SERVER_URL","client_id","OSM_CLIENT_ID","client_secret","OSM_CLIENT_SECRET","redirect_uri","OSM_REDIRECT_URI","types","SET_RAPIDEDITOR","newParams","containerRoot","getElementById","editListener","editSystem","changes","modified","length","created","deleted","updateDisableState","edits","_context$systems","promise","Promise","resolve","initAsync","then","on","_context$systems2","_document$getElementB","childNodes","removeChild","off","save","preauth","access_token","osm_oauth_token","_jsx","id"],"mappings":"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","file":"static/js/842.5b6fcff1.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { OSM_CLIENT_ID, OSM_CLIENT_SECRET, OSM_REDIRECT_URI, OSM_SERVER_URL } from '../config';\nimport { types } from '../store/actions/editor';\n\n// We import from a CDN using a SEMVER minor version range\nimport { version as rapidVersion, name as rapidName } from '@rapideditor/rapid/package.json';\n\nconst baseCdnUrl = `https://cdn.jsdelivr.net/npm/${rapidName}@~${rapidVersion}/dist/`;\n// We currently copy rapid files to the public/static/rapid directory. This should probably remain,\n// since it can be useful for debugging rapid issues in the TM.\n// const baseCdnUrl = '/static/rapid/';\n\n/**\n * Check if two URL search parameters are semantically equal\n * @param {URLSearchParams} first\n * @param {URLSearchParams} second\n * @return {boolean} true if they are semantically equal\n */\nfunction equalsUrlParameters(first, second) {\n  if (first.size === second.size) {\n    for (const [key, value] of first) {\n      if (!second.has(key) || second.get(key) !== value) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Update the URL (this also fires a hashchange event)\n * @param {URLSearchParams} hashParams the URL hash parameters\n */\nfunction updateUrl(hashParams) {\n  const oldUrl = window.location.href;\n  const newUrl = window.location.pathname + window.location.search + '#' + hashParams.toString();\n  window.history.pushState(null, '', newUrl);\n  window.dispatchEvent(\n    new HashChangeEvent('hashchange', {\n      newUrl: newUrl,\n      oldUrl: oldUrl,\n    }),\n  );\n}\n\n/**\n * Generate the starting hash for the project\n * @param {string | undefined} comment The comment to use\n * @param {Array.<String> | undefined} presets The presets\n * @param {string | undefined} gpxUrl The task boundaries\n * @param {boolean | undefined} powerUser if the user should be shown advanced options\n * @param {string | undefined} imagery The imagery to use for the task\n * @return {module:url.URLSearchParams | boolean} the new URL search params or {@code false} if no parameters changed\n */\nfunction generateStartingHash({ comment, presets, gpxUrl, powerUser, imagery }) {\n  const hashParams = new URLSearchParams(window.location.hash.substring(1));\n  if (comment) {\n    hashParams.set('comment', comment);\n  }\n  if (gpxUrl) {\n    hashParams.set('data', gpxUrl);\n  }\n  if (powerUser !== undefined) {\n    hashParams.set('poweruser', powerUser.toString());\n  }\n  if (presets) {\n    hashParams.set('presets', presets.join(','));\n  }\n  if (imagery) {\n    if (imagery.startsWith('http')) {\n      hashParams.set('background', 'custom:' + imagery);\n    } else {\n      hashParams.set('background', imagery);\n    }\n  }\n  if (equalsUrlParameters(hashParams, new URLSearchParams(window.location.hash.substring(1)))) {\n    return false;\n  }\n  return hashParams;\n}\n\n/**\n * Resize rapid\n * @param {Context} rapidContext The rapid context to resize\n * @type {import('@rapideditor/rapid').Context} Context\n */\nfunction resizeRapid(rapidContext) {\n  // Get rid of black bars when toggling the TM sidebar\n  const uiSystem = rapidContext?.systems?.ui;\n  if (uiSystem?.started) {\n    uiSystem.resize();\n  }\n}\n\n/**\n * Check if there are changes\n * @param changes The changes to check\n * @returns {boolean} {@code true} if there are changes\n */\nfunction thereAreChanges(changes) {\n  return changes.modified.length || changes.created.length || changes.deleted.length;\n}\n\n/**\n * Update the disable state for the sidebar map actions\n * @param {function(boolean)} setDisable\n * @param {EditSystem} editSystem The edit system\n * @type {import('@rapideditor/rapid/modules').EditSystem} EditSystem\n */\nfunction updateDisableState(setDisable, editSystem) {\n  if (thereAreChanges(editSystem.changes())) {\n    setDisable(true);\n  } else {\n    setDisable(false);\n  }\n}\n\n/**\n * Create a new RapidEditor component\n * @param {function(boolean)} setDisable\n * @param {string} comment The default changeset comment\n * @param {[string]|null|undefined} presets The presets to allow the user to use\n * @param {string|null|undefined} imagery The imagery to default to for the user\n * @param {string} gpxUrl The task boundary url\n * @param {boolean} powerUser true if the user should be shown advanced options\n * @param {boolean} showSidebar Changes are used to resize the Rapid mapview\n * @returns {JSX.Element} The element to add to the DOM\n * @constructor\n */\nfunction RapidEditor({\n  setDisable,\n  comment,\n  presets,\n  imagery,\n  gpxUrl,\n  powerUser = false,\n  showSidebar = true,\n}) {\n  const dispatch = useDispatch();\n  const session = useSelector((state) => state.auth.session);\n  const [rapidLoaded, setRapidLoaded] = useState(window.Rapid !== undefined);\n  const { context, dom } = useSelector((state) => state.editor.rapidContext);\n  const locale = useSelector((state) => state.preferences.locale);\n  const windowInit = typeof window !== 'undefined';\n\n  // This significantly reduces build time _and_ means different TM instances can share the same download of Rapid.\n  // Unfortunately, Rapid doesn't use a public CDN itself, so we cannot reuse that.\n  useEffect(() => {\n    if (!rapidLoaded && !context) {\n      // Add the style element\n      const style = document.createElement('link');\n      style.setAttribute('type', 'text/css');\n      style.setAttribute('rel', 'stylesheet');\n      style.setAttribute('href', baseCdnUrl + 'rapid.css');\n      document.head.appendChild(style);\n      // Now add the editor\n      const script = document.createElement('script');\n      script.src = baseCdnUrl + 'rapid.js';\n      script.async = true;\n      script.onload = () => setRapidLoaded(true);\n      document.body.appendChild(script);\n    } else if (context && !rapidLoaded) {\n      setRapidLoaded(true);\n    }\n  }, [rapidLoaded, setRapidLoaded, context]);\n\n  useEffect(() => {\n    return () => {\n      dispatch({ type: 'SET_VISIBILITY', isVisible: true });\n    };\n  });\n\n  useEffect(() => {\n    if (windowInit && context === null && rapidLoaded) {\n      /* This is used to avoid needing to re-initialize Rapid on every page load -- this can lead to jerky movements in the UI */\n      const dom = document.createElement('div');\n      dom.className = 'w-100 vh-minus-69-ns';\n      // we need to keep Rapid context on redux store because Rapid works better if\n      // the context is not restarted while running in the same browser session\n      // Unfortunately, we need to recreate the context every time we recreate the rapid-container dom node.\n      const context = new window.Rapid.Context();\n      context.embed(true);\n      context.containerNode = dom;\n      context.assetPath = baseCdnUrl;\n      context.apiConnections = [\n        {\n          url: OSM_SERVER_URL,\n          client_id: OSM_CLIENT_ID,\n          client_secret: OSM_CLIENT_SECRET,\n          redirect_uri: OSM_REDIRECT_URI,\n        },\n      ];\n      dispatch({ type: types.SET_RAPIDEDITOR, context: { context, dom } });\n    }\n  }, [windowInit, rapidLoaded, context, dispatch]);\n\n  useEffect(() => {\n    if (context) {\n      // setup the context\n      context.locale = locale;\n    }\n  }, [context, locale]);\n\n  // This ensures that Rapid has the correct map size\n  useEffect(() => {\n    // This might be a _slight_ efficiency improvement by making certain that Rapid isn't painting unneeded items\n    resizeRapid(context);\n    // This is the only bit that is *really* needed -- it prevents black bars when hiding the sidebar.\n    return () => resizeRapid(context);\n  }, [showSidebar, context]);\n\n  useEffect(() => {\n    const newParams = generateStartingHash({ comment, presets, gpxUrl, powerUser, imagery });\n    if (newParams) {\n      updateUrl(newParams);\n    }\n  }, [comment, presets, gpxUrl, powerUser, imagery]);\n\n  useEffect(() => {\n    const containerRoot = document.getElementById('rapid-container-root');\n    const editListener = () => updateDisableState(setDisable, context.systems.edits);\n    if (context && dom) {\n      containerRoot.appendChild(dom);\n      // init the ui or restart if it was loaded previously\n      let promise;\n      if (context?.systems?.ui !== undefined) {\n        // Currently commented out in Rapid source code (2023-07-20)\n        // RapidContext.systems.ui.restart();\n        resizeRapid(context);\n        promise = Promise.resolve();\n      } else {\n        promise = context.initAsync();\n      }\n\n      /* Perform tasks after Rapid has started up */\n      promise.then(() => {\n        /* Keep track of edits */\n        const editSystem = context.systems.edits;\n\n        editSystem.on('change', editListener);\n        editSystem.on('reset', editListener);\n      });\n    }\n    return () => {\n      if (containerRoot?.childNodes && dom in containerRoot.childNodes) {\n        document.getElementById('rapid-container-root')?.removeChild(dom);\n      }\n      if (context?.systems?.edits) {\n        const editSystem = context.systems.edits;\n        editSystem.off('change', editListener);\n        editSystem.off('reset', editListener);\n      }\n    };\n  }, [dom, context, setDisable]);\n\n  useEffect(() => {\n    if (context) {\n      return () => context.save();\n    }\n  }, [context]);\n\n  useEffect(() => {\n    if (context && session) {\n      context.preauth = {\n        url: OSM_SERVER_URL,\n        client_id: OSM_CLIENT_ID,\n        client_secret: OSM_CLIENT_SECRET,\n        redirect_uri: OSM_REDIRECT_URI,\n        access_token: session.osm_oauth_token,\n      };\n      context.apiConnections = [context.preauth];\n    }\n  }, [context, session, session?.osm_oauth_token]);\n\n  return <div className=\"w-100 vh-minus-69-ns\" id=\"rapid-container-root\"></div>;\n}\n\nRapidEditor.propTypes = {\n  setDisable: PropTypes.func,\n  comment: PropTypes.string,\n  presets: PropTypes.array,\n  imagery: PropTypes.string,\n  gpxUrl: PropTypes.string.isRequired,\n  powerUser: PropTypes.bool.isRequired,\n  showSidebar: PropTypes.bool.isRequired,\n};\n\nexport { RapidEditor, generateStartingHash, equalsUrlParameters, updateUrl };\nexport default RapidEditor;\n"],"sourceRoot":""}