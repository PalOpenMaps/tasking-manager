{"version":3,"sources":["views/login.js"],"names":["Login","_ref","_location$state2","redirectTo","useSetTitleTag","navigate","useNavigate","location","useLocation","userIsloggedIn","useSelector","state","auth","token","useEffect","_location$state","from","_jsxs","className","children","_jsx","src","ORG_LOGO","logo","alt","concat","ORG_NAME","FormattedMessage","messages","loginRequired","values","org","ORG_CODE","loginWithOSM","createAccount","AuthButtons","logInStyle","signUpStyle","_location$state3","alternativeSignUpText"],"mappings":"6IAAA,gIAWO,SAASA,EAAKC,GAA0B,IAADC,EAAA,IAAxB,WAAEC,GAAoBF,EAC1CG,YAAe,SACf,MAAMC,EAAWC,cACXC,EAAWC,cACXC,EAAiBC,aAAaC,GAAUA,EAAMC,KAAKC,QAQzD,OANAC,qBAAU,KACa,IAADC,EAAhBN,GACFJ,EAASF,IAA4B,QAAlBY,EAAIR,EAASI,aAAK,IAAAI,OAAA,EAAdA,EAAgBC,OAAQ,WACjD,GACC,CAAe,QAAfd,EAACK,EAASI,aAAK,IAAAT,OAAA,EAAdA,EAAgBc,KAAMX,EAAUF,EAAYM,IAE3CA,EA4BI,KA1BLQ,eAAA,OAAKC,UAAU,kCAAiCC,SAAA,CAC9CC,cAAA,OAAKF,UAAU,cAAaC,SAC1BC,cAAA,OAAKC,IAAKC,KAAYC,IAAMC,IAAG,GAAAC,OAAKC,IAAQ,SAASR,UAAU,mBAEjEE,cAAA,MAAIF,UAAU,iCAAgCC,SAC5CC,cAACO,IAAgB,IAAKC,IAASC,cAAeC,OAAQ,CAAEC,IAAKC,SAE/Df,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAC1BC,cAAA,KAAGF,UAAU,eAAcC,SACzBC,cAACO,IAAgB,IAAKC,IAASK,iBAEjCb,cAAA,KAAGF,UAAU,eAAcC,SACzBC,cAACO,IAAgB,IAAKC,IAASM,qBAGnCd,cAAA,OAAKF,UAAU,SAAQC,SACrBC,cAACe,IAAW,CACVC,WAAW,qBACXC,YAAY,+BACZlC,WAAYA,IAA4B,QAAlBmC,EAAI/B,EAASI,aAAK,IAAA2B,OAAA,EAAdA,EAAgBtB,OAAQ,WAClDuB,uBAAuB,SAtBX,IAADD,CA8BvB,C","file":"static/js/login.11a5dd78.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport { AuthButtons } from '../components/header';\nimport messages from './messages';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { ORG_LOGO, ORG_NAME, ORG_CODE } from '../config';\nimport logo from '../assets/img/main-logo.svg';\n\nexport function Login({ redirectTo }: Object) {\n  useSetTitleTag('Login');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const userIsloggedIn = useSelector((state) => state.auth.token);\n\n  useEffect(() => {\n    if (userIsloggedIn) {\n      navigate(redirectTo || location.state?.from || '/welcome');\n    }\n  }, [location.state?.from, navigate, redirectTo, userIsloggedIn]);\n\n  if (!userIsloggedIn) {\n    return (\n      <div className=\"cf w-100 bg-white blue-dark pv5\">\n        <div className=\"cf w-100 tc\">\n          <img src={ORG_LOGO || logo} alt={`${ORG_NAME} logo`} className=\"h3 v-mid pb3\" />\n        </div>\n        <h3 className=\"f2 fw6 barlow-condensed tc mt3\">\n          <FormattedMessage {...messages.loginRequired} values={{ org: ORG_CODE }} />\n        </h3>\n        <div className=\"cf w-100 tc\">\n          <p className=\"lh-solid mv1\">\n            <FormattedMessage {...messages.loginWithOSM} />\n          </p>\n          <p className=\"lh-solid mv2\">\n            <FormattedMessage {...messages.createAccount} />\n          </p>\n        </div>\n        <div className=\"tc pv4\">\n          <AuthButtons\n            logInStyle=\"blue-dark bg-white\"\n            signUpStyle=\"bg-blue-dark white ml1 v-mid\"\n            redirectTo={redirectTo || location.state?.from || '/welcome'}\n            alternativeSignUpText={true}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"],"sourceRoot":""}