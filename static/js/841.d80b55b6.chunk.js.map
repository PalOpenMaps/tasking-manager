{"version":3,"sources":["components/taskSelection/messages.js","utils/formatChartJSData.js","components/projectStats/taskStatus.js"],"names":["defineMessages","unsavedChanges","id","defaultMessage","unsavedChangesToSplit","unsavedChangesToUnlock","unsavedChangesToReloadEditor","unsavedChangesTooltip","closeModal","deselectAndValidate","cantValidateMappedTask","priorityAreasLoadingError","noMappedTasksSelectedError","noMappedTasksSelectedErrorDescription","InvalidTaskStateError","InvalidTaskStateErrorDescription","UserNotAllowedError","UserNotAllowedErrorDescription","ProjectNotPublishedError","ProjectNotPublishedErrorDescription","TaskNotOwnedError","TaskNotOwnedErrorDescription","NotReadyForValidationError","NotReadyForValidationErrorDescription","CannotValidateMappedTaskError","CannotValidateMappedTaskErrorDescription","JOSMError","JOSMErrorDescription","lockError","lockErrorDescription","lockErrorLicense","lockErrorLicenseDescription","acceptLicense","cancel","anotherLockedTask","anotherProjectLockTextSingular","anotherProjectLockTextPlural","currentProjectLockTextSingular","currentProjectLockTextPlural","goToProject","workOnTasksSingular","workOnTasksPlural","legend","typesOfMapping","editor","selectEditor","filterPlaceholder","reloadEditor","openEditor","showSidebar","sessionAboutToExpireTitle","sessionAboutToExpireDescription","extendTime","sessionExtended","sessionExtensionError","sessionExpiredTitle","sessionExpiredDescription","relockTask","taskRelocked","taskRelockError","hideSidebar","timeToUnlock","task","tasks","taskId","instructions","projectIsArchived","enforcedRandomTaskSelection","changesetComment","contributions","registered","imagery","customTMSLayer","customWMSLayer","customWMTSLayer","customLayer","noImageryDefined","copyImageryURL","mapATask","mapSelectedTask","mapAnotherTask","validateATask","validateSelectedTask","validateAnotherTask","selectAnotherProject","resumeMapping","resumeValidation","taskLastUpdate","seeTaskHistory","zoomToTask","copyTaskLink","taskLinkCopied","taskStatus_PRIORITY_AREAS","taskStatus_READY","taskStatus_MAPPED","taskStatus_LOCKED","taskStatus_LOCKED_FOR_MAPPING","taskStatus_LOCKED_FOR_VALIDATION","taskStatus_VALIDATED","taskStatus_INVALIDATED","taskStatus_BADIMAGERY","taskStatus_SPLIT","sortById","sortByMostRecentlyUpdate","sortByLeastRecentlyUpdate","filterAll","filterReadyToValidate","filterReadyToMap","noTasksFound","readTaskComments","completion","history","taskHistoryComments","taskHistoryActivities","taskHistoryAll","copyComment","copyCommentToAll","copyCommentToINVALIDATED","copyCommentToVALIDATED","resources","finishMappingTitle","instructionsSelect","writeComment","instructionsComment","instructionsSubmit","comment","redirectToPreviousProject","commentPlaceholder","editStatus","revertVALIDATED","confirmRevertVALIDATED","revertBADIMAGERY","confirmRevertBADIMAGERY","proceed","yes","no","mappedQuestion","validatedQuestion","complete","incomplete","badImagery","splitTask","splitTaskError","splitTaskErrorDescription","splitTaskGenericError","selectAnotherTask","stopMappingError","stopValidation","stopValidationError","tasksMap","submitTask","submitTasks","submitTaskError","taskActivity","taskUnavailable","taskSplitDescription","taskData","projectId","overpassDownload","overpassVisualization","projectData","changesets","selectTask","entireProject","seeTaskChangesets","taskOnOSMCha","taskHistoryComment","taskDetailFetchError","noCommentsYet","noActivitiesToDisplay","taskHistoryLockedMapping","taskHistoryLockedValidation","taskHistoryAutoUnlockedMapping","taskHistoryAutoUnlockedValidation","taskHistoryExtendedForMapping","taskHistoryExtendedForValidation","taskHistoryBadImagery","taskHistoryMapped","taskHistoryValidated","taskHistoryInvalidated","taskHistorySplit","taskHistoryReady","map","mapped","validate","validated","total","lockedBy","taskExtraInfo","userFilterDefaultLabel","mappingLevelALL","mappingLevelADVANCED","mappingLevelINTERMEDIATE","mappingLevelBEGINNER","mappingLevelNEWUSER","statistics","mappedByUser","validatedByUser","allUserTasks","permissionErrorTitle","permissionError_userLevelToValidate","permissionError_userLevelToMap","permissionError_userIsNotValidationTeamMember","permissionError_userIsNotMappingTeamMember","formatChartData","reference","stats","data","datasets","backgroundColor","labels","f","field","reduce","a","b","v","Math","round","borderColor","label","formatTimelineData","mappedTasksConfig","validatedTasksConfig","color","fill","entry","date","cumulative_mapped","total_tasks","cumulative_validated","formatTasksStatsData","formatTooltip","context","dataset","dataIndex","concat","formatTimelineTooltip","isPercent","ChartJS","register","ArcElement","BarElement","CategoryScale","LinearScale","Tooltip","Legend","TasksByStatus","_ref","intl","useIntl","getLabel","status","formatMessage","statusMessages","TASK_COLOURS","INVALIDATED","READY","LOCKED_FOR_MAPPING","MAPPED","LOCKED_FOR_VALIDATION","VALIDATED","BADIMAGERY","_jsxs","className","children","_jsx","FormattedMessage","messages","Doughnut","options","aspectRatio","plugins","position","boxWidth","tooltip","callbacks","n","StatsCardContent","value"],"mappings":"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","file":"static/js/841.d80b55b6.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on task selection.\n */\nexport default defineMessages({\n  unsavedChanges: {\n    id: 'project.tasks.unsaved_map_changes.title',\n    defaultMessage: 'You have some unsaved map changes',\n  },\n  unsavedChangesToSplit: {\n    id: 'project.tasks.unsaved_map_changes.split',\n    defaultMessage: 'Save or undo it to be able to split the task',\n  },\n  unsavedChangesToUnlock: {\n    id: 'project.tasks.unsaved_map_changes.unlock',\n    defaultMessage: 'Save or undo it to be able to select another task',\n  },\n  unsavedChangesToReloadEditor: {\n    id: 'project.tasks.unsaved_map_changes.reload_editor',\n    defaultMessage: 'Save or undo it to be able to switch editors',\n  },\n  unsavedChangesTooltip: {\n    id: 'project.tasks.unsaved_map_changes.tooltip',\n    defaultMessage: 'You have unsaved edits. Save or undo them to submit this task.',\n  },\n  closeModal: {\n    id: 'project.tasks.unsaved_map_changes.actions.close_modal',\n    defaultMessage: 'Close',\n  },\n  deselectAndValidate: {\n    id: 'project.tasks.validation.cannot_validate_mapped_tasks.deselect_and_validate',\n    defaultMessage: 'Deselect and validate',\n  },\n  cantValidateMappedTask: {\n    id: 'project.tasks.select.cantValidateMappedTask',\n    defaultMessage: 'This task was mapped by you',\n  },\n  priorityAreasLoadingError: {\n    id: 'project.tasks.selection.map.priorityAreas.loading.error',\n    defaultMessage: 'An error occured while loading the priority areas for the project',\n  },\n  noMappedTasksSelectedError: {\n    id: 'project.tasks.no_mapped_tasks_selected',\n    defaultMessage: 'No mapped tasks selected',\n  },\n  noMappedTasksSelectedErrorDescription: {\n    id: 'project.tasks.no_mapped_tasks_selected.description',\n    defaultMessage:\n      'It was not possible to lock the selected tasks, as none of them are on the mapped status.',\n  },\n  InvalidTaskStateError: {\n    id: 'project.tasks.invalid_task_state_errortitle',\n    defaultMessage: 'Invalid Task State',\n  },\n  InvalidTaskStateErrorDescription: {\n    id: 'project.tasks.invalid_task_state_error.description',\n    defaultMessage: 'Task in invalid state for mapping',\n  },\n  UserNotAllowedError: {\n    id: 'project.tasks.user_not_allowed_error.title',\n    defaultMessage: 'User Not Allowed Error',\n  },\n  UserNotAllowedErrorDescription: {\n    id: 'project.tasks.user_not_allowed_error.description',\n    defaultMessage: 'Mapping not allowed because user not on allowed list',\n  },\n  ProjectNotPublishedError: {\n    id: 'project.tasks.project_not_published_error.title',\n    defaultMessage: 'Project Not Published',\n  },\n  ProjectNotPublishedErrorDescription: {\n    id: 'project.tasks.project_not_published_error.description',\n    defaultMessage: 'Mapping not allowed because project not published',\n  },\n  TaskNotOwnedError: {\n    id: 'project.tasks.task_not_owned_error.title',\n    defaultMessage: 'Task Not Owned',\n  },\n  TaskNotOwnedErrorDescription: {\n    id: 'project.tasks.task_not_owned_error.description',\n    defaultMessage: 'Attempting to unlock a task owned by another user',\n  },\n  NotReadyForValidationError: {\n    id: 'project.tasks.not_ready_for_validation_error.title',\n    defaultMessage: 'Not Ready for Validation',\n  },\n  NotReadyForValidationErrorDescription: {\n    id: 'project.tasks.not_ready_for_validation_error.description',\n    defaultMessage: 'Task is not MAPPED, BADIMAGERY or INVALIDATED',\n  },\n  CannotValidateMappedTaskError: {\n    id: 'project.tasks.cannot_validate_mapped_task_error.title',\n    defaultMessage: 'Cannot Validate Mapped Task',\n  },\n  CannotValidateMappedTaskErrorDescription: {\n    id: 'project.tasks.cannot_validate_mapped_task_error.description',\n    defaultMessage:\n      'Tasks cannot be validated by the same user who marked task as mapped or badimagery',\n  },\n  JOSMError: {\n    id: 'project.tasks.josm_error',\n    defaultMessage: 'Connection with JOSM failed',\n  },\n  JOSMErrorDescription: {\n    id: 'project.tasks.josm_error.description',\n    defaultMessage:\n      'Please verify if JOSM is running on your computer and the remote control is enabled.',\n  },\n  lockError: {\n    id: 'project.tasks.lock_error.generic',\n    defaultMessage: \"It wasn't possible to lock this task for you...\",\n  },\n  lockErrorDescription: {\n    id: 'project.tasks.lock_error.generic.description',\n    defaultMessage:\n      'Some error occurred when trying to lock this task. Check if your user matches the level, role and permissions required by this project.',\n  },\n  lockErrorLicense: {\n    id: 'project.tasks.lock_error.license.title',\n    defaultMessage: 'This project has a required license.',\n  },\n  lockErrorLicenseDescription: {\n    id: 'project.tasks.lock_error.license.description',\n    defaultMessage: 'Please accept this license in order to collaborate in this project. ',\n  },\n  acceptLicense: {\n    id: 'project.tasks.lock_error.license.accept',\n    defaultMessage: 'Accept',\n  },\n  cancel: {\n    id: 'project.tasks.lock_error.cancel',\n    defaultMessage: 'Cancel',\n  },\n  anotherLockedTask: {\n    id: 'project.tasks.lock_error.another_project',\n    defaultMessage: 'We found another mapping task already locked by you',\n  },\n  anotherProjectLockTextSingular: {\n    id: 'project.tasks.lock_error.another_project.description.singular',\n    defaultMessage:\n      'It is on the Project #{project}. You will need to update the status of that task before you can map another task.',\n  },\n  anotherProjectLockTextPlural: {\n    id: 'project.tasks.lock_error.another_project.description.plural',\n    defaultMessage:\n      'It is on the Project #{project}. You will need to update the status of that task before you can map another task.',\n  },\n  currentProjectLockTextSingular: {\n    id: 'project.tasks.lock_error.current_project.description.singular',\n    defaultMessage:\n      'The task #{taskId} was previously locked by you. You will need to update the status of that task before you can map another task.',\n  },\n  currentProjectLockTextPlural: {\n    id: 'project.tasks.lock_error.current_project.description.plural',\n    defaultMessage:\n      'Some tasks were previously locked by you on this project. You will need to update the status of those tasks before you can map another task.',\n  },\n  goToProject: {\n    id: 'project.tasks.lock_error.go_to_project.button',\n    defaultMessage: 'Go to Project #{project}',\n  },\n  workOnTasksSingular: {\n    id: 'project.tasks.lock_error.work_on_tasks.singular.button',\n    defaultMessage: '{mapOrValidate} that task',\n  },\n  workOnTasksPlural: {\n    id: 'project.tasks.lock_error.work_on_tasks.plural.button',\n    defaultMessage: '{mapOrValidate} those tasks',\n  },\n  legend: {\n    id: 'project.tasks.map.legend',\n    defaultMessage: 'Legend',\n  },\n  typesOfMapping: {\n    id: 'project.typesOfMapping',\n    defaultMessage: 'Types of Mapping',\n  },\n  editor: {\n    id: 'project.editor',\n    defaultMessage: 'Editor',\n  },\n  selectEditor: {\n    id: 'project.editor.select',\n    defaultMessage: 'Select editor',\n  },\n  filterPlaceholder: {\n    id: 'project.input.placeholders.filter',\n    defaultMessage: 'Filter tasks by id or username',\n  },\n  reloadEditor: {\n    id: 'project.editor.reload_editor',\n    defaultMessage: 'Reload editor',\n  },\n  openEditor: {\n    id: 'project.editor.open_editor',\n    defaultMessage: 'Open editor',\n  },\n  showSidebar: {\n    id: 'project.sidebar.show',\n    defaultMessage: 'Show sidebar',\n  },\n  sessionAboutToExpireTitle: {\n    id: 'project.sidebar.lockTimeAboutToExpire.title',\n    defaultMessage: 'Extend session for this task',\n  },\n  sessionAboutToExpireDescription: {\n    id: 'project.sidebar.lockTimeAboutToExpire.description',\n    defaultMessage:\n      'Your session of two hours is about to expire. Do you want to extend your time for this session to continue working on this task?',\n  },\n  extendTime: {\n    id: 'project.sidebar.extendTime',\n    defaultMessage: 'Extend session',\n  },\n  sessionExtended: {\n    id: 'project.sidebar.sessionExtended',\n    defaultMessage: 'Your session has been extended',\n  },\n  sessionExtensionError: {\n    id: 'project.sidebar.sessionExtensionError',\n    defaultMessage: 'An error occurred while extending your session.',\n  },\n  sessionExpiredTitle: {\n    id: 'project.sidebar.sessionExpired.title',\n    defaultMessage: 'Your session has expired',\n  },\n  sessionExpiredDescription: {\n    id: 'project.sidebar.sessionExpired.description',\n    defaultMessage:\n      'Do you want to relock the tasks to extend the session so that you can update the status of the {count, plural, =1 {task} other{tasks}}?',\n  },\n  relockTask: {\n    id: 'project.sidebar.relockTask',\n    defaultMessage: 'Relock {count, plural, =1 {task} other{tasks}}',\n  },\n  taskRelocked: {\n    id: 'project.sidebar.taskRelocked',\n    defaultMessage: 'Your {count, plural, =1 {task has} other{tasks have}} been relocked.',\n  },\n  taskRelockError: {\n    id: 'project.sidebar.taskRelockError',\n    defaultMessage:\n      'An error occurred while relocking your {count, plural, =1 {task} other{tasks}}.',\n  },\n  hideSidebar: {\n    id: 'project.sidebar.hide',\n    defaultMessage: 'Hide sidebar',\n  },\n  timeToUnlock: {\n    id: 'project.sidebar.timeToUnlock',\n    defaultMessage: 'Time available for you to complete work on this task',\n  },\n  task: {\n    id: 'project.task',\n    defaultMessage: 'Task',\n  },\n  tasks: {\n    id: 'project.tasks',\n    defaultMessage: 'Tasks',\n  },\n  taskId: {\n    id: 'project.taskId',\n    defaultMessage: 'Task #{id}',\n  },\n  instructions: {\n    id: 'project.instructions',\n    defaultMessage: 'Instructions',\n  },\n  projectIsArchived: {\n    id: 'project.isArchived',\n    defaultMessage:\n      'This project is archived and read-only. You can view the project, but you cannot update tasks.',\n  },\n  enforcedRandomTaskSelection: {\n    id: 'project.enforcedRandomTaskSelection',\n    defaultMessage:\n      \"This project has enforced random task selection for mapping. When you click the 'Map a task' button, a random task will be presented for mapping.\",\n  },\n  changesetComment: {\n    id: 'project.changesetComment',\n    defaultMessage: 'Changeset comment',\n  },\n  contributions: {\n    id: 'project.contributions',\n    defaultMessage: 'contributions',\n  },\n  registered: {\n    id: 'project.contributions.registered',\n    defaultMessage: 'Registered on',\n  },\n  imagery: {\n    id: 'project.imagery',\n    defaultMessage: 'Imagery',\n  },\n  customTMSLayer: {\n    id: 'project.imagery.tms',\n    defaultMessage: 'Custom TMS Layer',\n  },\n  customWMSLayer: {\n    id: 'project.imagery.wms',\n    defaultMessage: 'Custom WMS Layer',\n  },\n  customWMTSLayer: {\n    id: 'project.imagery.wmts',\n    defaultMessage: 'Custom WMTS Layer',\n  },\n  customLayer: {\n    id: 'project.imagery.customLayer',\n    defaultMessage: 'Custom Layer',\n  },\n  noImageryDefined: {\n    id: 'project.imagery.noDefined',\n    defaultMessage: 'Any available source',\n  },\n  copyImageryURL: {\n    id: 'project.imagery.copy',\n    defaultMessage: 'Copy imagery URL',\n  },\n  mapATask: {\n    id: 'project.selectTask.footer.button.mapRandomTask',\n    defaultMessage: 'Map a task',\n  },\n  mapSelectedTask: {\n    id: 'project.selectTask.footer.button.mapSelectedTask',\n    defaultMessage: 'Map selected task',\n  },\n  mapAnotherTask: {\n    id: 'project.selectTask.footer.button.mapAnotherTask',\n    defaultMessage: 'Map another task',\n  },\n  validateATask: {\n    id: 'project.selectTask.footer.button.validateRandomTask',\n    defaultMessage: 'Validate a task',\n  },\n  validateSelectedTask: {\n    id: 'project.selectTask.footer.button.validateSelectedTask',\n    defaultMessage:\n      '{number, plural, one {Validate selected task} other {Validate # selected tasks}}',\n  },\n  validateAnotherTask: {\n    id: 'project.selectTask.footer.button.validateAnotherTask',\n    defaultMessage: 'Validate another task',\n  },\n  selectAnotherProject: {\n    id: 'project.selectTask.footer.button.selectAnotherProject',\n    defaultMessage: 'Select another project',\n  },\n  resumeMapping: {\n    id: 'project.selectTask.footer.button.resumeMapping',\n    defaultMessage: 'Resume mapping',\n  },\n  resumeValidation: {\n    id: 'project.selectTask.footer.button.resumeValidation',\n    defaultMessage: 'Resume validation',\n  },\n  taskLastUpdate: {\n    id: 'project.tasks.list.lastUpdate',\n    defaultMessage: 'Last updated by {user}',\n  },\n  seeTaskHistory: {\n    id: 'project.tasks.list.details',\n    defaultMessage: 'See task history',\n  },\n  zoomToTask: {\n    id: 'project.tasks.list.zoom',\n    defaultMessage: 'Zoom map to task',\n  },\n  copyTaskLink: {\n    id: 'project.tasks.list.copyLink',\n    defaultMessage: 'Copy task link',\n  },\n  taskLinkCopied: {\n    id: 'project.tasks.list.linkCopied',\n    defaultMessage: 'Task link copied to the clipboard',\n  },\n  taskStatus_PRIORITY_AREAS: {\n    id: 'project.tasks.priority_areas',\n    defaultMessage: 'Priority areas',\n  },\n  taskStatus_READY: {\n    id: 'project.tasks.status.ready',\n    defaultMessage: 'Available for mapping',\n  },\n  taskStatus_MAPPED: {\n    id: 'project.tasks.status.mapped',\n    defaultMessage: 'Ready for validation',\n  },\n  taskStatus_LOCKED: {\n    id: 'project.tasks.status.locked',\n    defaultMessage: 'Locked',\n  },\n  taskStatus_LOCKED_FOR_MAPPING: {\n    id: 'project.tasks.status.lockedForMapping',\n    defaultMessage: 'Locked for mapping',\n  },\n  taskStatus_LOCKED_FOR_VALIDATION: {\n    id: 'project.tasks.status.lockedForValidation',\n    defaultMessage: 'Locked for validation',\n  },\n  taskStatus_VALIDATED: {\n    id: 'project.tasks.status.validated',\n    defaultMessage: 'Finished',\n  },\n  taskStatus_INVALIDATED: {\n    id: 'project.tasks.status.invalidated',\n    defaultMessage: 'More mapping needed',\n  },\n  taskStatus_BADIMAGERY: {\n    id: 'project.tasks.status.badImagery',\n    defaultMessage: 'Unavailable',\n  },\n  taskStatus_SPLIT: {\n    id: 'project.tasks.status.split',\n    defaultMessage: 'Split',\n  },\n  sortById: {\n    id: 'project.tasks.sorting.id',\n    defaultMessage: 'Sort by task number',\n  },\n  sortByMostRecentlyUpdate: {\n    id: 'project.tasks.sorting.date',\n    defaultMessage: 'Most recently updated',\n  },\n  sortByLeastRecentlyUpdate: {\n    id: 'project.tasks.sorting.date.reverse',\n    defaultMessage: 'Least recently updated',\n  },\n  filterAll: {\n    id: 'project.tasks.filter.all',\n    defaultMessage: 'All',\n  },\n  filterReadyToValidate: {\n    id: 'project.tasks.filter.readyToValidate',\n    defaultMessage: 'Ready for validation',\n  },\n  filterReadyToMap: {\n    id: 'project.tasks.filter.readyToMap',\n    defaultMessage: 'Available for mapping',\n  },\n  noTasksFound: {\n    id: 'project.tasks.filter.noTasksFound',\n    defaultMessage: 'No tasks were found.',\n  },\n  readTaskComments: {\n    id: 'project.tasks.readComments',\n    defaultMessage: 'Please check the history tab for relevant comments.',\n  },\n  completion: {\n    id: 'project.tasks.action.completion',\n    defaultMessage: 'Completion',\n  },\n  history: {\n    id: 'project.tasks.action.history',\n    defaultMessage: 'History',\n  },\n  taskHistoryComments: {\n    id: 'project.tasks.history.comments',\n    defaultMessage: 'Comments',\n  },\n  taskHistoryActivities: {\n    id: 'project.tasks.history.activities',\n    defaultMessage: 'Activities',\n  },\n  taskHistoryAll: {\n    id: 'project.tasks.history.all',\n    defaultMessage: 'All',\n  },\n  copyComment: {\n    id: 'project.tasks.action.comments.copy',\n    defaultMessage: 'Copy comment',\n  },\n  copyCommentToAll: {\n    id: 'project.tasks.action.comments.copy_to_all',\n    defaultMessage: 'To all tasks',\n  },\n  copyCommentToINVALIDATED: {\n    id: 'project.tasks.action.comments.copy_to_invalidated',\n    defaultMessage: 'To tasks marked as \"No\"',\n  },\n  copyCommentToVALIDATED: {\n    id: 'project.tasks.action.comments.copy_to_validated',\n    defaultMessage: 'To tasks marked as \"Yes\"',\n  },\n  resources: {\n    id: 'project.tasks.action.resources',\n    defaultMessage: 'Resources',\n  },\n  finishMappingTitle: {\n    id: 'project.tasks.action.finish_mapping.title',\n    defaultMessage: 'Once you have finished mapping',\n  },\n  instructionsSelect: {\n    id: 'project.tasks.action.instructions.select_task',\n    defaultMessage: 'Select one of the options below that matches your edit status',\n  },\n  writeComment: {\n    id: 'project.input.placeholder.write_comment',\n    defaultMessage: 'Write a comment',\n  },\n  instructionsComment: {\n    id: 'project.tasks.action.instructions.leave_comment',\n    defaultMessage: 'Leave a comment (optional)',\n  },\n  instructionsSubmit: {\n    id: 'project.tasks.action.instructions.submit_task',\n    defaultMessage: 'Submit your work',\n  },\n  comment: {\n    id: 'project.tasks.action.comment.title',\n    defaultMessage: 'Comment',\n  },\n  redirectToPreviousProject: {\n    id: 'project.tasks.action.redirectToPreviousProject',\n    defaultMessage: 'Redirect to previous project #{projectId}',\n  },\n  commentPlaceholder: {\n    id: 'project.tasks.action.comment.input.placeholder',\n    defaultMessage: 'Write a comment on this task',\n  },\n  editStatus: {\n    id: 'project.tasks.action.selection.title',\n    defaultMessage: 'Task status',\n  },\n  revertVALIDATED: {\n    id: 'project.tasks.action.invalidate',\n    defaultMessage: 'Request revalidation',\n  },\n  confirmRevertVALIDATED: {\n    id: 'project.tasks.action.invalidate.confirmation',\n    defaultMessage: 'Task status will be changed to \"Ready for validation\".',\n  },\n  revertBADIMAGERY: {\n    id: 'project.tasks.action.set_as_ready',\n    defaultMessage: 'Request mapping',\n  },\n  confirmRevertBADIMAGERY: {\n    id: 'project.tasks.action.set_as_ready.confirmation',\n    defaultMessage: 'Task status will be changed to \"Available for mapping\".',\n  },\n  proceed: {\n    id: 'project.tasks.action.proceed.confirmation',\n    defaultMessage: 'Do want to proceed?',\n  },\n  yes: {\n    id: 'project.tasks.action.confirmation.yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'project.tasks.action.confirmation.no',\n    defaultMessage: 'No',\n  },\n  mappedQuestion: {\n    id: 'project.tasks.action.options.mapped_question',\n    defaultMessage: 'Is this task completely mapped?',\n  },\n  validatedQuestion: {\n    id: 'project.tasks.action.options.validated_question',\n    defaultMessage:\n      '{number, plural, one {Is this task well mapped?} other {Are these tasks well mapped?}}',\n  },\n  complete: {\n    id: 'project.tasks.action.options.complete',\n    defaultMessage: 'Yes',\n  },\n  incomplete: {\n    id: 'project.tasks.action.options.incomplete',\n    defaultMessage: 'No',\n  },\n  badImagery: {\n    id: 'project.tasks.action.options.bad_imagery',\n    defaultMessage: 'The imagery is bad',\n  },\n  splitTask: {\n    id: 'project.tasks.action.split_task',\n    defaultMessage: 'Split task',\n  },\n  splitTaskError: {\n    id: 'project.tasks.action.split_task.error',\n    defaultMessage: 'It was not possible to split the task',\n  },\n  splitTaskErrorDescription: {\n    id: 'project.tasks.action.split_task.error.description',\n    defaultMessage: 'This task is already too small and can not be split.',\n  },\n  splitTaskGenericError: {\n    id: 'project.tasks.action.split_task.error.generic',\n    defaultMessage: 'An error occured while splitting the task.',\n  },\n  selectAnotherTask: {\n    id: 'project.tasks.action.select_another_task',\n    defaultMessage: 'Select another task',\n  },\n  stopMappingError: {\n    id: 'project.tasks.action.stop_mapping.error',\n    defaultMessage: 'An error occured while stopping mapping.',\n  },\n  stopValidation: {\n    id: 'project.tasks.action.stop_validation',\n    defaultMessage: 'Stop validation',\n  },\n  stopValidationError: {\n    id: 'project.tasks.action.stop_validation.error',\n    defaultMessage: 'An error occured while stopping validation.',\n  },\n  tasksMap: {\n    id: 'project.tasks.action.tasks_map',\n    defaultMessage: 'Tasks map',\n  },\n  submitTask: {\n    id: 'project.tasks.action.submit_task',\n    defaultMessage: 'Submit task',\n  },\n  submitTasks: {\n    id: 'project.tasks.action.submit_tasks',\n    defaultMessage: 'Submit tasks',\n  },\n  submitTaskError: {\n    id: 'project.tasks.action.submit_task.error',\n    defaultMessage:\n      'An error occured while submitting your {numTasks, plural, =1 {task} other {tasks}}.',\n  },\n  taskActivity: {\n    id: 'project.tasks.history.title',\n    defaultMessage: 'Task {n}',\n  },\n  taskUnavailable: {\n    id: 'project.tasks.history.unavailable',\n    defaultMessage: 'Task unavailable',\n  },\n  taskSplitDescription: {\n    id: 'project.tasks.history.split.description',\n    defaultMessage: 'The task {id} was split and its history is not available anymore',\n  },\n  taskData: {\n    id: 'project.tasks.activity.data.links',\n    defaultMessage: 'Task data',\n  },\n  projectId: {\n    id: 'project.tasks.activity.project_id',\n    defaultMessage: 'Project #{id}',\n  },\n  overpassDownload: {\n    id: 'project.tasks.activity.overpass.download',\n    defaultMessage: 'Download from Overpass',\n  },\n  overpassVisualization: {\n    id: 'project.tasks.activity.overpass.visualization',\n    defaultMessage: 'Visualize with Overpass',\n  },\n  projectData: {\n    id: 'project.resources.data',\n    defaultMessage: \"Project's data\",\n  },\n  changesets: {\n    id: 'project.resources.changesets',\n    defaultMessage: 'Changesets',\n  },\n  selectTask: {\n    id: 'project.resources.changesets.select_task',\n    defaultMessage: 'Select task',\n  },\n  entireProject: {\n    id: 'project.resources.changesets.entire_project',\n    defaultMessage: 'Entire project',\n  },\n  seeTaskChangesets: {\n    id: 'project.resources.changesets.task',\n    defaultMessage: \"See task's changesets\",\n  },\n  taskOnOSMCha: {\n    id: 'project.tasks.activity.osmcha',\n    defaultMessage: 'View changesets in OSMCha',\n  },\n  taskHistoryComment: {\n    id: 'project.tasks.history.comment',\n    defaultMessage: 'commented',\n  },\n  taskDetailFetchError: {\n    id: 'project.tasks.history.taskDetailFetchError',\n    defaultMessage: 'An error occured while fetching the task details.',\n  },\n  noCommentsYet: {\n    id: 'project.tasks.history.noCommentsYet',\n    defaultMessage: 'No comments have been made on the task yet.',\n  },\n  noActivitiesToDisplay: {\n    id: 'project.tasks.history.nothingToDisplay',\n    defaultMessage: 'No comments/activities have been made on this task yet.',\n  },\n  taskHistoryLockedMapping: {\n    id: 'project.tasks.history.lockedmapping',\n    defaultMessage: 'locked for mapping',\n  },\n  taskHistoryLockedValidation: {\n    id: 'project.tasks.history.lockedvalidation',\n    defaultMessage: 'locked for validation',\n  },\n  taskHistoryAutoUnlockedMapping: {\n    id: 'project.tasks.history.autounlockedmapping',\n    defaultMessage: 'automatically unlocked for mapping',\n  },\n  taskHistoryAutoUnlockedValidation: {\n    id: 'project.tasks.history.autounlockedvalidation',\n    defaultMessage: 'automatically unlocked for validation',\n  },\n  taskHistoryExtendedForMapping: {\n    id: 'project.tasks.history.extendedForMapping',\n    defaultMessage: 'extended the lock session for mapping',\n  },\n  taskHistoryExtendedForValidation: {\n    id: 'project.tasks.history.extendedForValidation',\n    defaultMessage: 'extended the lock session for validation',\n  },\n  taskHistoryBadImagery: {\n    id: 'project.tasks.history.badimagery',\n    defaultMessage: 'marked as unavailable',\n  },\n  taskHistoryMapped: {\n    id: 'project.tasks.history.mapped',\n    defaultMessage: 'marked as mapped',\n  },\n  taskHistoryValidated: {\n    id: 'project.tasks.history.validated',\n    defaultMessage: 'marked as validated',\n  },\n  taskHistoryInvalidated: {\n    id: 'project.tasks.history.invalidated',\n    defaultMessage: 'marked as more mapping needed',\n  },\n  taskHistorySplit: {\n    id: 'project.tasks.history.split',\n    defaultMessage: 'split a task',\n  },\n  taskHistoryReady: {\n    id: 'project.tasks.history.ready',\n    defaultMessage: 'marked as ready for mapping',\n  },\n  map: {\n    id: 'project.tasks.action.map',\n    defaultMessage: 'Map',\n  },\n  mapped: {\n    id: 'project.tasks.action.mapped',\n    defaultMessage: 'Mapped',\n  },\n  validate: {\n    id: 'project.tasks.action.validate',\n    defaultMessage: 'Validate',\n  },\n  validated: {\n    id: 'project.tasks.action.validated',\n    defaultMessage: 'Validated',\n  },\n  total: {\n    id: 'project.tasks.number.total',\n    defaultMessage: 'Total',\n  },\n  lockedBy: {\n    id: 'project.tasks.locked_by_user',\n    defaultMessage: '{lockStatus} by {user}',\n  },\n  taskExtraInfo: {\n    id: 'project.tasks.extra_information.title',\n    defaultMessage: 'Specific task information',\n  },\n  userFilterDefaultLabel: {\n    id: 'project.users.all',\n    defaultMessage: 'All users',\n  },\n  mappingLevelALL: {\n    id: 'project.level.all',\n    defaultMessage: 'All levels',\n  },\n  mappingLevelADVANCED: {\n    id: 'project.level.advanced',\n    defaultMessage: 'Advanced',\n  },\n  mappingLevelINTERMEDIATE: {\n    id: 'project.level.intermediate',\n    defaultMessage: 'Intermediate',\n  },\n  mappingLevelBEGINNER: {\n    id: 'project.level.beginner',\n    defaultMessage: 'Beginner',\n  },\n  mappingLevelNEWUSER: {\n    id: 'project.level.new_users',\n    defaultMessage: 'New users',\n  },\n  statistics: {\n    id: 'project.contributions.stats',\n    defaultMessage: 'Statistics',\n  },\n  mappedByUser: {\n    id: 'project.contributions.user.select.mapped',\n    defaultMessage: 'Select tasks mapped by {username}',\n  },\n  validatedByUser: {\n    id: 'project.contributions.user.select.validated',\n    defaultMessage: 'Select tasks validated by {username}',\n  },\n  allUserTasks: {\n    id: 'project.contributions.user.select.all',\n    defaultMessage: 'Select all tasks mapped or validated by {username}',\n  },\n  permissionErrorTitle: {\n    id: 'project.permissions.error.title',\n    defaultMessage: 'You are not ready to work on this project...',\n  },\n  permissionError_userLevelToValidate: {\n    id: 'project.permissions.error.userLevelToValidate',\n    defaultMessage:\n      'Only users with intermediate or advanced experience level can validate this project.',\n  },\n  permissionError_userLevelToMap: {\n    id: 'project.permissions.error.userLevelToMap',\n    defaultMessage:\n      'Only users with intermediate or advanced experience level can map this project.',\n  },\n  permissionError_userIsNotValidationTeamMember: {\n    id: 'project.permissions.error.userIsNotValidationTeamMember',\n    defaultMessage:\n      'You need to be member of one of the validation teams to be able to validate this project.',\n  },\n  permissionError_userIsNotMappingTeamMember: {\n    id: 'project.permissions.error.userIsNotMappingTeamMember',\n    defaultMessage:\n      'You need to be member of one of the mapping teams to be able to map this project.',\n  },\n});\n","export const formatChartData = (reference, stats) => {\n  let data = { datasets: [{ data: [], backgroundColor: [] }], labels: [] };\n\n  data.datasets[0].data = reference.map((f) => stats[f.field]);\n  const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\n  data.datasets[0].data = data.datasets[0].data.map((v) => Math.round((v / total) * 100));\n  data.datasets[0].backgroundColor = reference.map((f) => f.backgroundColor);\n  data.datasets[0].borderColor = reference.map((f) => f.borderColor);\n  data.labels = reference.map((f) => f.label);\n\n  return data;\n};\n\nexport const formatTimelineData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    borderColor: mappedTasksConfig.color,\n    fill: false,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    borderColor: validatedTasksConfig.color,\n    fill: false,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) =>\n    Math.round((entry.cumulative_mapped / entry.total_tasks) * 100),\n  );\n  validated.data = stats.map((entry) =>\n    Math.round((entry.cumulative_validated / entry.total_tasks) * 100),\n  );\n\n  return { datasets: [validated, mapped], labels: labels };\n};\n\nexport const formatTasksStatsData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) => entry.mapped);\n  validated.data = stats.map((entry) => entry.validated);\n\n  return { datasets: [mapped, validated], labels: labels };\n};\n\nexport const formatTooltip = (context) => {\n  var label = context.label;\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}%`;\n};\n\nexport const formatTimelineTooltip = (context, isPercent) => {\n  var label = context.dataset.label || '';\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}${isPercent ? '%' : ''}`;\n};\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport statusMessages from '../taskSelection/messages';\nimport messages from './messages';\nimport { formatChartData, formatTooltip } from '../../utils/formatChartJSData';\nimport { TASK_COLOURS } from '../../config';\nimport { StatsCardContent } from '../statsCard';\n\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\n\nconst TasksByStatus = ({ stats }) => {\n  const intl = useIntl();\n  const getLabel = (status) => intl.formatMessage(statusMessages[`taskStatus_${status}`]);\n\n  let reference = [\n    {\n      label: getLabel('INVALIDATED'),\n      field: 'invalidated',\n      backgroundColor: TASK_COLOURS.INVALIDATED,\n      borderColor: TASK_COLOURS.INVALIDATED,\n    },\n    {\n      label: getLabel('READY'),\n      field: 'ready',\n      backgroundColor: TASK_COLOURS.READY,\n    },\n    {\n      label: getLabel('LOCKED_FOR_MAPPING'),\n      field: 'lockedForMapping',\n      backgroundColor: TASK_COLOURS.LOCKED_FOR_MAPPING,\n      borderColor: '#929db3',\n    },\n    {\n      label: getLabel('MAPPED'),\n      field: 'mapped',\n      backgroundColor: TASK_COLOURS.MAPPED,\n      borderColor: TASK_COLOURS.MAPPED,\n    },\n    {\n      label: getLabel('LOCKED_FOR_VALIDATION'),\n      field: 'lockedForValidation',\n      backgroundColor: TASK_COLOURS.LOCKED_FOR_VALIDATION,\n      borderColor: '#929db3',\n    },\n    {\n      label: getLabel('VALIDATED'),\n      field: 'validated',\n      backgroundColor: TASK_COLOURS.VALIDATED,\n      borderColor: TASK_COLOURS.VALIDATED,\n    },\n    {\n      label: getLabel('BADIMAGERY'),\n      field: 'badImagery',\n      backgroundColor: TASK_COLOURS.BADIMAGERY,\n      borderColor: TASK_COLOURS.BADIMAGERY,\n    },\n  ];\n  const data = formatChartData(reference, stats);\n\n  return (\n    <div className=\"cf w-100 mb3 ph2 ph4-ns bg-tan blue-dark\">\n      <h3 className=\"barlow-condensed ttu f3\">\n        <FormattedMessage {...messages.status} />\n      </h3>\n      <div className=\"cf w-100\">\n        <div className=\"w-third-ns w-100 fl pv3\">\n          <Doughnut\n            data={data}\n            options={{\n              aspectRatio: 2,\n              plugins: {\n                legend: { position: 'right', labels: { boxWidth: 12 } },\n                tooltip: { callbacks: { label: (context) => formatTooltip(context) } },\n              },\n            }}\n          />\n        </div>\n        <div className=\"w-two-thirds-ns w-100 fl pv3\">\n          {reference.map((status, n) => (\n            <StatsCardContent\n              key={n}\n              value={stats[status.field]}\n              label={status.label}\n              className=\"w-25-ns w-50 fl tc pt3 pb4\"\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TasksByStatus;\n"],"sourceRoot":""}