{"version":3,"sources":["components/alert/index.js","components/deleteModal/index.js","utils/management.js","components/licenses/licensesPlaceholder.js","components/licenses/index.js","views/licenses.js"],"names":["Alert","_ref","type","compact","inline","iconClassName","children","Icon","info","InfoIcon","success","CheckIcon","warning","AlertIcon","error","BanIcon","_jsxs","className","concat","_jsx","EntityError","_ref2","entity","action","messageType","FormattedMessage","messages","values","DeleteModal","id","name","endpointURL","onDelete","navigate","useNavigate","modalRef","useRef","token","useSelector","state","auth","deleteStatus","setDeleteStatus","useState","setErrorMessage","deleteURL","Popup","ref","trigger","DeleteButton","showText","modal","closeOnDocumentClick","nested","onClose","close","onClick","e","preventDefault","stopPropagation","height","width","_Fragment","Button","cancel","fetchLocalJSONAPI","then","setTimeout","current","catch","message","delete","processing","updateEntity","endpoint","payload","onSuccess","onFailure","pushToLocalJSONAPI","JSON","stringify","toast","entityInfoUpdationSuccess","nCardPlaceholders","N","Array","keys","map","_n","i","CopyrightIcon","style","paddingTop","TextRow","color","marginTop","LicenseCard","license","Link","to","licenseId","LicensesManagement","licenses","userDetails","isLicensesFetched","query","setQuery","filteredLicenses","filter","toLowerCase","includes","Management","title","manage","showAddButton","managementView","ReactPlaceholder","showLoadingAnimation","customPlaceholder","delay","ready","TextField","value","placeholderMsg","searchLicenses","onChange","target","onCloseIconClick","length","n","noLicenses","LicenseInformation","labelClasses","fieldClasses","Field","component","required","description","rows","plainText","LicenseForm","_ref3","updateLicense","disabledForm","Form","onSubmit","initialValues","render","_ref4","handleSubmit","dirty","submitSucceeded","dirtySinceLastSubmit","form","submitting","dirtyForm","licenseInfo","disabled","restart","disabledClassName","save","EditLicense","useParams","loading","useFetch","isError","setIsError","useSetTitleTag","manageLicense","ListLicenses","CreateLicense","createLicense","result","entityCreationSuccess","pristine","newLicense","CustomButton","FormSubmitButton"],"mappings":"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","file":"static/js/licenses.baaecbb7.chunk.js","sourcesContent":["import { FormattedMessage } from 'react-intl';\n\nimport { BanIcon, CheckIcon, InfoIcon, AlertIcon } from '../svgIcons';\nimport messages from '../../views/messages';\n\nexport const Alert = ({\n  type = 'info',\n  compact = false,\n  inline = false,\n  iconClassName,\n  children,\n}) => {\n  const icons = {\n    info: InfoIcon,\n    success: CheckIcon,\n    warning: AlertIcon,\n    error: BanIcon,\n  };\n  const Icon = icons[type];\n\n  const color = {\n    info: 'b--blue bg-lightest-blue',\n    success: 'b--dark-green bg-washed-green',\n    warning: 'b--gold bg-washed-yellow',\n    error: 'b--dark-red bg-washed-red',\n  };\n  const iconColor = {\n    info: 'blue',\n    success: 'dark-green',\n    warning: 'gold',\n    error: 'dark-red',\n  };\n\n  return (\n    <div\n      className={`${inline ? 'di' : 'db'} blue-dark bl bw2 br2 ${compact ? 'pa2' : 'pa3'} ${\n        color[type]\n      }`}\n    >\n      <Icon className={`h1 w1 v-top mr2 ${iconColor[type]} ${iconClassName || ''}`} />\n      {children}\n    </div>\n  );\n};\n\nexport function EntityError({ entity, action = 'creation' }) {\n  const messageType = action === 'updation' ? 'entityInfoUpdationFailure' : 'entityCreationFailure';\n\n  return (\n    <Alert type=\"error\">\n      <FormattedMessage\n        {...messages[messageType]}\n        values={{\n          entity: entity,\n        }}\n      />\n    </Alert>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Popup from 'reactjs-popup';\n\nimport messages from './messages';\nimport { fetchLocalJSONAPI } from '../../network/genericJSONRequest';\nimport { DeleteButton } from '../teamsAndOrgs/management';\nimport { Button } from '../button';\nimport { AlertIcon } from '../svgIcons';\n\nexport function DeleteModal({ id, name, type, className, endpointURL, onDelete }: Object) {\n  const navigate = useNavigate();\n  const modalRef = useRef();\n  const token = useSelector((state) => state.auth.token);\n  const [deleteStatus, setDeleteStatus] = useState(null);\n  const [error, setErrorMessage] = useState(null);\n\n  const deleteURL = endpointURL ? endpointURL : `${type}/${id}/`;\n\n  const deleteEntity = () => {\n    setDeleteStatus('started');\n    fetchLocalJSONAPI(deleteURL, token, 'DELETE')\n      .then((success) => {\n        setDeleteStatus('success');\n        if (type === 'notifications') {\n          setTimeout(() => navigate(`/inbox`), 750);\n        } else if (type === 'comments') {\n          setTimeout(() => {\n            onDelete();\n            modalRef.current.close();\n          }, 750);\n          return;\n        } else {\n          setTimeout(() => navigate(`/manage/${type !== 'interests' ? type : 'categories'}`), 750);\n        }\n      })\n      .catch((e) => {\n        setDeleteStatus('failure');\n        setErrorMessage(e.message);\n      });\n  };\n\n  return (\n    <Popup\n      ref={modalRef}\n      trigger={\n        <DeleteButton className={`${className || ''} dib ml3`} showText={type !== 'comments'} />\n      }\n      modal\n      closeOnDocumentClick\n      nested\n      onClose={() => {\n        setDeleteStatus(null);\n        setErrorMessage(null);\n      }}\n    >\n      {(close) => (\n        <div\n          className=\"pv4\"\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n          }}\n        >\n          <div className=\"cf tc red\">\n            <AlertIcon height=\"50px\" width=\"50px\" />\n          </div>\n          <div className=\"cf blue-dark tc\">\n            {!deleteStatus && (\n              <>\n                <h3 className=\"barlow-condensed f3\">\n                  <FormattedMessage {...messages[`confirmDeleteTitle_${type}`]} />\n                </h3>\n                <div className=\"pt3\">\n                  <Button\n                    className=\"bg-white blue-dark mr3\"\n                    onClick={() => {\n                      setDeleteStatus(false);\n                      close();\n                    }}\n                  >\n                    <FormattedMessage {...messages.cancel} />\n                  </Button>\n                  <Button className=\"bg-red white\" onClick={() => deleteEntity()}>\n                    <FormattedMessage {...messages.delete} />\n                  </Button>\n                </div>\n              </>\n            )}\n            {deleteStatus && (\n              <h3 className=\"barlow-condensed f3\">\n                {deleteStatus === 'started' && (\n                  <>\n                    <FormattedMessage {...messages.processing} />\n                    &hellip;\n                  </>\n                )}\n                {deleteStatus === 'success' && (\n                  <FormattedMessage {...messages[`success_${type}`]} />\n                )}\n                {deleteStatus === 'failure' && (\n                  <FormattedMessage {...messages[`failure_${type}`]} />\n                )}\n              </h3>\n            )}\n            {deleteStatus === 'failure' && (\n              <p>\n                {(error && messages[`${error}Error`] && (\n                  <FormattedMessage {...messages[`${error}Error`]} />\n                )) ||\n                  error}\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </Popup>\n  );\n}\n","import { pushToLocalJSONAPI } from '../network/genericJSONRequest';\nimport toast from 'react-hot-toast';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from '../views/messages';\n\nexport const updateEntity = (endpoint, entity, payload, token, onSuccess, onFailure) =>\n  pushToLocalJSONAPI(endpoint, JSON.stringify(payload), token, 'PATCH')\n    .then(() => {\n      toast.success(\n        <FormattedMessage\n          {...messages.entityInfoUpdationSuccess}\n          values={{\n            entity,\n          }}\n        />,\n      );\n      onSuccess?.();\n    })\n    .catch((error) => {\n      onFailure?.(error);\n    });\n","import React from 'react';\nimport { TextRow } from 'react-placeholder/lib/placeholders';\nimport { CopyrightIcon } from '../svgIcons';\n\nexport const licenseCardPlaceholderTemplate = () => (_n, i) =>\n  (\n    <div className=\"w-50-ns w-100 fl pr3\" key={i}>\n      <div className=\"cf bg-white blue-dark br1 mv2 pv4 ph3 ba br1 b--grey-light shadow-hover\">\n        <div className=\"dib v-mid pr3\">\n          <div className=\"z-1 fl br-100 tc h2 w2 bg-blue-light white\">\n            <span className=\"relative w-50 dib\">\n              <CopyrightIcon style={{ paddingTop: '0.475rem' }} />\n            </span>\n          </div>\n        </div>\n        <TextRow\n          className=\"show-loading-animation f3 mv0 dib v-mid\"\n          color=\"#CCC\"\n          style={{ width: '55%', marginTop: 0 }}\n        />\n      </div>\n    </div>\n  );\n\nexport const nCardPlaceholders = (N) => {\n  return [...Array(N).keys()].map(licenseCardPlaceholderTemplate());\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\nimport ReactPlaceholder from 'react-placeholder';\n\nimport messages from '../teamsAndOrgs/messages';\nimport { Management } from '../teamsAndOrgs/management';\nimport { CopyrightIcon } from '../svgIcons';\nimport { Button } from '../button';\nimport { nCardPlaceholders } from './licensesPlaceholder';\nimport { TextField } from '../formInputs';\n\nexport const LicenseCard = ({ license }) => {\n  return (\n    <Link to={`${license.licenseId}/`} className=\"w-50-ns w-100 fl pr3\">\n      <div className=\"cf bg-white blue-dark br1 mv2 pv4 ph3 ba br1 b--grey-light shadow-hover\">\n        <div className=\"dib v-mid pr3\">\n          <div className=\"z-1 fl br-100 tc h2 w2 bg-blue-light white\">\n            <span className=\"relative w-50 dib\">\n              <CopyrightIcon style={{ paddingTop: '0.475rem' }} />\n            </span>\n          </div>\n        </div>\n        <h3 className=\"f3 mv0 dib v-mid\">{license.name}</h3>\n      </div>\n    </Link>\n  );\n};\n\nexport const LicensesManagement = ({ licenses, userDetails, isLicensesFetched }) => {\n  const [query, setQuery] = useState('');\n\n  const onSearchInputChange = (e) => setQuery(e.target.value);\n\n  const filteredLicenses = licenses?.filter((license) =>\n    license.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  return (\n    <Management\n      title={\n        <FormattedMessage\n          {...messages.manage}\n          values={{ entity: <FormattedMessage {...messages.licenses} /> }}\n        />\n      }\n      showAddButton={true}\n      managementView\n    >\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        customPlaceholder={nCardPlaceholders(4)}\n        delay={10}\n        ready={isLicensesFetched}\n      >\n        <div className=\"w-20-l w-25-m\">\n          <TextField\n            value={query}\n            placeholderMsg={messages.searchLicenses}\n            onChange={onSearchInputChange}\n            onCloseIconClick={() => setQuery('')}\n          />\n        </div>\n        {filteredLicenses?.length ? (\n          filteredLicenses.map((i, n) => <LicenseCard key={n} license={i} />)\n        ) : (\n          <div className=\"pv3\">\n            <FormattedMessage {...messages.noLicenses} />\n          </div>\n        )}\n      </ReactPlaceholder>\n    </Management>\n  );\n};\n\nexport const LicenseInformation = () => {\n  const labelClasses = 'db pt3 pb2';\n  const fieldClasses = 'blue-grey w-100 pv3 ph2 input-reset ba b--grey-light bg-transparent';\n\n  return (\n    <>\n      <div className=\"cf\">\n        <label className={labelClasses}>\n          <FormattedMessage {...messages.name} />\n        </label>\n        <Field name=\"name\" component=\"input\" type=\"text\" className={fieldClasses} required />\n        <label className={labelClasses}>\n          <FormattedMessage {...messages.description} />\n        </label>\n        <Field name=\"description\" component=\"textarea\" rows={7} className={fieldClasses} required />\n        <label className={labelClasses}>\n          <FormattedMessage {...messages.plainText} />\n        </label>\n        <Field name=\"plainText\" component=\"textarea\" rows={7} className={fieldClasses} required />\n      </div>\n    </>\n  );\n};\n\nexport const LicenseForm = ({ license, updateLicense, disabledForm }) => {\n  return (\n    <Form\n      onSubmit={(values) => updateLicense(values)}\n      initialValues={license}\n      render={({\n        handleSubmit,\n        dirty,\n        submitSucceeded,\n        dirtySinceLastSubmit,\n        form,\n        submitting,\n        values,\n      }) => {\n        const dirtyForm = submitSucceeded ? dirtySinceLastSubmit && dirty : dirty;\n        return (\n          <div className=\"blue-grey mb3\">\n            <div className={`bg-white b--grey-light pa4 ${dirtyForm ? 'bt bl br' : 'ba'}`}>\n              <h3 className=\"f3 fw6 dib blue-dark mv0\">\n                <FormattedMessage {...messages.licenseInfo} />\n              </h3>\n              <form id=\"license-form\" onSubmit={handleSubmit}>\n                <fieldset className=\"bn pa0\" disabled={submitting}>\n                  <LicenseInformation />\n                </fieldset>\n              </form>\n            </div>\n            {dirtyForm && (\n              <div className=\"cf pt0 h3\">\n                <div className=\"w-70-l w-50 fl tr dib bg-grey-light\">\n                  <Button className=\"blue-dark bg-grey-light h3\" onClick={() => form.restart()}>\n                    <FormattedMessage {...messages.cancel} />\n                  </Button>\n                </div>\n                <div className=\"w-30-l w-50 h-100 fr dib\">\n                  <Button\n                    onClick={() => handleSubmit()}\n                    className=\"w-100 h-100 bg-red white\"\n                    disabledClassName=\"bg-red o-50 white w-100 h-100\"\n                  >\n                    <FormattedMessage {...messages.save} />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      }}\n    ></Form>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetch } from '../hooks/UseFetch';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Form } from 'react-final-form';\nimport { FormattedMessage } from 'react-intl';\nimport toast from 'react-hot-toast';\n\nimport messages from './messages';\nimport { LicenseInformation, LicensesManagement, LicenseForm } from '../components/licenses';\nimport { FormSubmitButton, CustomButton } from '../components/button';\nimport { DeleteModal } from '../components/deleteModal';\nimport { pushToLocalJSONAPI } from '../network/genericJSONRequest';\nimport { updateEntity } from '../utils/management';\nimport { EntityError } from '../components/alert';\n\nexport const EditLicense = () => {\n  const { id } = useParams();\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const token = useSelector((state) => state.auth.token);\n  const [error, loading, license] = useFetch(`licenses/${id}/`);\n  const [isError, setIsError] = useState(false);\n  useSetTitleTag(`Edit ${license.name}`);\n\n  const onFailure = () => setIsError(true);\n  const updateLicense = (payload) => {\n    setIsError(false);\n    updateEntity(`licenses/${id}/`, 'license', payload, token, null, onFailure);\n  };\n\n  return (\n    <div className=\"cf pv4 bg-tan\">\n      <div className=\"cf\">\n        <h3 className=\"f2 ttu blue-dark fw7 barlow-condensed v-mid ma0 dib\">\n          <FormattedMessage {...messages.manageLicense} />\n        </h3>\n        <DeleteModal id={license.licenseId} name={license.name} type=\"licenses\" />\n      </div>\n      <div className=\"w-40-l w-100 mt4 fl\">\n        <LicenseForm\n          userDetails={userDetails}\n          license={license}\n          updateLicense={updateLicense}\n          disabledForm={error || loading}\n        />\n        {isError && <EntityError entity=\"license\" action=\"updation\" />}\n      </div>\n    </div>\n  );\n};\n\nexport const ListLicenses = () => {\n  useSetTitleTag('Manage licenses');\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  // TO DO: filter teams of current user\n  const [error, loading, licenses] = useFetch(`licenses/`);\n  const isLicensesFetched = !loading && !error;\n\n  return (\n    <LicensesManagement\n      licenses={licenses.licenses}\n      userDetails={userDetails}\n      isLicensesFetched={isLicensesFetched}\n    />\n  );\n};\n\nexport const CreateLicense = () => {\n  useSetTitleTag('Create new license');\n  const navigate = useNavigate();\n  const token = useSelector((state) => state.auth.token);\n  const [isError, setIsError] = useState(false);\n\n  const createLicense = (payload) => {\n    setIsError(false);\n    return pushToLocalJSONAPI('licenses/', JSON.stringify(payload), token, 'POST')\n      .then((result) => {\n        toast.success(\n          <FormattedMessage\n            {...messages.entityCreationSuccess}\n            values={{\n              entity: 'license',\n            }}\n          />,\n        );\n        navigate(`/manage/licenses/${result.licenseId}`);\n      })\n      .catch(() => setIsError(true));\n  };\n\n  return (\n    <Form\n      onSubmit={(values) => createLicense(values)}\n      render={({ handleSubmit, pristine, form, submitting, values }) => {\n        return (\n          <form onSubmit={handleSubmit} className=\"blue-grey\">\n            <div className=\"cf vh-100\">\n              <h3 className=\"f2 mb3 ttu blue-dark fw7 barlow-condensed\">\n                <FormattedMessage {...messages.newLicense} />\n              </h3>\n              <div className=\"w-40-l w-100 fl\">\n                <div className=\"bg-white b--grey-light ba pa4 mb3\">\n                  <h3 className=\"f3 blue-dark mv0 fw6\">\n                    <FormattedMessage {...messages.licenseInfo} />\n                  </h3>\n                  <LicenseInformation />\n                </div>\n                {isError && <EntityError entity=\"license\" />}\n              </div>\n              <div className=\"w-40-l w-100 fl pl5-l pl0 \"></div>\n            </div>\n            <div className=\"fixed left-0 bottom-0 cf bg-white h3 w-100\">\n              <div className=\"w-80-ns w-60-m w-50 h-100 fl tr\">\n                <Link to={'../'}>\n                  <CustomButton className=\"bg-white mr5 pr2 h-100 bn bg-white blue-dark\">\n                    <FormattedMessage {...messages.cancel} />\n                  </CustomButton>\n                </Link>\n              </div>\n              <div className=\"w-20-l w-40-m w-50 h-100 fr\">\n                <FormSubmitButton\n                  disabled={submitting || pristine}\n                  className=\"w-100 h-100 bg-red white\"\n                  disabledClassName=\"bg-red o-50 white w-100 h-100\"\n                >\n                  <FormattedMessage {...messages.createLicense} />\n                </FormSubmitButton>\n              </div>\n            </div>\n          </form>\n        );\n      }}\n    ></Form>\n  );\n};\n"],"sourceRoot":""}