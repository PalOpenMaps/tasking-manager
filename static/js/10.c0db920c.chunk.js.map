{"version":3,"sources":["components/taskSelection/footer.js"],"names":["TaskSelectionFooter","props","token","useSelector","state","auth","get","locale","preferences","editor","setEditor","useState","defaultUserEditor","editorOptions","setEditorOptions","lockError","setLockError","dispatch","useDispatch","fetchLockedTasks","useFetchLockedTasks","lockSuccess","status","endpoint","windowObjectReference","urlParams","openEditor","project","tasks","selectedTasks","window","innerWidth","innerHeight","updateReduxState","projectId","navigate","concat","lockFailed","message","includes","close","type","lockTasks","async","taskAction","safari","fetch","formatJosmUrl","jsonp","e","open","pushToLocalJSONAPI","JSON","stringify","taskIds","then","res","catch","fetchLocalJSONAPI","useEffect","mappingEditors","startsWith","validationEditorOptions","getEditors","validationEditors","customEditor","updateEditor","mappingEditorOptions","arr","value","titleClasses","React","createElement","className","Popup","modal","closeOnEscape","closeOnDocumentClick","onClose","LockedTaskModalContent","error","FormattedMessage","messages","typesOfMapping","MappingTypes","types","mappingTypes","imagery","Imagery","Dropdown","options","display","selectEditor","toTop","onChange","onAdd","onRemove","Button","onClick","selectAnotherProject","Object","assign","values","number","length"],"mappings":"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","file":"static/js/10.c0db920c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport Popup from 'reactjs-popup';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { getEditors } from '../../utils/editorsList';\nimport { openEditor, formatJosmUrl } from '../../utils/openEditor';\nimport { useFetchLockedTasks } from '../../hooks/UseLockedTasks';\nimport { pushToLocalJSONAPI, fetchLocalJSONAPI } from '../../network/genericJSONRequest';\nimport { Dropdown } from '../dropdown';\nimport { Button } from '../button';\nimport { Imagery } from './imagery';\nimport { MappingTypes } from '../mappingTypes';\nimport { LockedTaskModalContent } from './lockedTasks';\n\nconst TaskSelectionFooter = (props) => {\n  const token = useSelector((state) => state.auth.get('token'));\n  const locale = useSelector((state) => state.preferences.locale);\n  const [editor, setEditor] = useState(props.defaultUserEditor);\n  const [editorOptions, setEditorOptions] = useState([]);\n  const [lockError, setLockError] = useState(null);\n  const dispatch = useDispatch();\n  const fetchLockedTasks = useFetchLockedTasks();\n\n  const lockSuccess = (status, endpoint, windowObjectReference) => {\n    const urlParams = openEditor(\n      editor,\n      props.project,\n      props.tasks,\n      props.selectedTasks,\n      [window.innerWidth, window.innerHeight],\n      windowObjectReference,\n      locale,\n    );\n    updateReduxState(props.selectedTasks, props.project.projectId, status);\n    navigate(`/projects/${props.project.projectId}/${endpoint}/${urlParams}`);\n  };\n\n  const lockFailed = (windowObjectReference, message) => {\n    // JOSM and iD don't open a new window\n    if (!['JOSM', 'ID'].includes(editor)) {\n      windowObjectReference.close();\n    }\n    fetchLockedTasks();\n    setLockError(message);\n  };\n\n  const updateReduxState = (tasks, project, status) => {\n    dispatch({ type: 'SET_LOCKED_TASKS', tasks: tasks });\n    dispatch({ type: 'SET_PROJECT', project: project });\n    dispatch({ type: 'SET_TASKS_STATUS', status: status });\n  };\n\n  const lockTasks = async () => {\n    // if user can not map or validate the project, lead him to the explore projects page\n    if (\n      ['selectAnotherProject', 'mappingIsComplete', 'projectIsComplete'].includes(props.taskAction)\n    ) {\n      navigate(`/explore/`);\n    }\n    // then pass to the JOSM check and validate/map checks\n    if (editor === 'JOSM' && !window.safari) {\n      try {\n        await fetch(formatJosmUrl('version', { jsonp: 'checkJOSM' }));\n      } catch (e) {\n        setLockError('JOSM');\n        return;\n      }\n    }\n    let windowObjectReference;\n    if (!['JOSM', 'ID'].includes(editor)) {\n      windowObjectReference = window.open(\n        '',\n        `TM-${props.project.projectId}-${props.selectedTasks}`,\n      );\n    }\n    if (\n      ['validateSelectedTask', 'validateAnotherTask', 'validateATask'].includes(props.taskAction)\n    ) {\n      pushToLocalJSONAPI(\n        `projects/${props.project.projectId}/tasks/actions/lock-for-validation/`,\n        JSON.stringify({ taskIds: props.selectedTasks }),\n        token,\n      )\n        .then((res) => {\n          lockSuccess('LOCKED_FOR_VALIDATION', 'validate', windowObjectReference);\n        })\n        .catch((e) => lockFailed(windowObjectReference, e.message));\n    }\n    if (['mapSelectedTask', 'mapAnotherTask', 'mapATask'].includes(props.taskAction)) {\n      fetchLocalJSONAPI(\n        `projects/${props.project.projectId}/tasks/actions/lock-for-mapping/${props.selectedTasks[0]}/`,\n        token,\n        'POST',\n      )\n        .then((res) => {\n          lockSuccess('LOCKED_FOR_MAPPING', 'map', windowObjectReference);\n        })\n        .catch((e) => lockFailed(windowObjectReference, e.message));\n    }\n    if (['resumeMapping', 'resumeValidation'].includes(props.taskAction)) {\n      const urlParams = openEditor(\n        editor,\n        props.project,\n        props.tasks,\n        props.selectedTasks,\n        [window.innerWidth, window.innerHeight],\n        windowObjectReference,\n        locale,\n      );\n      const endpoint = props.taskAction === 'resumeMapping' ? 'map' : 'validate';\n      navigate(`/projects/${props.project.projectId}/${endpoint}/${urlParams}`);\n    }\n  };\n\n  // update the editors options for mapping or for validation,\n  // according to the status of the task that is currently selected\n  useEffect(() => {\n    if (\n      props.taskAction &&\n      props.project.mappingEditors &&\n      (props.taskAction.startsWith('validate') || props.taskAction === 'resumeValidation')\n    ) {\n      const validationEditorOptions = getEditors(\n        props.project.validationEditors,\n        props.project.customEditor,\n      );\n      setEditorOptions(validationEditorOptions);\n      // activate defaultUserEditor if it's allowed. If not, use the first allowed editor for validation\n      if (props.project.validationEditors.includes(props.defaultUserEditor)) {\n        setEditor(props.defaultUserEditor);\n      } else {\n        updateEditor(validationEditorOptions);\n      }\n    } else {\n      const mappingEditorOptions = getEditors(\n        props.project.mappingEditors,\n        props.project.customEditor,\n      );\n      setEditorOptions(mappingEditorOptions);\n      // activate defaultUserEditor if it's allowed. If not, use the first allowed editor\n      if (props.project.mappingEditors.includes(props.defaultUserEditor)) {\n        setEditor(props.defaultUserEditor);\n      } else {\n        updateEditor(mappingEditorOptions);\n      }\n    }\n  }, [\n    props.taskAction,\n    props.project.mappingEditors,\n    props.project.validationEditors,\n    props.project.customEditor,\n    props.defaultUserEditor,\n  ]);\n\n  const updateEditor = (arr) => setEditor(arr[0].value);\n  const titleClasses = 'db ttu f6 blue-light mb2';\n  return (\n    <div className=\"cf bg-white pb2 ph4-l ph2\">\n      {lockError !== null && (\n        <Popup\n          modal\n          open\n          closeOnEscape={true}\n          closeOnDocumentClick={true}\n          onClose={() => setLockError(null)}\n        >\n          {(close) => (\n            <LockedTaskModalContent\n              project={props.project}\n              error={lockError}\n              close={close}\n              lockTasks={lockTasks}\n            />\n          )}\n        </Popup>\n      )}\n      <div className=\"w-25-ns w-40 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.typesOfMapping} />\n        </h3>\n        <div className=\"db fl pt1\">\n          <MappingTypes types={props.project.mappingTypes} />\n        </div>\n      </div>\n      <div className=\"w-25-ns w-60 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.imagery} />\n        </h3>\n        <Imagery value={props.project.imagery} />\n      </div>\n      <div className=\"w-20-ns w-40 fl\">\n        <h3 className={titleClasses}>\n          <FormattedMessage {...messages.editor} />\n        </h3>\n        <Dropdown\n          options={editorOptions}\n          value={editor}\n          display={<FormattedMessage {...messages.selectEditor} />}\n          className=\"bg-white bn\"\n          toTop={true}\n          onChange={updateEditor}\n          onAdd={() => {}}\n          onRemove={() => {}}\n        />\n      </div>\n      <div className=\"w-30-ns w-60 fl tr\">\n        <div className=\"mt3\">\n          <Button className=\"white bg-red\" onClick={() => lockTasks()}>\n            {['selectAnotherProject', 'mappingIsComplete', 'projectIsComplete'].includes(\n              props.taskAction,\n            ) ? (\n              <FormattedMessage {...messages.selectAnotherProject} />\n            ) : (\n              <FormattedMessage\n                {...messages[props.taskAction]}\n                values={{ number: props.selectedTasks ? props.selectedTasks.length : 0 }}\n              />\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskSelectionFooter;\n"],"sourceRoot":""}