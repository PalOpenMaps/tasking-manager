{"version":3,"sources":["components/projectStats/contributorsStats.js","hooks/UseContributorStats.js"],"names":["injectIntl","props","stats","contributions","setStats","useState","validators","mappers","beginnerUsers","intermediateUsers","advancedUsers","lessThan1MonthExp","lessThan3MonthExp","lessThan6MonthExp","lessThan12MonthExp","moreThan1YearExp","useEffect","undefined","data","filter","i","validated","length","mapped","mappingLevel","map","months","concat","Date","dateRegistered","getPastMonths","useContributorStats","contributors","userContributions","getUserLevelLabel","level","intl","formatMessage","userMessages","getUserExpLabel","id","messages","userLevelsReference","label","field","backgroundColor","CHART_COLOURS","green","blue","orange","userExperienceReference","red","React","createElement","className","FormattedMessage","StatsCardContent","value","totalContributors","usersExperience","Bar","formatChartData","options","legend","display","tooltips","callbacks","tooltip","formatTooltip","usersLevel","Doughnut","position","labels","boxWidth"],"mappings":"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","file":"static/js/8.7a4d64f4.chunk.js","sourcesContent":["import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport messages from './messages';\nimport userMessages from '../user/messages';\nimport { CHART_COLOURS } from '../../config';\nimport { formatChartData, formatTooltip } from '../../utils/formatChartJSData';\nimport { useContributorStats } from '../../hooks/UseContributorStats';\nimport { StatsCardContent } from '../statsCardContent';\n\nfunction ContributorsStats(props) {\n  const stats = useContributorStats(props.contributors.userContributions);\n  const getUserLevelLabel = (level) =>\n    props.intl.formatMessage(userMessages[`mapperLevel${level}`]);\n  const getUserExpLabel = (id) => props.intl.formatMessage(messages[`${id}`]);\n\n  let userLevelsReference = [\n    {\n      label: getUserLevelLabel('BEGINNER'),\n      field: 'beginnerUsers',\n      backgroundColor: CHART_COLOURS.green,\n    },\n    {\n      label: getUserLevelLabel('INTERMEDIATE'),\n      field: 'intermediateUsers',\n      backgroundColor: CHART_COLOURS.blue,\n    },\n    {\n      label: getUserLevelLabel('ADVANCED'),\n      field: 'advancedUsers',\n      backgroundColor: CHART_COLOURS.orange,\n    },\n  ];\n  let userExperienceReference = [\n    {\n      label: getUserExpLabel('lessThan1MonthExp'),\n      field: 'lessThan1MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan3MonthExp'),\n      field: 'lessThan3MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan6MonthExp'),\n      field: 'lessThan6MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan12MonthExp'),\n      field: 'lessThan12MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('moreThan1YearExp'),\n      field: 'moreThan1YearExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n  ];\n\n  return (\n    <div className=\"ph2 ph4-ns\">\n      <h3 className=\"f3 ttu barlow-condensed\">\n        <FormattedMessage {...messages.contributors} />\n      </h3>\n      <div className=\"cf w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-tan tc\">\n          <StatsCardContent\n            value={stats.mappers}\n            label={<FormattedMessage {...messages.mappers} />}\n            className=\"pv3-l pv2 mb3 shadow-4 bg-white\"\n          />\n          <StatsCardContent\n            value={stats.validators}\n            label={<FormattedMessage {...messages.validators} />}\n            className=\"pv3-l pv2 mb3 shadow-4 bg-white\"\n          />\n          <StatsCardContent\n            value={props.contributors.userContributions.length}\n            label={<FormattedMessage {...messages.totalContributors} />}\n            className=\"pv3-l pv2 mb3 shadow-4 bg-white\"\n          />\n        </div>\n      </div>\n      <div className=\"w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-white pb4 ph3 pt2 shadow-4\">\n          <h3 className=\"f4 mv3 fw6\">\n            <FormattedMessage {...messages.usersExperience} />\n          </h3>\n          <Bar\n            data={formatChartData(userExperienceReference, stats)}\n            options={{\n              legend: { display: false },\n              tooltips: { callbacks: { label: (tooltip, data) => formatTooltip(tooltip, data) } },\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-white pb4 ph3 pt2 shadow-4\">\n          <h3 className=\"f4 mv3 fw6\">\n            <FormattedMessage {...messages.usersLevel} />\n          </h3>\n          <Doughnut\n            data={formatChartData(userLevelsReference, stats)}\n            options={{\n              legend: { position: 'right', labels: { boxWidth: 12 } },\n              tooltips: { callbacks: { label: (tooltip, data) => formatTooltip(tooltip, data) } },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default injectIntl(ContributorsStats);\n","import { useEffect, useState } from 'react';\nimport { getPastMonths } from '../utils/date';\n\nexport function useContributorStats(contributions) {\n  const [stats, setStats] = useState({\n    validators: 0,\n    mappers: 0,\n    beginnerUsers: 0,\n    intermediateUsers: 0,\n    advancedUsers: 0,\n    lessThan1MonthExp: 0,\n    lessThan3MonthExp: 0,\n    lessThan6MonthExp: 0,\n    lessThan12MonthExp: 0,\n    moreThan1YearExp: 0,\n  });\n  useEffect(() => {\n    if (contributions !== undefined) {\n      const data = {\n        validators: contributions.filter((i) => i.validated > 0).length,\n        mappers: contributions.filter((i) => i.mapped > 0).length,\n        beginnerUsers: contributions.filter((i) => i.mappingLevel === 'BEGINNER').length,\n        intermediateUsers: contributions.filter((i) => i.mappingLevel === 'INTERMEDIATE').length,\n        advancedUsers: contributions.filter((i) => i.mappingLevel === 'ADVANCED').length,\n      };\n      [\n        [0, 1],\n        [1, 3],\n        [3, 6],\n        [6, 12],\n      ].map(\n        (months) =>\n          (data[`lessThan${months[1]}MonthExp`] = contributions.filter(\n            (i) =>\n              new Date(i.dateRegistered) > getPastMonths(months[1]) &&\n              new Date(i.dateRegistered) <= getPastMonths(months[0]),\n          ).length),\n      );\n      data.moreThan1YearExp = contributions.filter(\n        (i) => new Date(i.dateRegistered) <= getPastMonths(12),\n      ).length;\n      setStats(data);\n    }\n  }, [contributions]);\n  return stats;\n}\n"],"sourceRoot":""}