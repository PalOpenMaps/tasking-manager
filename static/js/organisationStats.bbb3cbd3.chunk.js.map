{"version":3,"sources":["components/projectEdit/messages.js","components/userDetail/messages.js","components/progressBar.js","hooks/UseHover.js","components/statsCard.js","components/projects/messages.js","utils/date.js","utils/sorting.js","components/userDetail/barListChart.js","components/projects/filterSelectFields.js","hooks/UseTagAPI.js","hooks/UseTotalTasksStats.js","hooks/UseTasksStatsQueryAPI.js","hooks/UseOrganisationLevel.js","components/teamsAndOrgs/tasksStatsSummary.js","components/teamsAndOrgs/tasksStats.js","hooks/UseValidateDateRange.js","hooks/UseOrgYearStats.js","components/teamsAndOrgs/remainingTasksStats.js","hooks/UsePredictYearlyTasks.js","../node_modules/date-fns/esm/getDayOfYear/index.js","../node_modules/date-fns/esm/isLeapYear/index.js","components/teamsAndOrgs/orgUsageLevel.js","components/teamsAndOrgs/organisationProjectStats.js","../node_modules/date-fns/esm/setDayOfYear/index.js","views/organisationStats.js"],"names":["defineMessages","privacy","id","defaultMessage","privateProject","privacyDescription","teams","teamsPermissionNote","organisation","campaign","categories","organisationDescription","admins","selectImagery","selectLicense","selectOrganisation","selectCampaign","permissions_ANY","permissions_LEVEL","permissions_TEAMS","permissions_TEAMS_LEVEL","mappingPermissionDescription","validationPermissionDescription","mappingPermission","validationPermission","mappingValidationSection","mappingValidationSectionDescription","messageContributors","messageContributorsDescription","messageContributorsTranslationAlert","messageContributorsSuccess","messageContributorsError","mapAll","mapAllConfirmation","mapAllDescription","mapAllSuccess","mapAllError","invalidateAll","invalidateAllConfirmation","invalidateAllDescription","invalidateAllSuccess","invalidateAllError","validateAllTasks","validateAllTasksConfirmation","validateAllTasksDescription","validateAllSuccess","validateAllError","resetBadImagery","resetBadImageryConfirmation","resetBadImageryDescription","resetBadImageryButton","resetBadImagerySuccess","resetBadImageryError","resetAll","resetAllButton","resetAllDescription","resetAllSuccess","resetAllError","cloneProject","cloneProjectDescription","revertVALIDATEDTasks","revertVALIDATEDTasksTitle","revertVALIDATEDTasksDescription","revertVALIDATEDTasksSuccess","revertBADIMAGERYTasks","revertBADIMAGERYTasksTitle","revertBADIMAGERYTasksDescription","revertBADIMAGERYTasksSuccess","revertTasksError","transferProject","transferProjectTitle","transferProjectAlert","transferProjectSuccess","transferProjectError","deleteProject","deleteProjectAlert","deleteProjectSuccess","deleteProjectError","taskReset","taskResetButton","cancel","canNotUndo","warning","taskResetConfirmation","status","priority","license","language","typeHere","translations","selectLanguage","mappingEditors","validationEditors","customEditor","randomTaskSelection","randomTaskSelectionMapping","randomTaskSelectionDescription","rapidPowerUser","rapidPowerUserDescription","imagery","imageryURLNote","drawPolygon","drawRectangle","clearAll","selectFile","importDescription","name","dueDate","dueDateDescription","description","shortDescription","instructions","osmchaFilterId","osmchaFilterIdDescription","priorityAreasDescription","mappingTypes","idPresets","userRole","difficulty","difficultyDescription","perTaskInstructions","perTaskInstructionsDescription","perTaskInstructionsExample","changesetComment","changesetCommentExample","changesetCommentDescription","nonEditableComment","projectPriorityURGENT","projectPriorityHIGH","projectPriorityMEDIUM","projectPriorityLOW","statusDRAFT","statusARCHIVED","statusPUBLISHED","userRoleALL","userRoleMAPPER","subjectPlaceholder","messagePlaceholder","difficultyALL","difficultyCHALLENGING","difficultyMODERATE","difficultyEASY","filterByOrg","selectTeam","selectRole","add","update","preview","customEditorName","customEditorDescription","customEditorUrl","customEditorEnabledForMapping","customEditorEnabledForValidation","deleteCustomEditor","removeCustomEditor","confirmDeleteCustomEditor","noMappingEditor","noValidationEditor","extraIdParams","extraIdParamsDescription","extraIdParamsDescriptionLink","iDAPIDocs","loading","contributionTimelineTitle","projectsTitle","countries","timeSpentMapping","buildingsMapped","roadMapped","poiMapped","waterwaysMapped","userMapped","you","userValidated","invalidated","validated","finished","topProjectsMappedTitle","noTopProjectsData","topCausesTitle","others","noProjectsData","editsTitle","noEditsData","topCountriesTitle","tasks","heatmapNoContribution","heatmapContribution","heatmapContributions","heatmapLegendMore","heatmapLegendLess","userOrganisationsError","ProgressBar","_ref","className","small","height","firstBarValue","secondBarValue","children","hoverRef","isHovered","position","value","setValue","useState","setPosition","x","y","handleMouseOver","useCallback","e","clientX","ref","current","offsetLeft","clientY","handleMouseOut","useRef","node","removeEventListener","addEventListener","useHover","heightClassname","concat","_jsx","_jsxs","style","width","role","left","bottom","StatsCard","icon","invertColors","StatsCardContent","Number","FormattedNumber","Math","trunc","label","_ref2","projectTitle","mappingDifficulty","moreFilters","startDate","startDatePlaceholder","endDate","endDatePlaceholder","dateRange","thisWeek","thisMonth","thisYear","lastWeek","lastMonth","lastYear","customRange","showMapToggle","listViewToggle","typesOfMapping","projectsToMap","projectsToValidate","anyProject","exactMatch","campaigns","showAllXTags","searchPlaceholder","organisations","location","locations","interest","interests","filterByMyInterests","errorLoadingTheXForY","filters","projects","myProjects","manageProjects","favorited","contributed","allprojects","active","stale","managed","created","draft","archived","paginationCount","clearFilters","sortBy","sortByIdDesc","sortByIdAsc","sortByPriority","sortByEasy","sortByChallenging","sortByMoreActive","apply","clear","retry","getPastMonths","months","today","Date","setMonth","getMonth","date","dateFormat","dateRanges","start","format","startOfWeek","end","startOfMonth","startOfYear","setDate","getDate","endOfWeek","endOfMonth","setFullYear","getFullYear","endOfYear","compareTaskId","a","b","properties","taskId","compareLastUpdate","actionDate","compareHistoryLastUpdate","compareByPropertyDescending","property","percent","BarChartItem","link","percentValue","number","numberUnit","Link","to","BarListChart","_ref3","data","valueField","nameField","linkBase","linkField","map","p","n","FormattedMessage","messages","ProjectFilterSelect","fieldsetName","fieldsetStyle","titleStyle","selectedTag","setQueryForChild","allQueryParamsForChild","options","payloadKey","fieldsetTitle","fieldsetTitlePlural","isError","values","xWord","yWord","TagFilterPickerAutocomplete","defaultSelectedItem","queryParamSelectedItem","tagOptionsFromAPI","setQuery","allQueryParams","DateRangeFilterSelect","isCustomDateRange","setIsCustomDateRange","startDateInQuery","endDateInQuery","setDateRange","dropdownOptions","isOptionDisabled","filter","useEffect","doesRangeMatch","Object","keys","find","range","Select","onChange","page","undefined","classNamePrefix","option","DateFilterPicker","_ref4","selectedValue","intl","useIntl","CalendarIcon","DatePicker","selected","parse","placeholderText","formatMessage","showYearDropdown","scrollableYearDropdown","_ref5","tags","tagOptions","getValue","selectedOption","isLoading","change","newValue","getOptionLabel","getOptionValue","placeholder","isClearable","isDisabled","basedOnMyInterests","styles","menu","baseStyles","zIndex","dataFetchReducer","state","action","type","payload","console","log","Error","useTagAPI","initialData","tagType","processDataFn","token","useSelector","auth","locale","preferences","dispatch","useReducer","didCancel","async","queryParams","result","axios","url","API_URL","method","headers","Authorization","indexOf","error","fetchData","getStatusCount","stats","reduce","total","entry","useTotalTasksStats","totalStats","setTotalStats","mapped","length","statsQueryAllSpecification","withDefault","StringParam","now","project","CommaArrayParam","organisationName","organisationId","NumberParam","useTasksStatsQueryParams","useQueryParams","backendToQueryConversion","defaultInitialData","taskStats","useTasksStatsQueryAPI","arguments","ExternalQueryParamsState","extraQuery","throttledExternalQueryParamsState","useThrottle","controller","AbortController","queryParamsState","paramsRemapped","remapParamsToAPI","split","forEach","query","key","trim","params","signal","then","catch","_error$response","_error$response$data","isCancel","response","zeroPayload","assign","pagination","abort","levels","level","tier","minActions","fee","useOrganisationLevel","completedActions","currentLevel","useGetLevel","nextLevelThreshold","setNextLevelThreshold","item","actions","setCurrentLevel","usePredictLevel","newLevel","predictedLevel","setPredictedLevel","cost","TasksStatsSummary","_Fragment","tasksMapped","tasksValidated","TasksStatsChart","React","lazy","TasksStats","retryFn","campaignAPIState","countriesAPIState","formatFilterCountriesData","campaignInQuery","countryInQuery","dateValidation","validation","setValidation","detail","startOfToday","startOfTomorrow","differenceInDays","useValidateDateRange","ReactPlaceholder","showLoadingAnimation","rows","ready","errorLoadingStats","onClick","Suspense","fallback","useCurrentYearStats","isOrgYearQuery","setIsOrgYearQuery","useIsOrgYearQuery","yearStats","setYearStats","fetchLocalJSONAPI","res","ActionsNeededLabel","actionsNeededHelp","actionsNeeded","InfoIcon","ReactTooltip","place","effect","RemainingTasksStats","mappingNeeded","lockedForMapping","validationNeeded","lockedForValidation","toBeMapped","readyForValidation","usePredictYearlyTasks","currentDate","prediction","dayNumber","dirtyDate","requiredArgs","toDate","differenceInCalendarDays","getDayOfYear","totalDays","year","isLeapYear","round","OrganisationUsageLevel","orgName","parseInt","yearPrediction","levelPrediction","currentYear","getYear","fontSize","levelTooltip","nextLevel","estimatedLevel","actionsToNextLevel","levelInfo","org","topLevelInfo","OrganisationTier","subscriptionTier","selectedTier","selectedTierMax","showDiscountLabel","subscribedTier","tierTooltip","nextTier","estimatedTier","estimatedCost","currency","discounted","actionsRemaining","OrganisationProjectStats","totalProjects","published","firstDayOfYear","dirtyDayOfYear","dayOfYear","toInteger","setDayOfYear","statusMessages","createdThisYear","recent","sort","projectsCreated","numberOfProjects","OrganisationStats","navigate","useNavigate","useParams","isOrgManager","_state$auth$organisat","userDetails","includes","apiState","fetchTasksStatistics","useFetch","errorOrgStats","loadingOrgStats","orgStats","currentYearStats","showTierInfo","useSetTitleTag","src","logo","alt","tasksStatistics","remainingTasks","delay","activeTasks","usageLevel","orgProjectStats"],"mappings":"6IAAA,YAKeA,gBAAe,CAC5BC,QAAS,CACPC,GAAI,oCACJC,eAAgB,WAElBC,eAAgB,CACdF,GAAI,oCACJC,eAAgB,mBAElBE,mBAAoB,CAClBH,GAAI,0CACJC,eACE,2KAEJG,MAAO,CACLJ,GAAI,kCACJC,eAAgB,SAElBI,oBAAqB,CACnBL,GAAI,qCACJC,eACE,0MAEJK,aAAc,CACZN,GAAI,yCACJC,eAAgB,gBAElBM,SAAU,CACRP,GAAI,qCACJC,eAAgB,YAElBO,WAAY,CACVR,GAAI,uCACJC,eAAgB,cAElBQ,wBAAyB,CACvBT,GAAI,+CACJC,eACE,uJAEJS,OAAQ,CACNV,GAAI,mCACJC,eAAgB,aAElBU,cAAe,CACbX,GAAI,qCACJC,eAAgB,kBAElBW,cAAe,CACbZ,GAAI,qCACJC,eAAgB,kBAElBY,mBAAoB,CAClBb,GAAI,0CACJC,eAAgB,uBAElBa,eAAgB,CACdd,GAAI,sCACJC,eAAgB,oBAElBc,gBAAiB,CACff,GAAI,sCACJC,eAAgB,YAElBe,kBAAmB,CACjBhB,GAAI,wCACJC,eAAgB,kDAElBgB,kBAAmB,CACjBjB,GAAI,wCACJC,eAAgB,qBAElBiB,wBAAyB,CACvBlB,GAAI,gDACJC,eAAgB,+CAElBkB,6BAA8B,CAC5BnB,GAAI,sDACJC,eAAgB,4CAElBmB,gCAAiC,CAC/BpB,GAAI,yDACJC,eAAgB,iDAElBoB,kBAAmB,CACjBrB,GAAI,gDACJC,eAAgB,uBAElBqB,qBAAsB,CACpBtB,GAAI,mDACJC,eAAgB,0BAElBsB,yBAA0B,CACxBvB,GAAI,6CACJC,eAAgB,wCAElBuB,oCAAqC,CACnCxB,GAAI,mDACJC,eACE,mHAEJwB,oBAAqB,CACnBzB,GAAI,8CACJC,eAAgB,4BAElByB,+BAAgC,CAC9B1B,GAAI,oDACJC,eACE,4GAEJ0B,oCAAqC,CACnC3B,GAAI,0DACJC,eACE,kIAEJ2B,2BAA4B,CAC1B5B,GAAI,gDACJC,eAAgB,4CAElB4B,yBAA0B,CACxB7B,GAAI,8CACJC,eAAgB,6DAElB6B,OAAQ,CACN9B,GAAI,uCACJC,eAAgB,iBAElB8B,mBAAoB,CAClB/B,GAAI,8CACJC,eACE,4FAEJ+B,kBAAmB,CACjBhC,GAAI,6CACJC,eACE,+HAEJgC,cAAe,CACbjC,GAAI,yCACJC,eAAgB,uCAElBiC,YAAa,CACXlC,GAAI,uCACJC,eAAgB,uDAElBkC,cAAe,CACbnC,GAAI,8CACJC,eAAgB,kCAElBmC,0BAA2B,CACzBpC,GAAI,qDACJC,eACE,kGAEJoC,yBAA0B,CACxBrC,GAAI,oDACJC,eACE,4HAEJqC,qBAAsB,CACpBtC,GAAI,gDACJC,eAAgB,6DAElBsC,mBAAoB,CAClBvC,GAAI,8CACJC,eAAgB,4DAElBuC,iBAAkB,CAChBxC,GAAI,4CACJC,eAAgB,6BAElBwC,6BAA8B,CAC5BzC,GAAI,mDACJC,eAAgB,6EAElByC,4BAA6B,CAC3B1C,GAAI,kDACJC,eACE,8HAEJ0C,mBAAoB,CAClB3C,GAAI,8CACJC,eAAgB,0CAElB2C,iBAAkB,CAChB5C,GAAI,4CACJC,eAAgB,0DAElB4C,gBAAiB,CACf7C,GAAI,iDACJC,eAAgB,qCAElB6C,4BAA6B,CAC3B9C,GAAI,wDACJC,eACE,yGAEJ8C,2BAA4B,CAC1B/C,GAAI,uDACJC,eACE,kIAEJ+C,sBAAuB,CACrBhD,GAAI,kDACJC,eAAgB,+BAElBgD,uBAAwB,CACtBjD,GAAI,mDACJC,eAAgB,4DAElBiD,qBAAsB,CACpBlD,GAAI,iDACJC,eAAgB,qDAElBkD,SAAU,CACRnD,GAAI,yCACJC,eAAgB,eAElBmD,eAAgB,CACdpD,GAAI,0CACJC,eAAgB,mBAElBoD,oBAAqB,CACnBrD,GAAI,+CACJC,eAAgB,uEAElBqD,gBAAiB,CACftD,GAAI,2CACJC,eAAgB,sCAElBsD,cAAe,CACbvD,GAAI,yCACJC,eAAgB,yDAElBuD,aAAc,CACZxD,GAAI,wCACJC,eAAgB,iBAElBwD,wBAAyB,CACvBzD,GAAI,6CACJC,eACE,iPAEJyD,qBAAsB,CACpB1D,GAAI,iDACJC,eAAgB,0BAElB0D,0BAA2B,CACzB3D,GAAI,gDACJC,eAAgB,0BAElB2D,gCAAiC,CAC/B5D,GAAI,sDACJC,eAAgB,wEAElB4D,4BAA6B,CAC3B7D,GAAI,kDACJC,eAAgB,yCAElB6D,sBAAuB,CACrB9D,GAAI,mDACJC,eAAgB,4BAElB8D,2BAA4B,CAC1B/D,GAAI,kDACJC,eAAgB,4BAElB+D,iCAAkC,CAChChE,GAAI,wDACJC,eACE,0FAEJgE,6BAA8B,CAC5BjE,GAAI,oDACJC,eAAgB,yCAElBiE,iBAAkB,CAChBlE,GAAI,gDACJC,eAAgB,+BAElBkE,gBAAiB,CACfnE,GAAI,2CACJC,eAAgB,oBAElBmE,qBAAsB,CACpBpE,GAAI,0CACJC,eAAgB,8BAElBoE,qBAAsB,CACpBrE,GAAI,0CACJC,eACE,4FAEJqE,uBAAwB,CACtBtE,GAAI,4CACJC,eAAgB,6CAElBsE,qBAAsB,CACpBvE,GAAI,0CACJC,eAAgB,gCAElBuE,cAAe,CACbxE,GAAI,wCACJC,eAAgB,kBAElBwE,mBAAoB,CAClBzE,GAAI,wCACJC,eAAgB,oEAElByE,qBAAsB,CACpB1E,GAAI,0CACJC,eAAgB,yCAElB0E,mBAAoB,CAClB3E,GAAI,wCACJC,eACE,gHAEJ2E,UAAW,CACT5E,GAAI,oCACJC,eAAgB,cAElB4E,gBAAiB,CACf7E,GAAI,qCACJC,eAAgB,mBAElB6E,OAAQ,CACN9E,GAAI,uCACJC,eAAgB,UAElB8E,WAAY,CACV/E,GAAI,uCACJC,eAAgB,0BAElB+E,QAAS,CACPhF,GAAI,kCACJC,eAAgB,WAElBgF,sBAAuB,CACrBjF,GAAI,2CACJC,eAAgB,mEAElBiF,OAAQ,CACNlF,GAAI,6BACJC,eAAgB,UAElBkF,SAAU,CACRnF,GAAI,+BACJC,eAAgB,YAElBmF,QAAS,CACPpF,GAAI,8BACJC,eAAgB,oBAElBoF,SAAU,CACRrF,GAAI,+BACJC,eAAgB,oBAElBqF,SAAU,CACRtF,GAAI,2BACJC,eAAgB,gBAElBsF,aAAc,CACZvF,GAAI,4CACJC,eAAgB,gBAElBuF,eAAgB,CACdxF,GAAI,sCACJC,eAAgB,yCAElBwF,eAAgB,CACdzF,GAAI,sCACJC,eAAgB,uBAElByF,kBAAmB,CACjB1F,GAAI,yCACJC,eAAgB,0BAElB0F,aAAc,CACZ3F,GAAI,6CACJC,eAAgB,iBAElB2F,oBAAqB,CACnB5F,GAAI,4CACJC,eAAgB,iCAElB4F,2BAA4B,CAC1B7F,GAAI,oDACJC,eAAgB,4CAElB6F,+BAAgC,CAC9B9F,GAAI,wDACJC,eACE,+GAEJ8F,eAAgB,CACd/F,GAAI,uCACJC,eAAgB,oCAElB+F,0BAA2B,CACzBhG,GAAI,mDACJC,eAAgB,mEAElBgG,QAAS,CACPjG,GAAI,8BACJC,eAAgB,WAElBiG,eAAgB,CACdlG,GAAI,mCACJC,eAAgB,iDAElBkG,YAAa,CACXnG,GAAI,qDACJC,eAAgB,gBAElBmG,cAAe,CACbpG,GAAI,uDACJC,eAAgB,kBAElBoG,SAAU,CACRrG,GAAI,kDACJC,eAAgB,aAElBqG,WAAY,CACVtG,GAAI,uDACJC,eAAgB,eAElBsG,kBAAmB,CACjBvG,GAAI,wDACJC,eACE,kIAEJuG,KAAM,CACJxG,GAAI,2BACJC,eAAgB,uBAElBwG,QAAS,CACPzG,GAAI,8BACJC,eAAgB,YAElByG,mBAAoB,CAClB1G,GAAI,0CACJC,eACE,0FAEJ0G,YAAa,CACX3G,GAAI,kCACJC,eAAgB,eAElB2G,iBAAkB,CAChB5G,GAAI,uCACJC,eAAgB,qBAElB4G,aAAc,CACZ7G,GAAI,mCACJC,eAAgB,yBAElB6G,eAAgB,CACd9G,GAAI,uCACJC,eAAgB,oBAElB8G,0BAA2B,CACzB/G,GAAI,mDACJC,eACE,gVAEJ+G,yBAA0B,CACxBhH,GAAI,iDACJC,eACE,wIAEJgH,aAAc,CACZjH,GAAI,oCACJC,eAAgB,oBAElBiH,UAAW,CACTlH,GAAI,iCACJC,eAAgB,qBAGlBkH,SAAU,CACRnH,GAAI,gCACJC,eAAgB,aAElBmH,WAAY,CACVpH,GAAI,iCACJC,eAAgB,cAElBoH,sBAAuB,CACrBrH,GAAI,6CACJC,eACE,kFAEJqH,oBAAqB,CACnBtH,GAAI,4CACJC,eAAgB,yBAElBsH,+BAAgC,CAC9BvH,GAAI,yDACJC,eACE,2RAEJuH,2BAA4B,CAC1BxH,GAAI,oDACJC,eACE,wMAEJwH,iBAAkB,CAChBzH,GAAI,uCACJC,eAAgB,qBAElByH,wBAAyB,CACvB1H,GAAI,+CACJC,eAAgB,gEAElB0H,4BAA6B,CAC3B3H,GAAI,mDACJC,eACE,qQAEJ2H,mBAAoB,CAClB5H,GAAI,2CACJC,eAAgB,yCAElB4H,sBAAuB,CACrB7H,GAAI,6CACJC,eAAgB,UAElB6H,oBAAqB,CACnB9H,GAAI,2CACJC,eAAgB,QAElB8H,sBAAuB,CACrB/H,GAAI,6CACJC,eAAgB,UAElB+H,mBAAoB,CAClBhI,GAAI,0CACJC,eAAgB,OAElBgI,YAAa,CACXjI,GAAI,0CACJC,eAAgB,SAElBiI,eAAgB,CACdlI,GAAI,6CACJC,eAAgB,YAElBkI,gBAAiB,CACfnI,GAAI,8CACJC,eAAgB,aAElBmI,YAAa,CACXpI,GAAI,2CACJC,eAAgB,aAElBoI,eAAgB,CACdrI,GAAI,8CACJC,eAAgB,UAElBqI,mBAAoB,CAClBtI,GAAI,0CACJC,eAAgB,aAElBsI,mBAAoB,CAClBvI,GAAI,0CACJC,eAAgB,aAElBuI,cAAe,CACbxI,GAAI,8CACJC,eAAgB,cAElBwI,sBAAuB,CACrBzI,GAAI,sDACJC,eAAgB,eAElByI,mBAAoB,CAClB1I,GAAI,mDACJC,eAAgB,YAElB0I,eAAgB,CACd3I,GAAI,+CACJC,eAAgB,QAElB2I,YAAa,CACX5I,GAAI,wDACJC,eAAgB,iCAElB4I,WAAY,CACV7I,GAAI,0CACJC,eAAgB,oBAElB6I,WAAY,CACV9I,GAAI,+CACJC,eAAgB,oBAElB8I,IAAK,CACH/I,GAAI,uCACJC,eAAgB,OAElB+I,OAAQ,CACNhJ,GAAI,0CACJC,eAAgB,UAElBgJ,QAAS,CACPjJ,GAAI,2BACJC,eAAgB,WAElBiJ,iBAAkB,CAChBlJ,GAAI,yCACJC,eAAgB,QAElBkJ,wBAAyB,CACvBnJ,GAAI,gDACJC,eAAgB,eAElBmJ,gBAAiB,CACfpJ,GAAI,wCACJC,eAAgB,OAElBoJ,8BAA+B,CAC7BrJ,GAAI,oDACJC,eAAgB,uBAElBqJ,iCAAkC,CAChCtJ,GAAI,uDACJC,eAAgB,0BAElBsJ,mBAAoB,CAClBvJ,GAAI,2CACJC,eAAgB,wBAElBuJ,mBAAoB,CAClBxJ,GAAI,2CACJC,eAAgB,wBAElBwJ,0BAA2B,CACzBzJ,GAAI,mDACJC,eACE,4JAEJyJ,gBAAiB,CACf1J,GAAI,sCACJC,eAAgB,mDAElB0J,mBAAoB,CAClB3J,GAAI,yCACJC,eAAgB,sDAElB2J,cAAe,CACb5J,GAAI,oCACJC,eAAgB,gCAElB4J,yBAA0B,CACxB7J,GAAI,gDACJC,eACE,kLAEJ6J,6BAA8B,CAC5B9J,GAAI,qDACJC,eAAgB,0CAElB8J,UAAW,CACT/J,GAAI,8CACJC,eAAgB,4B,oCC7pBpB,YAKeH,gBAAe,CAC5BkK,QAAS,CACPhK,GAAI,uBACJC,eAAgB,WAElBgK,0BAA2B,CACzBjK,GAAI,yCACJC,eAAgB,yBAElBiK,cAAe,CACblK,GAAI,6BACJC,eAAgB,YAElBkK,UAAW,CACTnK,GAAI,yBACJC,eAAgB,aAElBmK,iBAAkB,CAChBpK,GAAI,gCACJC,eAAgB,sBAElBoK,gBAAiB,CACfrK,GAAI,+BACJC,eAAgB,oBAElBqK,WAAY,CACVtK,GAAI,0BACJC,eAAgB,kBAElBsK,UAAW,CACTvK,GAAI,yBACJC,eAAgB,8BAElBuK,gBAAiB,CACfxK,GAAI,+BACJC,eAAgB,uBAElBwK,WAAY,CACVzK,GAAI,2BACJC,eAAgB,iBAElByK,IAAK,CACH1K,GAAI,mBACJC,eAAgB,OAElB0K,cAAe,CACb3K,GAAI,8BACJC,eAAgB,oBAElB2K,YAAa,CACX5K,GAAI,2BACJC,eAAgB,uBAElB4K,UAAW,CACT7K,GAAI,yBACJC,eAAgB,aAElB6K,SAAU,CACR9K,GAAI,wBACJC,eAAgB,YAElB8K,uBAAwB,CACtB/K,GAAI,sCACJC,eAAgB,8BAElB+K,kBAAmB,CACjBhL,GAAI,uCACJC,eAAgB,iCAElBgL,eAAgB,CACdjL,GAAI,8BACJC,eAAgB,6BAElBiL,OAAQ,CACNlL,GAAI,sBACJC,eAAgB,UAElBkL,eAAgB,CACdnL,GAAI,+BACJC,eAAgB,2EAElBmL,WAAY,CACVpL,GAAI,0BACJC,eAAgB,oBAElBoL,YAAa,CACXrL,GAAI,2BACJC,eACE,wFAEJqL,kBAAmB,CACjBtL,GAAI,iCACJC,eAAgB,+BAElBsL,MAAO,CACLvL,GAAI,qBACJC,eAAgB,SAElBuL,sBAAuB,CACrBxL,GAAI,qCACJC,eAAgB,mBAElBwL,oBAAqB,CACnBzL,GAAI,mCACJC,eAAgB,gBAElByL,qBAAsB,CACpB1L,GAAI,oCACJC,eAAgB,iBAElB0L,kBAAmB,CACjB3L,GAAI,iCACJC,eAAgB,QAElB2L,kBAAmB,CACjB5L,GAAI,iCACJC,eAAgB,QAElBG,MAAO,CACLJ,GAAI,qBACJC,eAAgB,SAElB4L,uBAAwB,CACtB7L,GAAI,mCACJC,eAAgB,6C,4FC7Hb,MAAM6L,EAAcC,IAOpB,IAPqB,UAC1BC,EAAS,MACTC,EAAK,OACLC,EAAM,cACNC,EAAa,eACbC,EAAiB,EAAC,SAClBC,GACDN,EACC,MAAOO,EAAUC,EAAWC,GCVvB,WACL,MAAOC,EAAOC,GAAYC,oBAAS,IAC5BH,EAAUI,GAAeD,mBAAS,CAAEE,EAAG,EAAGC,EAAG,IAG9CC,EAAkBC,uBAAaC,IACnCL,EAAY,CAAEC,EAAGI,EAAEC,QAAUC,EAAIC,QAAQC,WAAa,GAAIP,EAAGG,EAAEK,UAC/DZ,GAAS,EAAK,GACb,IACGa,EAAiBP,uBAAY,IAAMN,GAAS,IAAQ,IAIpDS,EAAMK,mBAuBZ,MAAO,CAjBaR,uBACjBS,IACKN,EAAIC,UACND,EAAIC,QAAQM,oBAAoB,YAAaX,GAC7CI,EAAIC,QAAQM,oBAAoB,WAAYH,IAG9CJ,EAAIC,QAAUK,EAEVN,EAAIC,UACND,EAAIC,QAAQO,iBAAiB,YAAaZ,GAC1CI,EAAIC,QAAQO,iBAAiB,WAAYJ,GAC3C,GAEF,CAACR,EAAiBQ,IAGCd,EAAOD,EAC9B,CD3B0CoB,GAClCC,EAAe,IAAAC,OAAO5B,GAG5B,OACE6B,cAAA,OAAK/B,UAAS,SAAA8B,OAAW9B,GAAa,IAAKK,SACzC2B,eAAA,OAAKhC,UAAU,WAAWmB,IAAKb,EAASD,SAAA,CACtC0B,cAAA,OACE/B,UAAS,iCAAA8B,OACP7B,EAAQ4B,EAAkB,SAAQ,eAEpCI,MAAO,CAAEC,MAAM,GAADJ,OAAK3B,EAAgB,IAAM,IAAMA,EAAa,MAC5DgC,KAAK,cACL,gBAAehC,EACf,gBAAc,IACd,gBAAc,QAEhB4B,cAAA,OACE/B,UAAS,2BAAA8B,OAA6B7B,EAAQ4B,EAAkB,SAAQ,eACxEI,MAAO,CAAEC,MAAM,GAADJ,OAAK1B,EAAiB,IAAM,IAAMA,EAAc,MAC9D+B,KAAK,cACL,gBAAe/B,EACf,gBAAc,IACd,gBAAc,QAEhB2B,cAAA,OAAK/B,UAAS,kBAAA8B,OAAoB7B,EAAQ4B,EAAkB,SAAQ,wBACnEtB,GACCyB,eAAA,QACEhC,UAAS,4EAAA8B,OACI,SAAX5B,EAAoB,IAAMA,GAE5B+B,MAAO,CAAEG,KAAM5B,EAASK,GAAIR,SAAA,CAE3BA,EACD0B,cAAA,QACE/B,UAAU,sEACViC,MAAO,CAAEI,OAAQ,UAAWD,KAAM,6BAKtC,C,oCErDV,4FAGO,MAAME,EAAYvC,IAAoE,IAAnE,KAAEwC,EAAI,YAAE5H,EAAW,MAAE8F,EAAK,UAAET,EAAS,aAAEwC,GAAe,GAAOzC,EACrF,OACEiC,eAAA,OACEhC,UAAS,sBAAA8B,OACPU,EAAe,eAAiB,wBAAuB,uBAAAV,OACnC9B,GAAa,IAAKK,SAAA,CAExC0B,cAAA,OAAK/B,UAAU,cAAaK,SAAEkC,IAC9BR,cAACU,EAAgB,CACfhC,MAAOiC,OAAOjC,IAAoB,IAAVA,EAAcsB,cAACY,IAAe,CAAClC,MAAOmC,KAAKC,MAAMpC,KAAaA,EACtFqC,MAAOnI,EACPqF,UAAU,oBACVwC,aAAcA,MAEZ,EAIGC,EAAmBM,IAAA,IAAC,MAAEtC,EAAK,MAAEqC,EAAK,UAAE9C,EAAS,aAAEwC,GAAe,GAAeO,EAAA,OACxFf,eAAA,OAAKhC,UAAWA,EAAUK,SAAA,CACxB0B,cAAA,MAAI/B,UAAS,mCAAA8B,OAAqCU,EAAe,QAAU,OAAQnC,SAAEI,IACrFsB,cAAA,QAAM/B,UAAS,iBAAA8B,OAAmBU,EAAe,QAAU,aAAcnC,SAAEyC,MACvE,C,oCCzBR,YAKehP,gBAAe,CAC5BkP,aAAc,CACZhP,GAAI,4BACJC,eAAgB,mBAElBgP,kBAAmB,CACjBjP,GAAI,gCACJC,eAAgB,oBAElBiP,YAAa,CACXlP,GAAI,0BACJC,eAAgB,gBAElBM,SAAU,CACRP,GAAI,uBACJC,eAAgB,YAElBkP,UAAW,CACTnP,GAAI,uBACJC,eAAgB,QAElBmP,qBAAsB,CACpBpP,GAAI,mCACJC,eAAgB,gCAElBoP,QAAS,CACPrP,GAAI,qBACJC,eAAgB,MAElBqP,mBAAoB,CAClBtP,GAAI,sCACJC,eAAgB,+BAElBsP,UAAW,CACTvP,GAAI,uBACJC,eAAgB,cAElBuP,SAAU,CACRxP,GAAI,sBACJC,eAAgB,aAElBwP,UAAW,CACTzP,GAAI,uBACJC,eAAgB,cAElByP,SAAU,CACR1P,GAAI,sBACJC,eAAgB,aAElB0P,SAAU,CACR3P,GAAI,sBACJC,eAAgB,aAElB2P,UAAW,CACT5P,GAAI,uBACJC,eAAgB,cAElB4P,SAAU,CACR7P,GAAI,sBACJC,eAAgB,aAElB6P,YAAa,CACX9P,GAAI,yBACJC,eAAgB,gBAElB8P,cAAe,CACb/P,GAAI,4BACJC,eAAgB,YAElB+P,eAAgB,CACdhQ,GAAI,6BACJC,eAAgB,aAElBgQ,eAAgB,CACdjQ,GAAI,oCACJC,eAAgB,oBAElBiQ,cAAe,CACblQ,GAAI,gCACJC,eAAgB,mBAElBkQ,mBAAoB,CAClBnQ,GAAI,qCACJC,eAAgB,wBAElBmQ,WAAY,CACVpQ,GAAI,gCACJC,eAAgB,eAElBoQ,WAAY,CACVrQ,GAAI,+CACJC,eAAgB,eAElBqQ,UAAW,CACTtQ,GAAI,+BACJC,eAAgB,iBAElBsQ,aAAc,CACZvQ,GAAI,kCACJC,eAAgB,oBAElBuQ,kBAAmB,CACjBxQ,GAAI,qCACJC,eAAgB,kBAElBK,aAAc,CACZN,GAAI,kCACJC,eAAgB,gBAElBwQ,cAAe,CACbzQ,GAAI,mCACJC,eAAgB,qBAElByQ,SAAU,CACR1Q,GAAI,8BACJC,eAAgB,YAElB0Q,UAAW,CACT3Q,GAAI,+BACJC,eAAgB,aAElB2Q,SAAU,CACR5Q,GAAI,8BACJC,eAAgB,YAElB4Q,UAAW,CACT7Q,GAAI,+BACJC,eAAgB,aAElB6Q,oBAAqB,CACnB9Q,GAAI,yCACJC,eAAgB,0BAElB8Q,qBAAsB,CACpB/Q,GAAI,2BACJC,eAAgB,yCAElB+Q,QAAS,CACPhR,GAAI,sBACJC,eAAgB,WAElBgR,SAAU,CACRjR,GAAI,uBACJC,eAAgB,YAElBiR,WAAY,CACVlR,GAAI,yBACJC,eAAgB,eAElBkR,eAAgB,CACdnR,GAAI,6BACJC,eAAgB,mBAElBmR,UAAW,CACTpR,GAAI,wBACJC,eAAgB,aAElBoR,YAAa,CACXrR,GAAI,0BACJC,eAAgB,eAElBqR,YAAa,CACXtR,GAAI,0BACJC,eAAgB,OAElBsR,OAAQ,CACNvR,GAAI,qBACJC,eAAgB,UAElBuR,MAAO,CACLxR,GAAI,oBACJC,eAAgB,SAElBwR,QAAS,CACPzR,GAAI,sBACJC,eAAgB,iBAElByR,QAAS,CACP1R,GAAI,sBACJC,eAAgB,iBAElB0R,MAAO,CACL3R,GAAI,oBACJC,eAAgB,SAElB2R,SAAU,CACR5R,GAAI,uBACJC,eAAgB,YAElB4R,gBAAiB,CACf7R,GAAI,2BACJC,eAAgB,wCAElB6R,aAAc,CACZ9R,GAAI,2BACJC,eAAgB,iBAElB8R,OAAQ,CACN/R,GAAI,iBACJC,eAAgB,WAElB+R,aAAc,CACZhS,GAAI,+BACJC,eAAgB,gBAElBgS,YAAa,CACXjS,GAAI,8BACJC,eAAgB,gBAElBiS,eAAgB,CACdlS,GAAI,0BACJC,eAAgB,mBAElBkS,WAAY,CACVnS,GAAI,iCACJC,eAAgB,iBAElBmS,kBAAmB,CACjBpS,GAAI,wCACJC,eAAgB,wBAElBoS,iBAAkB,CAChBrS,GAAI,6BACJC,eAAgB,mBAElBqS,MAAO,CACLtS,GAAI,oBACJC,eAAgB,SAElBsS,MAAO,CACLvS,GAAI,oBACJC,eAAgB,SAElBuS,MAAO,CACLxS,GAAI,wBACJC,eAAgB,U,oCChPpB,8IAUO,SAASwS,EAAcC,GAC5B,IAAIC,EAAQ,IAAIC,KAChB,OAAOD,EAAME,SAASF,EAAMG,WAAaJ,EAC3C,CAEA,MAAMK,EAAO,IAAIH,KACXI,EAAa,aACNC,EAAa,CACxBzD,SAAU,CACR0D,MAAOC,kBAAOC,kBAAYL,GAAOC,GACjCK,IAAKF,kBAAOJ,EAAMC,IAEpBvD,UAAW,CACTyD,MAAOC,kBAAOG,kBAAaP,GAAOC,GAClCK,IAAKF,kBAAOJ,EAAMC,IAEpBtD,SAAU,CACRwD,MAAOC,kBAAOI,kBAAYR,GAAOC,GACjCK,IAAKF,kBAAOJ,EAAMC,IAEpBrD,SAAU,CACRuD,MAAOC,kBAAOC,mBAAY,IAAIR,MAAOY,QAAQT,EAAKU,UAAY,IAAKT,GACnEK,IAAKF,kBAAOO,mBAAU,IAAId,MAAOY,QAAQT,EAAKU,UAAY,IAAKT,IAEjEpD,UAAW,CACTsD,MAAOC,kBAAOG,mBAAa,IAAIV,MAAOC,SAASE,EAAKD,WAAa,IAAKE,GACtEK,IAAKF,kBAAOQ,mBAAW,IAAIf,MAAOC,SAASE,EAAKD,WAAa,IAAKE,IAEpEnD,SAAU,CACRqD,MAAOC,kBAAOI,mBAAY,IAAIX,MAAOgB,YAAYb,EAAKc,cAAgB,IAAKb,GAC3EK,IAAKF,kBAAOW,mBAAU,IAAIlB,MAAOgB,YAAYb,EAAKc,cAAgB,IAAKb,I,oCCxCpE,SAASe,EAAcC,EAAGC,GAC/B,OAAID,EAAEE,WAAWC,OAASF,EAAEC,WAAWC,OAAe,EAClDF,EAAEC,WAAWC,OAASH,EAAEE,WAAWC,QAAgB,EAChD,CACT,CAEO,SAASC,EAAkBJ,EAAGC,GACnC,OAAO,IAAIrB,KAAKqB,EAAEC,WAAWG,YAAc,IAAIzB,KAAKoB,EAAEE,WAAWG,WACnE,CAEO,SAASC,EAAyBN,EAAGC,GAC1C,OAAO,IAAIrB,KAAKqB,EAAEI,YAAc,IAAIzB,KAAKoB,EAAEK,WAC7C,CAEO,SAASE,EAA4BP,EAAGC,EAAGO,GAChD,OAAIR,EAAEQ,GAAYP,EAAEO,IAAmB,EACnCP,EAAEO,GAAYR,EAAEQ,GAAkB,EAC/B,CACT,CAlBA,uI,oCCAA,8GAMA,MAAM1I,EAAcC,IAAA,IAAC,QAAE0I,GAAS1I,EAAA,OAC9BgC,cAAA,OAAK/B,UAAU,qBAAoBK,SACjC0B,cAAA,OACEE,MAAO,CAAE/B,OAAQ,QAASgC,MAAM,GAADJ,OAAe,IAAV2G,EAAa,MACjDzI,UAAU,6BAER,EAGK0I,EAAe3F,IAAA,IAAC,KAAEvI,EAAI,KAAEmO,EAAI,aAAEC,EAAY,OAAEC,EAAM,WAAEC,GAAoB/F,EAAA,OACnFf,eAAA,MAAIhC,UAAU,oBAAmBK,SAAA,CAC/B2B,eAAA,OAAKhC,UAAU,eAAcK,SAAA,CAC3B0B,cAAA,OAAK/B,UAAU,iBAAgBK,SAC5BsI,EACC5G,cAACgH,IAAI,CAAC/I,UAAU,iBAAiBgJ,GAAIL,EAAKtI,SACvC7F,IAGHA,IAGJwH,eAAA,OAAKhC,UAAU,eAAcK,SAAA,CAC3B0B,cAAA,QAAM/B,UAAU,QAAOK,SAAEwI,IACxBC,GAAc/G,cAAA,QAAM/B,UAAU,YAAWK,SAAEyI,UAGhD/G,cAAA,OAAK/B,UAAU,WAAUK,SACvB0B,cAACjC,EAAW,CAAC2I,QAASG,QAErB,EAGMK,EAAeC,IAA2D,IAA1D,KAAEC,EAAI,WAAEC,EAAU,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,GAAWL,EAC/E,OACEnH,cAAA,MAAI/B,UAAU,cAAaK,SACxB8I,EAAKK,KAAI,CAACC,EAAGC,IACZ3H,cAAC2G,EAAY,CAEXlO,KAAMiP,EAAEJ,GACRV,KAAMW,EAAQ,GAAAxH,OAAMwH,GAAQxH,OAAG2H,EAAEF,IAAe,KAChDX,aAAca,EAAEhB,QAChBI,OAAQY,EAAEL,GACVN,WAAY/G,cAAC4H,IAAgB,IAAKC,IAASrK,SALtCmK,MAQN,C,oCCnDT,qOAYO,MAAMG,EAAsB9J,IAS5B,IAT6B,aAClC+J,EAAY,cACZC,EAAa,WACbC,EAAU,YACVC,EAAW,iBACXC,EAAgB,uBAChBC,EAAsB,QACtBC,EAAO,WACPC,GACDtK,EACC,MAAMuK,EAAgBvI,cAAC4H,IAAgB,IAAKC,IAASE,KAC/CS,EAAsBxI,cAAC4H,IAAgB,IAAKC,IAAS,GAAD9H,OAAIgI,EAAY,QAE1E,OACE9H,eAAA,YAAUhO,GAAI8V,EAAc9J,UAAW+J,EAAc1J,SAAA,CACnD0B,cAAA,UAAQ/B,UAAWgK,EAAW3J,SAAEiK,IAC/BF,EAAQI,QACPzI,cAAA,OAAK/B,UAAU,aAAYK,SACzB0B,cAAC4H,IAAgB,IACXC,IAAS7E,qBACb0F,OAAQ,CACNC,MAAO3I,cAAC4H,IAAgB,IAAKC,IAAS5E,UACtC2F,MAAOJ,OAKbxI,cAAC6I,EAA2B,CAC1BN,cAAeA,EACfO,oBAAqBN,EACrBT,aAAcA,EACdO,WAAYA,EACZS,uBAAwBb,GAAeK,EACvCS,kBAAmBX,EACnBY,SAAUd,EACVe,eAAgBd,MAGX,EAIFe,EAAwBnI,IAU9B,IAV+B,aACpC+G,EAAY,cACZC,EAAa,WACbC,EAAU,iBACVE,EAAgB,uBAChBC,EAAsB,kBACtBgB,EAAiB,qBACjBC,EAAoB,iBACpBC,EAAgB,eAChBC,GACDvI,EACC,MAAOQ,EAAWgI,GAAgB5K,mBAAS,YAErC6K,EAAkB,CACtB,CAAE/K,MAAO,WAAYqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAASpG,YAC3D,CAAE/C,MAAO,YAAaqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAASnG,aAC5D,CAAEhD,MAAO,WAAYqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAASlG,YAC3D,CAAEjD,MAAO,WAAYqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAASjG,YAC3D,CAAElD,MAAO,YAAaqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAAShG,aAC5D,CAAEnD,MAAO,WAAYqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAAS/F,aAC1DsH,GAAmC,WAAd5H,IAA2B,CAC/C9C,MAAO,SACPqC,MAAOf,cAAC4H,IAAgB,IAAKC,IAAS9F,cACtC2H,kBAAkB,IAEpBC,QAAQ1D,GAAMA,IAchB,OAZA2D,qBAAU,KACR,IAAKL,GAAkBD,IAAqBpE,IAAqB,SAAEC,MAEjE,YADAqE,EAAa,YAGf,MAAMK,EAAiBC,OAAOC,KAAK7E,KAAY8E,MAC5CC,GACC/E,IAAW+E,GAAO9E,QAAUmE,GAAoBpE,IAAW+E,GAAO3E,MAAQiE,IAE7DC,EAAjBK,GAA6D,SAAS,GACrE,CAACP,EAAkBC,IAGpBtJ,eAAA,YAAUhO,GAAI8V,EAAc9J,UAAW+J,EAAc1J,SAAA,CACnD0B,cAAA,UAAQ/B,UAAWgK,EAAW3J,SAC5B0B,cAAC4H,IAAgB,IAAKC,IAASrG,cAEjCxB,cAACkK,IAAM,CACLC,SAAUhD,IAAgB,IAAf,MAAEzI,GAAOyI,EAClBgB,EACE,IACKC,EACHgC,UAAMC,EACNjJ,UAAW8D,IAAWxG,GAAOyG,MAC7B7D,QAAS4D,IAAWxG,GAAO4G,KAE7B,UAEF+D,GAAqB,GACrBG,EAAa9K,EAAM,EAErB4L,gBAAgB,eAChBjC,QAASoB,EACT/K,MACE0K,EACIK,EAAgBE,QAAQY,GAA4B,WAAjBA,EAAO7L,QAC1C+K,EAAgBE,QAAQY,GAAWA,EAAO7L,QAAU8C,IAE1DkI,iBAAmBa,GAAWA,EAAOb,qBAE9B,EAIFc,EAAmBC,IAQzB,IAR0B,aAC/B1C,EAAY,cACZC,EAAa,WACbC,EAAU,cACVyC,EAAa,iBACbvC,EAAgB,uBAChBC,EAAsB,qBACtBiB,GACDoB,EACC,MAAME,EAAOC,cACP3F,EAAa,aACnB,OACEhF,eAAA,YAAUhO,GAAI8V,EAAc9J,UAAW+J,EAAc1J,SAAA,CACnD0B,cAAA,UAAQ/B,UAAWgK,EAAW3J,SAC5B0B,cAAC4H,IAAgB,IAAKC,IAASE,OAEjC9H,eAAA,OAAKhC,UAAU,OAAMK,SAAA,CACnB0B,cAAC6K,IAAY,CAAC5M,UAAU,+BACxB+B,cAAC8K,IAAU,CACTC,SAAUL,EAAgBM,kBAAMN,EAAezF,EAAY,IAAIJ,MAAU,KACzEsF,SAAWnF,IACTmD,EACE,IACKC,EACHgC,UAAMC,EACN,CAACtC,GAAe/C,EAAOI,kBAAOJ,EAAMC,GAAc,MAEpD,UAEFoE,GAAqB,EAAK,EAE5BpE,WAAYA,EACZhH,UAAU,kCACVgN,gBAAiBN,EAAKO,cAAcrD,IAAS,GAAD9H,OAAIgI,EAAY,iBAC5DoD,kBAAgB,EAChBC,wBAAsB,SAGjB,EAOFvC,EAA8BwC,IASpC,IARLrC,mBAAqBsC,KAAMC,GAAY,cACvChD,EAAa,aACbR,EAAY,uBACZgB,EAAsB,oBACtBD,EAAmB,eACnBI,EAAc,SACdD,EAAQ,WACRX,EAAa,QACd+C,EACC,MAEMG,EAAYjB,GAAYA,GAAUA,EAAOjC,GAAciC,EAAOjC,GAAciC,EAiB5EkB,EAAiBF,EAAWvB,MAAMO,GAAWA,EAAOjC,KAAgBS,IAE1E,OACE/I,cAACkK,IAAM,CACLwB,UAAWH,EAAWG,UACtBvB,SApBqBwB,IACvB,MAAMjN,EAAQ8M,EAASG,GAGjBC,EAFYD,GAAUjN,IAAUoK,OAETuB,EAAY3L,EACzCuK,EACE,IACKC,EACHkB,UAAMC,EACN,CAACtC,GAAe6D,QAAYvB,GAE9B,SACD,EASCC,gBAAgB,eAChBuB,eA1BctB,GAAWA,EAAO9R,MAAQ8R,EA2BxCuB,eAAgBN,EAChBO,YAAa7C,EAAenB,IAAiBQ,EAC7CF,QAASkD,EACT7M,MAAO+M,GAAkB,KACzBO,aAAa,EACbC,WAA6B,cAAjBlE,GAAgCmB,EAAegD,mBAC3DC,OAAQ,CACNC,KAAOC,IAAU,IACZA,EAEHC,OAAQ,MAGZ,C,oCC5NN,qEAMA,MAAMC,EAAmBA,CAACC,EAAOC,KAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,MAAO,IACFF,EACHd,WAAW,EACXjD,SAAS,GAEb,IAAK,gBACH,MAAO,IACF+D,EACHd,WAAW,EACXjD,SAAS,EACT6C,KAAMmB,EAAOE,SAAWF,EAAOE,QAAQ7C,OAAOC,KAAK0C,EAAOE,SAAS,KAEvE,IAAK,gBACH,MAAO,IACFH,EACHd,WAAW,EACXjD,SAAS,GAEb,QAEE,MADAmE,QAAQC,IAAIJ,GACN,IAAIK,MACd,EAGWC,EAAYA,CAACC,EAAaC,EAASC,KAC9C,MAAMC,EAAQC,aAAaZ,GAAUA,EAAMa,KAAKF,QAC1CG,EAASF,aAAaZ,GAAUA,EAAMe,YAAYD,UACjDd,EAAOgB,GAAYC,qBAAWlB,EAAkB,CACrDb,WAAW,EACXjD,SAAS,EACT6C,KAAM0B,IAmDR,OAhDApD,qBAAU,KACR,IAAI8D,GAAY,EA0ChB,MAtCkBC,WAChB,MAAMC,EAAc,CAClBlL,cAAe,yBAEjB8K,EAAS,CAAEd,KAAM,eACjB,IACE,IAAImB,EAEFA,EADEV,QACaW,YAAM,CACnBC,IAAI,GAADhO,OAAKiO,KAAOjO,OAAGkN,EAAO,KAAAlN,OAAI6N,EAAYX,GAAWW,EAAYX,GAAW,IAC3EgB,OAAQ,MACRC,QAAS,CAAEC,cAAc,SAADpO,OAAWoN,YAGtBW,YAAM,GAAD/N,OAAIiO,KAAOjO,OAAGkN,EAAO,MAGtCS,IACCG,GAAUA,EAAOK,UAA+D,IAApDL,EAAOK,QAAQ,gBAAgBE,QAAQ,SACjElB,IACFW,EAAOzG,KAAKkE,KAAO4B,EAAcW,EAAOzG,KAAKkE,KAAMgC,IAErDE,EAAS,CAAEd,KAAM,gBAAiBC,QAASkB,EAAOzG,SAElDwF,QAAQyB,MAAM,qDACdb,EAAS,CAAEd,KAAM,mBAGvB,CAAE,MAAO2B,GAGFX,GACHF,EAAS,CAAEd,KAAM,iBAErB,GAGF4B,GACO,KACLZ,GAAY,CAAI,CACjB,GACA,CAACT,EAASE,EAAOD,EAAeI,IAE5B,CAACd,EAAM,C,oCC1FhB,6CAEA,SAAS+B,EAAeC,EAAOrX,GAC7B,OAAOqX,EAAMC,QAAO,CAACC,EAAOC,IAAUD,EAAQC,EAAMxX,IAAS,EAC/D,CAEO,SAASyX,EAAmBJ,GACjC,MAAOK,EAAYC,GAAiBlQ,mBAAS,CAC3CmQ,OAAQ,EACRjS,UAAW,IAUb,OARA8M,qBAAU,KACJ4E,GAASA,EAAMQ,QACjBF,EAAc,CACZC,OAAQR,EAAeC,EAAO,UAC9B1R,UAAWyR,EAAeC,EAAO,cAErC,GACC,CAACA,IACGK,CACT,C,oCCpBA,uKAqBA,MAAMI,EAA6B,CACjC7N,UAAW8N,sBAAYC,cAAa/J,kBAAOI,kBAAYX,KAAKuK,OAAQ,eACpE9N,QAAS6N,cACT3c,SAAU2c,cACVxM,SAAUwM,cACVE,QAASC,IACTC,iBAAkBJ,cAClBK,eAAgBC,eAGLC,EAA2BA,IAC1BC,yBAAeV,GAQvBW,EAA2B,CAC/BxO,UAAW,YACXE,QAAS,UACT9O,SAAU,WACVmQ,SAAU,UACV0M,QAAS,YACTE,iBAAkB,mBAClBC,eAAgB,kBAGZK,EAAqB,CACzBC,UAAW,IAGPvD,EAAmBA,CAACC,EAAOC,KAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,MAAO,IACFF,EACHd,WAAW,EACXjD,SAAS,GAEb,IAAK,gBACH,MAAO,IACF+D,EACHd,WAAW,EACXjD,SAAS,EACT+F,MAAO/B,EAAOE,QAAQmD,WAE1B,IAAK,gBACH,MAAO,IACFtD,EACHd,WAAW,EACXjD,SAAS,GAEb,QAEE,MADAmE,QAAQC,IAAIJ,GACN,IAAIK,MACd,EAGWiD,EAAwB,WAI/B,IAHJ/C,EAAWgD,UAAAhB,OAAA,QAAA3E,IAAA2F,UAAA,GAAAA,UAAA,GAAGH,EACdI,EAAwBD,UAAAhB,OAAA,EAAAgB,UAAA,QAAA3F,EACxB6F,EAAUF,UAAAhB,OAAA,QAAA3E,IAAA2F,UAAA,GAAAA,UAAA,GAAG,GAEb,MAAMG,EAAoCC,YAAYH,EAA0B,MAC1E9C,EAAQC,aAAaZ,GAAUA,EAAMa,KAAKF,QAC1CkD,EAAa,IAAIC,iBAEhB9D,EAAOgB,GAAYC,qBAAWlB,EAAkB,CACrDb,WAAW,EACXjD,SAAS,EACT+F,MAAOxB,EAAY8C,UACnBS,iBAAkBN,EAAyB,KAGvC3B,EAAYX,UAChBH,EAAS,CACPd,KAAM,eAGR,IAAIwB,EAAU,CACZ,eAAgB,mBAChBC,cAAc,SAADpO,OAAWoN,IAE1B,MAAMqD,EAAiBC,YACrBN,EACAP,GAEFM,EAAWQ,MAAM,KAAKC,SAASC,IAC7B,MAAOC,EAAKnS,GAASkS,EAAME,OAAOJ,MAAM,KACxCF,EAAeK,GAAOnS,CAAK,UAGvBoP,YAAM,CACVC,IAAI,GAADhO,OAAKiO,IAAO,qBACfC,OAAQ,MACRC,QAASA,EACT6C,OAAQP,EACRQ,OAAQX,EAAWW,SAElBC,MAAMpD,IACK,OAANA,QAAM,IAANA,KAAQK,UAA+D,IAApDL,EAAOK,QAAQ,gBAAgBE,QAAQ,QAC5DZ,EAAS,CAAEd,KAAM,gBAAiBC,QAASkB,EAAOzG,OAElDoG,EAAS,CAAEd,KAAM,iBACnB,IAEDwE,OAAO7C,IAAW,IAAD8C,EAAAC,EAIhB,GAHKtD,IAAMuD,SAAShD,IAClBb,EAAS,CAAEd,KAAM,kBAEiB,yBAAlB,QAAdyE,EAAA9C,EAAMiD,gBAAQ,IAAAH,GAAM,QAANC,EAAdD,EAAgB/J,YAAI,IAAAgK,OAAN,EAAdA,EAAsBtE,OAAiC,CACzD,MAAMyE,EAAczH,OAAO0H,OAAO3B,EAAoB,CAAE4B,WAAY,CAAE/C,MAAO,KAC7ElB,EAAS,CAAEd,KAAM,gBAAiBC,QAAS4E,GAC7C,IACA,EAWN,OARA3H,qBAAU,KACR0E,IACO,KACL+B,EAAWqB,OAAO,IAGnB,CAACvB,EAAmChD,EAAO+C,IAEvC,CAAC1D,EAAO8B,EACjB,C,oCCrJA,mJAEO,MAAMqD,EAAS,CACpB,CAAEC,MAAO,EAAGC,KAAM,WAAYC,WAAY,IAAOC,IAAK,MACtD,CAAEH,MAAO,EAAGC,KAAM,OAAQC,WAAY,KAAOC,IAAK,KAClD,CAAEH,MAAO,EAAGC,KAAM,SAAUC,WAAY,IAAOC,IAAK,MACpD,CAAEH,MAAO,EAAGC,KAAM,MAAOC,WAAY,IAAMC,IAAK,MAChD,CAAEH,MAAO,EAAGC,KAAM,OAAQC,WAAY,EAAGC,IAAK,IAGzC,SAASC,EAAqBC,GACnC,MAAMC,EAAeC,EAAYF,IAC1BG,EAAoBC,GAAyBzT,mBAAS,KAQ7D,OAPAgL,qBAAU,KACRyI,EACEH,GAAgBA,EAAaN,MAAQ,EACjCD,EAAOhI,QAAQ2I,GAASA,EAAKV,QAAUM,EAAaN,MAAQ,IAAG,GAAGE,WAClE,KACL,GACA,CAACI,IACG,CAACA,EAAcE,EACxB,CAEO,SAASD,EAAYI,GAC1B,MAAOL,EAAcM,GAAmB5T,mBAAS+S,EAAOA,EAAO3C,OAAS,IAQxE,OAPApF,qBAAU,KAEN4I,EADED,EACcZ,EAAOhI,QAAQiI,GAAUW,GAAWX,EAAME,aAAY,GAEtDH,EAAOA,EAAO3C,OAAS,GACzC,GACC,CAACuD,IACGL,CACT,CAEO,SAASO,EAAgBF,EAAS7F,GACvC,MAAMgG,EAAWP,EAAYI,IACtBI,EAAgBC,GAAqBhU,mBAAS8T,GAWrD,OATA9I,qBAAU,KACR,GAAa,eAAT8C,EAAuB,CACzB,MAAMmG,EACJH,EAASd,MAAQ,EAAID,EAAOhI,QAAQ2I,GAASA,EAAKV,QAAUc,EAASd,MAAQ,IAAG,GAAGG,IAAM,EAC3Fa,EAAkB,IAAKF,EAAUX,IAAKc,GACxC,MACED,EAAkBF,EACpB,GACC,CAAChG,EAAMgG,IACHC,CACT,C,uOC1CO,SAASG,EAAiB9U,GAAa,IAAZ,MAAEwQ,GAAOxQ,EACzC,MAAM6Q,EAAaD,YAAmBJ,GACtC,OACEvO,eAAA8S,WAAA,CAAAzU,SAAA,CACE0B,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAAC4H,IAAgB,IAAKC,IAASmL,cACtC/U,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOmQ,EAAWE,eAIhD/O,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAAC4H,IAAgB,IAAKC,IAASoL,iBACtChV,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOmQ,EAAW/R,kBAIhDkD,cAAA,OAAK/B,UAAU,sBAAqBK,SAClC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAAC4H,IAAgB,IAAKC,IAASoK,mBACtChU,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOmQ,EAAWE,OAASF,EAAW/R,oBAM1E,CC1BA,MAAMoW,EAAkBC,IAAMC,MAAK,IACjC,gEAGWC,EAAarV,IAA0D,IAAzD,MAAE4S,EAAK,SAAE3H,EAAQ,MAAEuF,EAAK,MAAEH,EAAK,QAAEpS,EAAO,QAAEqX,GAAStV,EAC5E,MAAOuV,GAAoBxG,YAAU,GAAI,cAClCyG,GAAqBzG,YAAU,GAAI,YAAa0G,MAErDrS,UAAWkI,EACXhI,QAASiI,EACT/W,SAAUkhB,EACV/Q,SAAUgR,GACR/C,GACGxH,EAAmBC,GAAwBzK,oBAAS,GAErDgV,EC1BD,SAA8BhD,GACnC,MAAOiD,EAAYC,GAAiBlV,qBAiBpC,OAfAgL,qBAAU,KAER,GADAkK,EAAc,CAAEzF,OAAO,EAAO0F,OAAQ,KAClCnD,EAAMxP,UAAW,CACnB,MAAMA,EAAY4J,kBAAM4F,EAAMxP,UAAW,aAAc,IAAIyD,MACrDvD,EAAUsP,EAAMtP,QAClB0J,kBAAM4F,EAAMtP,QAAS,aAAc,IAAIuD,MACvCmP,eACA5S,EAAY6S,eAAqB7S,EAAYE,IAC/CwS,EAAc,CAAEzF,OAAO,EAAM0F,OAAQ,iBAEnCG,YAAiB5S,EAASF,GAAa,KACzC0S,EAAc,CAAEzF,OAAO,EAAM0F,OAAQ,iBAEzC,IACC,CAACnD,EAAMxP,UAAWwP,EAAMtP,UACpBuS,CACT,CDOyBM,CAAqBvD,GAEtC5I,EAAgB,uCAChBC,EAAa,4BAEnB,OACEhI,eAAA8S,WAAA,CAAAzU,SAAA,CACE2B,eAAA,OAAKhC,UAAU,0BAAyBK,SAAA,CACtC0B,cAACwK,IAAgB,CACfzC,aAAa,YACbC,cAAa,GAAAjI,OAAKiI,EAAa,OAC/BC,WAAYA,EACZyC,cAAepB,EACfnB,iBAAkBc,EAClBb,uBAAwBwI,EACxBvH,qBAAsBA,IAExBrJ,cAACwK,IAAgB,CACfzC,aAAa,UACbC,cAAa,GAAAjI,OAAKiI,EAAa,OAC/BC,WAAYA,EACZyC,cAAenB,EACfpB,iBAAkBc,EAClBb,uBAAwBwI,EACxBvH,qBAAsBA,IAExBpJ,eAAA,OAAKhC,UAAU,kBAAiBK,SAAA,CAC9B0B,cAACmJ,IAAqB,CACpBpB,aAAa,YACbC,cAAa,GAAAjI,OAAKiI,EAAa,kBAC/BC,WAAYA,EACZyC,cAAepB,EACfnB,iBAAkBc,EAClBb,uBAAwBwI,EACxBxH,kBAAmBA,EACnBC,qBAAsBA,EACtBC,iBAAkBA,EAClBC,eAAgBA,IAElBvJ,cAAC8H,IAAmB,CAClBC,aAAa,WACbC,cAAa,GAAAjI,OAAKiI,EAAa,kBAC/BC,WAAYA,EACZC,YAAawL,EACbrL,QAASkL,EACTpL,iBAAkBc,EAClBb,uBAAwBwI,IAE1B5Q,cAAC8H,IAAmB,CAClBC,aAAa,WACbC,cAAa,GAAAjI,OAAKiI,EAAa,kBAC/BC,WAAYA,EACZC,YAAayL,EACbtL,QAASmL,EACTrL,iBAAkBc,EAClBb,uBAAwBwI,EACxBtI,WAAW,gBAIjBtI,cAACoU,IAAgB,CACfC,sBAAsB,EACtBC,KAAM,GACNC,OAAQtY,EACRgC,UAAU,iBAAgBK,UAExBrC,GAAWoS,EACXpO,eAAA,OAAKhC,UAAU,aAAYK,SAAA,CACzB0B,cAAC4H,IAAgB,IAAKC,IAAS2M,oBAC/BxU,cAAA,OAAK/B,UAAU,MAAKK,SACjBsV,GAAkBA,EAAeG,OAChC/T,cAAC4H,IAAgB,IAAKC,IAAS+L,EAAeG,UAE9C/T,cAAA,UAAQ/B,UAAU,cAAcwW,QAASA,IAAMnB,IAAUhV,SACvD0B,cAAC4H,IAAgB,IAAKC,IAASpD,eAMvCxE,eAAA8S,WAAA,CAAAzU,SAAA,CACE0B,cAAA,OAAK/B,UAAU,0CAAyCK,SACtD0B,cAAC0U,WAAQ,CAACC,SAAU3U,cAAA,OAAA1B,SAAK,eAAiBA,SACxC0B,cAACkT,EAAe,CAAC1E,MAAOA,QAG5BxO,cAAA,OAAK/B,UAAU,WAAUK,SACvB0B,cAAC8S,EAAiB,CAACtE,MAAOA,aAKjC,C,4NE/FA,SAASoG,EAAoBpF,EAAgBoB,EAAOpC,GACzD,MAAMqG,EAnBD,SAA2BjE,GAChC,MAAOiE,EAAgBC,GAAqBlW,oBAAS,GAYrD,OAXAgL,qBAAU,KACJgH,IAEAA,EAAMxP,YAAcgE,kBAAOI,kBAAY,IAAIX,MAAS,eACnD+L,EAAMtP,SAAW0J,kBAAM4F,EAAMtP,QAAS,aAAc,IAAIuD,MAAUmP,eACnEpD,EAAMjO,UACNiO,EAAMpe,WAENsiB,GAAkB,EACtB,GACC,CAAClE,IACGiE,CACT,CAKyBE,CAAkBnE,IAClCoE,EAAWC,GAAgBrW,mBAAS,IACrCuO,EAAQC,aAAaZ,GAAUA,EAAMa,KAAKF,QAiBhD,OAfAvD,qBAAU,KACR,IAAKiL,EAAgB,CACnB,MAAMzT,EAAYgE,kBAAOI,kBAAY,IAAIX,MAAS,cAClDqQ,YAAkB,+BAADnV,OACgBqB,EAAS,oBAAArB,OAAmByP,GAC3DrC,GAEC8D,MAAMkE,GAAQF,EAAaE,EAAIrF,aAC/BoB,OAAOhS,GAAM0N,QAAQC,IAAI3N,IAC9B,IACC,CAAC2V,EAAgBrF,EAAgBrC,IAEpCvD,qBAAU,KACJiL,GAAgBI,EAAazG,EAAM,GACtC,CAACqG,EAAgBrG,IACbwG,CACT,C,+ECvCA,MAAMI,EAAqBA,KACzB,MAAMzK,EAAOC,cACb,OACE3K,eAAA8S,WAAA,CAAAzU,SAAA,CACE2B,eAAA,QAAM,WAAU0K,EAAKO,cAAcrD,IAASwN,mBAAmB/W,SAAA,CAC7D0B,cAAC4H,IAAgB,IAAKC,IAASyN,gBAC/BtV,cAACuV,IAAQ,CAACtX,UAAU,qCAEtB+B,cAACwV,IAAY,CAACC,MAAM,SAASxX,UAAU,MAAMyX,OAAO,YACnD,EAIA,SAASC,EAAmB3X,GAAa,IAAZ,MAAER,GAAOQ,EAC3C,MAAM4X,EAAgBpY,EAAM+W,MAAQ/W,EAAMX,YAAcW,EAAMqY,iBACxDC,EAAmBtY,EAAMuR,OAASvR,EAAMuY,oBAC9C,OACE9V,eAAA8S,WAAA,CAAAzU,SAAA,CACE0B,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAAC4H,IAAgB,IAAKC,IAASmO,aACtC/X,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOkX,UAIrC5V,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAAC4H,IAAgB,IAAKC,IAASoO,qBACtChY,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOoX,UAIrC9V,cAAA,OAAK/B,UAAU,sBAAqBK,SAClC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MAAOf,cAACoV,EAAkB,IAC1BnX,UAAU,KAGVS,MAAOsB,cAACY,IAAe,CAAClC,MAAuB,EAAhBkX,EAAoBE,YAM/D,C,sDCtDO,SAASI,EAAsBjE,EAAkBkE,GACtD,MAAMC,EAAanX,uBAAY,KAC7B,MAAMoX,ECgBK,SAAsBC,GACnCC,YAAa,EAAGvG,WAChB,IAAIhL,EAAOwR,kBAAOF,GAGlB,OAFWG,kBAAyBzR,EAAMQ,kBAAYR,IAC/B,CAEzB,CDtBsB0R,CAAaP,GACzBQ,EEaK,SAAoBL,GACjCC,YAAa,EAAGvG,WAChB,IACI4G,EADOJ,kBAAOF,GACFxQ,cAChB,OAAO8Q,EAAO,MAAQ,GAAKA,EAAO,IAAM,GAAKA,EAAO,MAAQ,CAC9D,CFlBsBC,CAAWV,GAAe,IAAM,IAClD,OAAOtV,KAAKiW,MAAO7E,EAAmB0E,EAAaN,EAAU,GAC5D,CAACpE,EAAkBkE,IAEtB,OAAOC,GACT,C,cGKO,SAASW,EAAsB/Y,GAAiC,IAAhC,iBAAEiU,EAAgB,QAAE+E,GAAShZ,EAClE,MAAOkU,EAAcE,GAAsBJ,YAAqBC,GAC1DvL,EAAUuQ,SAAUhF,EAAmBG,EAAsB,KAC7D8E,EAAiBhB,EAAsBjE,EAAkB,IAAIpN,MAC7DsS,EAAkB1E,YAAgByE,EAAgB,QAClDE,EAAcC,kBAAQ,IAAIxS,MAEhC,OACE7E,cAAA,OAAK/B,UAAU,eAAcK,SAC3B2B,eAAA,OAAKhC,UAAU,kBAAiBK,SAAA,CAC9B0B,cAAA,OAAK/B,UAAU,yBAAwBK,SACrC0B,cAAA,MACE/B,UAAU,kEACViC,MAAO,CAAEoX,SAAU,QAAShZ,SAE3B4T,EAAaN,UAGlB5R,cAAA,OAAK/B,UAAU,0BAAyBK,SACrC8T,GACCpS,cAACjC,IAAW,CAACI,OAAQ,EAAGF,UAAU,mBAAmBI,eAAgBqI,EAAQpI,SAC3E0B,cAAA,KAAG/B,UAAU,8BAA6BK,SACxC0B,cAAC4H,IAAgB,IACXC,IAAS0P,aACb7O,OAAQ,CACNf,EAAG3H,cAACY,IAAe,CAAClC,MAAOuT,IAC3BvD,MAAO1O,cAACY,IAAe,CAAClC,MAAO0T,IAC/B1L,QAASA,EACT8Q,UAAWxX,cAAA,UAAA1B,SAAS4T,EAAaN,MAAQ,aAOrD3R,eAAA,OAAKhC,UAAU,eAAcK,SAAA,CAC1B8T,GACCpS,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MACEf,cAAC4H,IAAgB,IAAKC,IAAS4P,eAAgB/O,OAAQ,CAAEkO,KAAMQ,KAEjEnZ,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAOyY,EAAgBvF,cAKtDQ,GACCpS,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MACEf,cAAC4H,IAAgB,IACXC,IAAS6P,mBACbhP,OAAQ,CAAEf,EAAGuK,EAAaN,MAAQ,KAGtC3T,UAAU,KACVS,MAAOsB,cAACY,IAAe,CAAClC,MAAO0T,EAAqBH,cAM5DG,GACApS,cAAA,OAAK/B,UAAU,eAAcK,SAC3B2B,eAAA,OAAA3B,SAAA,CACE0B,cAAC4H,IAAgB,IACXC,IAAS8P,UACbjP,OAAQ,CACNkP,IAAK5X,cAAA,UAAA1B,SAAS0Y,IACdpF,MAAOM,EAAaN,SAErB,IACH5R,cAAC4H,IAAgB,IAAKC,IAASgQ,wBAO7C,CAGO,SAASC,EAAgB9W,GAAgD,IAA/C,iBAAEiR,EAAgB,KAAEvF,EAAI,iBAAEqL,GAAkB/W,EAC3E,MAAMkW,EAAiBhB,EAAsBjE,EAAkB,IAAIpN,MAC7DsS,EAAkB1E,YAAgByE,EAAgBxK,GAClDsL,EAAeD,EACjBpG,IAAOhI,QAAQiI,GAAUA,EAAMA,QAAUmG,IAAkB,GAC3D,KACEE,EACJD,GAAgBA,EAAapG,MAAQ,EACjCD,IAAOhI,QAAQiI,GAAUA,EAAMA,QAAUoG,EAAapG,MAAQ,IAAG,GAAGE,WACpE,KACA0F,EAAYrF,YAAY8F,GACxBvR,EAAUuQ,SAAUhF,EAAmBgG,EAAmB,KAC1DC,EAA6C,SAAzBf,EAAgBtF,MAA4B,eAATnF,EACvD0K,EAAcC,kBAAQ,IAAIxS,MAEhC,OACE7E,cAAA,OAAK/B,UAAU,eAAcK,SAC3B2B,eAAA,OAAKhC,UAAU,kBAAiBK,SAAA,CAC9B2B,eAAA,OAAKhC,UAAU,+BAA8BK,SAAA,CAC3C0B,cAAA,MAAI/B,UAAU,gEAA+DK,SAC1E0Z,GAAgBhY,cAAC4H,IAAgB,IAAKC,IAAS,GAAD9H,OAAIiY,EAAanG,KAAI,aAEtE7R,cAAA,QAAM/B,UAAS,wBAA0BK,SACvC0B,cAAC4H,IAAgB,IAAKC,IAASsQ,sBAGnCnY,cAAA,OAAK/B,UAAU,wCAAuCK,SACnD2Z,GACCjY,cAACjC,IAAW,CAACI,OAAQ,EAAGF,UAAU,mBAAmBI,eAAgBqI,EAAQpI,SAC3E0B,cAAA,KAAG/B,UAAU,8BAA6BK,SACxC0B,cAAC4H,IAAgB,IACXC,IAASuQ,YACb1P,OAAQ,CACNf,EAAG3H,cAACY,IAAe,CAAClC,MAAOuT,IAC3BvD,MAAO1O,cAACY,IAAe,CAAClC,MAAOuZ,IAC/BvR,QAASA,EACT2R,SACErY,cAAA,UAAA1B,SACE0B,cAAC4H,IAAgB,IAAKC,IAAS,GAAD9H,OAAIyX,EAAU3F,KAAI,sBAShE5R,eAAA,OAAKhC,UAAU,eAAcK,SAAA,CAC3B0B,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MACEf,cAAC4H,IAAgB,IAAKC,IAASyQ,cAAe5P,OAAQ,CAAEkO,KAAMQ,KAEhEnZ,UAAU,KACVS,MACEsB,cAAA,QAAM/B,UAAU,MAAKK,SACnB0B,cAAC4H,IAAgB,IAAKC,IAAS,GAAD9H,OAAIoX,EAAgBtF,KAAI,mBAMhE7R,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MACEf,cAAC4H,IAAgB,IAAKC,IAAS0Q,cAAe7P,OAAQ,CAAEkO,KAAMQ,KAEhEnZ,UAAU,KACVS,MACEuB,eAAA8S,WAAA,CAAAzU,SAAA,CACE0B,cAACY,IAAe,CACdlC,MAAOyY,EAAgBpF,IAEvB7R,MAAM,WACNsY,SAAS,QAEVN,EACCjY,eAAA,QAAMhC,UAAU,SAAQK,SAAA,CACrB,IAAI,IACJ0B,cAAC4H,IAAgB,IAAKC,IAAS4Q,aAAc,OAGhD,YAOXR,GACCjY,cAAA,OAAK/B,UAAU,6BAA4BK,SACzC0B,cAAA,OAAK/B,UAAU,2BAA0BK,SACvC0B,cAACU,IAAgB,CACfK,MACEf,cAAC4H,IAAgB,IACXC,IAAS6Q,iBACbhQ,OAAQ,CACNjQ,KAAMuH,cAAC4H,IAAgB,IAAKC,IAAS,GAAD9H,OAAIiY,EAAanG,KAAI,cAI/D5T,UAAU,KACVS,MACEsB,cAACY,IAAe,CACdlC,MACEuT,EAAmBgG,EAAkBA,EAAkBhG,EAAmB,iBAYlG,C,0DCpNO,MAAM0G,EAA2B3a,IAA4B,IAA3B,SAAEkF,EAAQ,QAAE8T,GAAShZ,EAC5D,MAAM4a,EAAgB1V,EAAWA,EAASU,MAAQV,EAAS2V,UAAY3V,EAASW,SAAW,EACrFiV,EAAiB1T,kBCUV,SAAsBkR,EAAWyC,GAC9CxC,YAAa,EAAGvG,WAChB,IAAIhL,EAAOwR,kBAAOF,GACd0C,EAAYC,YAAUF,GAG1B,OAFA/T,EAAKF,SAAS,GACdE,EAAKS,QAAQuT,GACNhU,CACT,CDjBgCkU,CAAa,IAAIrU,KAAQ,GAAI,cAuBrD2J,EAtBa,CACjB,CACE/V,KAAMuH,cAAC4H,IAAgB,IAAKuR,IAAe/e,kBAC3CsE,MAAOwE,EAAWA,EAAS2V,UAAY,EACvCjS,KAAK,iEAAD7G,OAAmEiX,IAEzE,CACEve,KAAMuH,cAAC4H,IAAgB,IAAKuR,IAAejf,cAC3CwE,MAAOwE,EAAWA,EAASU,MAAQ,EACnCgD,KAAK,+CAAD7G,OAAiDiX,IAEvD,CACEve,KAAMuH,cAAC4H,IAAgB,IAAKC,IAASpE,QACrC/E,MAAOwE,EAAWA,EAASO,MAAQ,EACnCmD,KAAK,0CAAD7G,OAA4CiX,IAElD,CACEve,KAAMuH,cAAC4H,IAAgB,IAAKC,IAASuR,kBACrC1a,MAAOwE,EAAWA,EAASmW,OAAS,EACpCzS,KAAK,iCAAD7G,OAAmC+Y,EAAc,4CAAA/Y,OAA2CiX,KAG3EsC,MAAK,CAACrT,EAAGC,IAAMM,YAA4BP,EAAGC,EAAG,WAE1E,OACElG,cAAA,OAAK/B,UAAU,sCAAqCK,SACjD4E,GACCjD,eAAA8S,WAAA,CAAAzU,SAAA,CACE0B,cAAA,MAAI/B,UAAU,iBAAgBK,SAC5B0B,cAAC4H,IAAgB,IAAKC,IAAS0R,gBAAiB7Q,OAAQ,CAAE5B,OAAQ8R,OAEpE5Y,cAAA,MAAI/B,UAAU,cAAaK,SACxBkQ,EAAM/G,KAAI,CAAC6K,EAAM3K,IAChB3H,cAAC2G,IAAY,CAEXlO,KAAM6Z,EAAK7Z,KACXmO,KAAM0L,EAAK1L,KACXC,aAAcyL,EAAK5T,MAAQ8P,EAAM,GAAG9P,MACpCoI,OACE9G,cAAC4H,IAAgB,IACXC,IAAS2R,iBACb9Q,OAAQ,CAAE5B,OAAQwL,EAAK5T,UAPtBiJ,WAeX,EE5CG8R,EAAoBA,KAC/B,MAAMC,EAAWC,eACX,GAAE1nB,GAAO2nB,cACTzM,EAAQC,aAAaZ,GAAUA,EAAMa,KAAKF,QAC1C0M,EAAezM,aAClBZ,IAAK,IAAAsN,EAAA,MAC4B,UAAhCtN,EAAMa,KAAK0M,YAAY3Z,OAA4C,QAA5B0Z,EAAItN,EAAMa,KAAK3K,qBAAa,IAAAoX,OAAA,EAAxBA,EAA0BE,SAASrZ,OAAO1O,IAAI,KAEtF2e,EAAO3H,GAAYyG,eAEnBuK,EAAUC,GAAwBnK,YACvC,CAAED,UAAW,IACbc,EAAM,kBAAD7Q,OACa9N,KAEboc,EAAOpS,EAAS1J,GAAgB4nB,YAAS,iBAADpa,OAAkB9N,EAAE,0BAA0BA,IACtFmoB,EAAeC,EAAiBC,GAAYH,YAAS,iBAADpa,OACxC9N,EAAE,gBACnBA,GAEIsoB,EAAmB3F,EAAoB3iB,EAAI2e,EAAOqJ,EAASzL,OAC3DK,EAAaD,YAAmB2L,GAChCtI,EAAmBpD,EAAWE,OAASF,EAAW/R,UAClD0d,EACJ,CAAC,aAAc,YAAYR,SAASznB,EAAama,OACjDna,EAAawlB,kBACb8B,EASF,OARAY,YAAe,GAAD1a,OAAIxN,EAAakG,MAAQ,eAAc,WAErDmR,qBAAU,KACHuD,GACHuM,EAAS,SACX,IAGEvM,EAEAnN,cAACoU,IAAgB,CACfC,sBAAsB,EACtBC,KAAM,GACNC,OAAQlG,IAAUpS,EAClBgC,UAAU,iBAAgBK,SAE1B2B,eAAA,OAAKhC,UAAU,6CAA4CK,SAAA,CACzD0B,cAAA,OAAK0a,IAAKnoB,EAAaooB,KAAM1c,UAAU,mBAAmB2c,IAAKroB,EAAakG,OAC5EuH,cAAA,MAAI/B,UAAU,sDAAqDK,SAChE/L,EAAakG,OAEhBwH,eAAA,OAAKhC,UAAU,cAAaK,SAAA,CAC1B0B,cAAA,MAAI/B,UAAU,oDAAmDK,SAC/D0B,cAAC4H,IAAgB,IAAKC,IAASgT,oBAEjC7a,cAACqT,IAAU,CACTzC,MAAOA,EACP3H,SAAUA,EACVuF,MAAOyL,EAASzL,MAChBH,MAAO4L,EAASxR,QAChBxM,QAASge,EAASvO,UAClB4H,QAAS4G,OAGbja,eAAA,OAAKhC,UAAU,cAAaK,SAAA,CAC1B0B,cAAA,MAAI/B,UAAU,oDAAmDK,SAC/D0B,cAAC4H,IAAgB,IAAKC,IAASiT,mBAEjC9a,cAACoU,IAAgB,CACfC,sBAAsB,EACtBC,KAAM,EACNyG,MAAO,IACPxG,OAAQ6F,IAAkBC,EAAgB/b,SAE1C0B,cAAC2V,EAAmB,CAACnY,MAAO8c,GAAYA,EAASU,mBAGrD/a,eAAA,OAAKhC,UAAU,cAAaK,SAAA,CAC1B0B,cAAA,MAAI/B,UAAU,oDAAmDK,SAC9Dkc,EACCxa,cAAC4H,IAAgB,IAAKC,IAASgK,OAE/B7R,cAAC4H,IAAgB,IAAKC,IAASoT,eAGnCjb,cAACoU,IAAgB,CAACC,sBAAsB,EAAMC,KAAM,EAAGyG,MAAO,IAAKxG,MAAO1F,EAAWvQ,SAClFkc,EACCxa,cAAC8X,EAAgB,CACfpL,KAAMna,EAAama,KACnBqL,iBAAkBxlB,EAAawlB,iBAC/B9F,iBAAkBA,IAGpBjS,cAAC+W,EAAsB,CACrBC,QAASzkB,EAAakG,KACtBwZ,iBAAkBA,SAK1BhS,eAAA,OAAKhC,UAAU,qBAAoBK,SAAA,CACjC0B,cAAA,MAAI/B,UAAU,oDAAmDK,SAC/D0B,cAAC4H,IAAgB,IAAKC,IAASqT,oBAEjClb,cAAA,OAAK/B,UAAU,MAAKK,SAClB0B,cAAC2Y,EAAwB,CACvBzV,SAAUoX,GAAYA,EAASpX,SAC/B8T,QAASzkB,EAAakG,iBAQ3B,IACT,C","file":"static/js/organisationStats.bbb3cbd3.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on project edit.\n */\nexport default defineMessages({\n  privacy: {\n    id: 'projects.formInputs.privacy.title',\n    defaultMessage: 'Privacy',\n  },\n  privateProject: {\n    id: 'projects.formInputs.privacy.field',\n    defaultMessage: 'Private project',\n  },\n  privacyDescription: {\n    id: 'projects.formInputs.privacy.description',\n    defaultMessage:\n      'Private means that only the users that are project team members can access, map or validate this project. This option overrides the mapping and validation permissions.',\n  },\n  teams: {\n    id: 'projects.formInputs.teams.title',\n    defaultMessage: 'Teams',\n  },\n  teamsPermissionNote: {\n    id: 'projects.teams.teamsPermissionNote',\n    defaultMessage:\n      'Note: Mappers have mapping permissions. Validators have mapping and validation permissions. Project managers have mapping and validation permissions as well as the access to the management sections.',\n  },\n  organisation: {\n    id: 'projects.formInputs.organisation.title',\n    defaultMessage: 'Organization',\n  },\n  campaign: {\n    id: 'projects.formInputs.campaign.title',\n    defaultMessage: 'Campaign',\n  },\n  categories: {\n    id: 'projects.formInputs.categories.title',\n    defaultMessage: 'Categories',\n  },\n  organisationDescription: {\n    id: 'projects.formInputs.organisation.description',\n    defaultMessage:\n      'Organization that is coordinating the project, if there is any. The managers of that organization will have administration rights over the project.',\n  },\n  admins: {\n    id: 'projects.formInputs.admins.title',\n    defaultMessage: 'TM Admins',\n  },\n  selectImagery: {\n    id: 'projects.formInputs.imagery.select',\n    defaultMessage: 'Select imagery',\n  },\n  selectLicense: {\n    id: 'projects.formInputs.license.select',\n    defaultMessage: 'Select license',\n  },\n  selectOrganisation: {\n    id: 'projects.formInputs.organisation.select',\n    defaultMessage: 'Select organization',\n  },\n  selectCampaign: {\n    id: 'projects.formInputs.campaign.select',\n    defaultMessage: 'Select campaigns',\n  },\n  permissions_ANY: {\n    id: 'projects.formInputs.permissions.any',\n    defaultMessage: 'Any user',\n  },\n  permissions_LEVEL: {\n    id: 'projects.formInputs.permissions.level',\n    defaultMessage: 'Only users with intermediate or advanced level',\n  },\n  permissions_TEAMS: {\n    id: 'projects.formInputs.permissions.teams',\n    defaultMessage: 'Only team members',\n  },\n  permissions_TEAMS_LEVEL: {\n    id: 'projects.formInputs.permissions.teamsAndLevel',\n    defaultMessage: 'Only intermediate and advanced team members',\n  },\n  mappingPermissionDescription: {\n    id: 'projects.formInputs.permissions.mapping.description',\n    defaultMessage: 'Define which users can map this project.',\n  },\n  validationPermissionDescription: {\n    id: 'projects.formInputs.permissions.validation.description',\n    defaultMessage: 'Define which users can validate this project.',\n  },\n  mappingPermission: {\n    id: 'projects.formInputs.permissions.mapping.title',\n    defaultMessage: 'Mapping permissions',\n  },\n  validationPermission: {\n    id: 'projects.formInputs.permissions.validation.title',\n    defaultMessage: 'Validation permissions',\n  },\n  mappingValidationSection: {\n    id: 'projects.sections.mapping_validation.title',\n    defaultMessage: 'Mapping, validation and invalidation',\n  },\n  mappingValidationSectionDescription: {\n    id: 'projects.sections.mapping_validation.description',\n    defaultMessage:\n      'Use this if for some reason you need to map, validate or invalidate all tasks in this project in a single step.',\n  },\n  messageContributors: {\n    id: 'projects.actions.message_contributors.title',\n    defaultMessage: 'Message all contributors',\n  },\n  messageContributorsDescription: {\n    id: 'projects.actions.message_contributors.description',\n    defaultMessage:\n      'This will send a message to every contributor of the current project. Please use this feature carefully.',\n  },\n  messageContributorsTranslationAlert: {\n    id: 'projects.actions.message_contributors.translation_alert',\n    defaultMessage:\n      'This message will not be translated to the different languages of the users, so you may want to include your own translations.',\n  },\n  messageContributorsSuccess: {\n    id: 'projects.actions.message_contributors.success',\n    defaultMessage: 'Contributors were messaged successfully.',\n  },\n  messageContributorsError: {\n    id: 'projects.actions.message_contributors.error',\n    defaultMessage: 'Failed to message all contributors for an unknown reason.',\n  },\n  mapAll: {\n    id: 'projects.actions.map_all_tasks.title',\n    defaultMessage: 'Map all tasks',\n  },\n  mapAllConfirmation: {\n    id: 'projects.actions.map_all_tasks.confirmation',\n    defaultMessage:\n      'Are you sure you want to mark all tasks in this project as mapped? You cannot undo this.',\n  },\n  mapAllDescription: {\n    id: 'projects.actions.map_all_tasks.description',\n    defaultMessage:\n      \"This will mark all tasks (except 'unavailable' ones) as mapped. Please use this only if you are sure of what you are doing.\",\n  },\n  mapAllSuccess: {\n    id: 'projects.actions.map_all_tasks.success',\n    defaultMessage: 'The tasks were mapped successfully.',\n  },\n  mapAllError: {\n    id: 'projects.actions.map_all_tasks.error',\n    defaultMessage: 'Mapping all the tasks failed for an unknown reason.',\n  },\n  invalidateAll: {\n    id: 'projects.actions.invalidate_all_tasks.title',\n    defaultMessage: 'Invalidate all validated tasks',\n  },\n  invalidateAllConfirmation: {\n    id: 'projects.actions.invalidate_all_tasks.confirmation',\n    defaultMessage:\n      'Are you sure you want to invalidate all validated tasks in this project? You cannot undo this.',\n  },\n  invalidateAllDescription: {\n    id: 'projects.actions.invalidate_all_tasks.description',\n    defaultMessage:\n      \"This will mark all validated tasks as 'more mapping needed'. Please use this only if you are sure of what you are doing.\",\n  },\n  invalidateAllSuccess: {\n    id: 'projects.actions.invalidate_all_tasks.success',\n    defaultMessage: \"The tasks were set as 'more mapping needed' successfully.\",\n  },\n  invalidateAllError: {\n    id: 'projects.actions.invalidate_all_tasks.error',\n    defaultMessage: 'Invalidating all the tasks failed for an unknown reason.',\n  },\n  validateAllTasks: {\n    id: 'projects.actions.validate_all_tasks.title',\n    defaultMessage: 'Validate all mapped tasks',\n  },\n  validateAllTasksConfirmation: {\n    id: 'projects.actions.validate_all_tasks.confirmation',\n    defaultMessage: 'Are you sure you want to validate all mapped tasks? You cannot undo this.',\n  },\n  validateAllTasksDescription: {\n    id: 'projects.actions.validate_all_tasks.description',\n    defaultMessage:\n      \"This will change the status of all mapped tasks to 'finished'. Please use this only if you are sure of what you are doing.\",\n  },\n  validateAllSuccess: {\n    id: 'projects.actions.validate_all_tasks.success',\n    defaultMessage: 'The tasks were validated successfully.',\n  },\n  validateAllError: {\n    id: 'projects.actions.validate_all_tasks.error',\n    defaultMessage: 'Validating all the tasks failed for an unknown reason.',\n  },\n  resetBadImagery: {\n    id: 'projects.actions.reset_bad_imagery_tasks.title',\n    defaultMessage: 'Reset tasks marked as unavailable',\n  },\n  resetBadImageryConfirmation: {\n    id: 'projects.actions.reset_bad_imagery_tasks.confirmation',\n    defaultMessage:\n      'Are you sure you want to reset all tasks marked as unavailable in this project? You cannot undo this.',\n  },\n  resetBadImageryDescription: {\n    id: 'projects.actions.reset_bad_imagery_tasks.description',\n    defaultMessage:\n      \"This will change the status of those tasks to 'ready for mapping'. Please use this only if you are sure of what you are doing.\",\n  },\n  resetBadImageryButton: {\n    id: 'projects.actions.reset_bad_imagery_tasks.button',\n    defaultMessage: 'Reset all unavailable tasks',\n  },\n  resetBadImagerySuccess: {\n    id: 'projects.actions.reset_bad_imagery_tasks.success',\n    defaultMessage: 'The tasks marked as unavailable were reset successfully.',\n  },\n  resetBadImageryError: {\n    id: 'projects.actions.reset_bad_imagery_tasks.error',\n    defaultMessage: 'Resetting the tasks failed for an unknown reason.',\n  },\n  resetAll: {\n    id: 'projects.actions.reset_all_tasks.title',\n    defaultMessage: 'Reset tasks',\n  },\n  resetAllButton: {\n    id: 'projects.actions.reset_all_tasks.button',\n    defaultMessage: 'Reset all tasks',\n  },\n  resetAllDescription: {\n    id: 'projects.actions.reset_all_tasks.description',\n    defaultMessage: 'Reset all tasks in the project to ready to map, preserving history.',\n  },\n  resetAllSuccess: {\n    id: 'projects.actions.reset_all_tasks.success',\n    defaultMessage: 'All tasks were reset successfully.',\n  },\n  resetAllError: {\n    id: 'projects.actions.reset_all_tasks.error',\n    defaultMessage: 'Resetting all the tasks failed for an unknown reason.',\n  },\n  cloneProject: {\n    id: 'projects.actions.clone_project.button',\n    defaultMessage: 'Clone project',\n  },\n  cloneProjectDescription: {\n    id: 'projects.actions.clone_project.description',\n    defaultMessage:\n      'This will copy all descriptions, instructions, metadata etc to a new project. The Area of Interest, tasks and the priority areas will not be copied. You will have to redraw/import these. Your newly cloned project will be in draft status.',\n  },\n  revertVALIDATEDTasks: {\n    id: 'projects.actions.revert_validated_tasks.button',\n    defaultMessage: 'Revert validated tasks',\n  },\n  revertVALIDATEDTasksTitle: {\n    id: 'projects.actions.revert_validated_tasks.title',\n    defaultMessage: 'Revert validated tasks',\n  },\n  revertVALIDATEDTasksDescription: {\n    id: 'projects.actions.revert_validated_tasks.description',\n    defaultMessage: 'Revert all validated tasks by a specified user and mark it as mapped',\n  },\n  revertVALIDATEDTasksSuccess: {\n    id: 'projects.actions.revert_validated_tasks.success',\n    defaultMessage: 'The tasks were reverted successfully.',\n  },\n  revertBADIMAGERYTasks: {\n    id: 'projects.actions.revert_unavailable_tasks.button',\n    defaultMessage: 'Revert unavailable tasks',\n  },\n  revertBADIMAGERYTasksTitle: {\n    id: 'projects.actions.revert_unavailable_tasks.title',\n    defaultMessage: 'Revert unavailable tasks',\n  },\n  revertBADIMAGERYTasksDescription: {\n    id: 'projects.actions.revert_unavailable_tasks.description',\n    defaultMessage:\n      'Revert all tasks marked as unavailable by a specified user and mark it as ready to map',\n  },\n  revertBADIMAGERYTasksSuccess: {\n    id: 'projects.actions.revert_unavailable_tasks.success',\n    defaultMessage: 'The tasks were reverted successfully.',\n  },\n  revertTasksError: {\n    id: 'projects.actions.revert_validated_tasks.error',\n    defaultMessage: 'The tasks reversion failed.',\n  },\n  transferProject: {\n    id: 'projects.actions.transfer_project.button',\n    defaultMessage: 'Transfer project',\n  },\n  transferProjectTitle: {\n    id: 'projects.actions.transfer_project.title',\n    defaultMessage: 'Transfer project ownership',\n  },\n  transferProjectAlert: {\n    id: 'projects.actions.transfer_project.alert',\n    defaultMessage:\n      'This feature is only available to the project author, organisation manager and TM admin.',\n  },\n  transferProjectSuccess: {\n    id: 'projects.actions.transfer_project.success',\n    defaultMessage: 'The project was transferred successfully.',\n  },\n  transferProjectError: {\n    id: 'projects.actions.transfer_project.error',\n    defaultMessage: 'The project transfer failed.',\n  },\n  deleteProject: {\n    id: 'projects.actions.delete_project.title',\n    defaultMessage: 'Delete project',\n  },\n  deleteProjectAlert: {\n    id: 'projects.actions.delete_project.alert',\n    defaultMessage: 'You can only delete projects that has no received contributions.',\n  },\n  deleteProjectSuccess: {\n    id: 'projects.actions.delete_project.success',\n    defaultMessage: 'The project was deleted successfully.',\n  },\n  deleteProjectError: {\n    id: 'projects.actions.delete_project.error',\n    defaultMessage:\n      'The project deletion failed. If this project has received some contributions, you should archive it instead.',\n  },\n  taskReset: {\n    id: 'projects.actions.task_reset.title',\n    defaultMessage: 'Task reset',\n  },\n  taskResetButton: {\n    id: 'projects.actions.task_reset.button',\n    defaultMessage: 'Reset all tasks',\n  },\n  cancel: {\n    id: 'projects.actions.modal.cancel.button',\n    defaultMessage: 'Cancel',\n  },\n  canNotUndo: {\n    id: 'projects.actions.alerts.can_not_undo',\n    defaultMessage: 'This cannot be undone.',\n  },\n  warning: {\n    id: 'projects.actions.alerts.warning',\n    defaultMessage: 'Warning',\n  },\n  taskResetConfirmation: {\n    id: 'projects.actions.task_reset.confirmation',\n    defaultMessage: 'Are you sure you want to reset all tasks? You cannot undo this.',\n  },\n  status: {\n    id: 'projects.formInputs.status',\n    defaultMessage: 'Status',\n  },\n  priority: {\n    id: 'projects.formInputs.priority',\n    defaultMessage: 'Priority',\n  },\n  license: {\n    id: 'projects.formInputs.license',\n    defaultMessage: 'Required license',\n  },\n  language: {\n    id: 'projects.formInputs.language',\n    defaultMessage: 'Default language',\n  },\n  typeHere: {\n    id: 'projects.formInputs.type',\n    defaultMessage: 'Type here...',\n  },\n  translations: {\n    id: 'projects.formInputs.language.translations',\n    defaultMessage: 'Translations',\n  },\n  selectLanguage: {\n    id: 'projects.formInputs.language.select',\n    defaultMessage: 'Select a language above to translate.',\n  },\n  mappingEditors: {\n    id: 'projects.formInputs.mapping_editors',\n    defaultMessage: 'Editors for mapping',\n  },\n  validationEditors: {\n    id: 'projects.formInputs.validation_editors',\n    defaultMessage: 'Editors for validation',\n  },\n  customEditor: {\n    id: 'projects.formInputs.editors.options.custom',\n    defaultMessage: 'Custom editor',\n  },\n  randomTaskSelection: {\n    id: 'projects.formInputs.random_task_selection',\n    defaultMessage: 'Enforce random task selection',\n  },\n  randomTaskSelectionMapping: {\n    id: 'projects.formInputs.random_task_selection.mapping',\n    defaultMessage: 'Enforce random task selection on mapping',\n  },\n  randomTaskSelectionDescription: {\n    id: 'projects.formInputs.random_task_selection.description',\n    defaultMessage:\n      'If checked, users must edit tasks at random for the initial editing stage (managers and admins are exempt).',\n  },\n  rapidPowerUser: {\n    id: 'projects.formInputs.rapid_power_user',\n    defaultMessage: 'Enable RapiD Power User Features',\n  },\n  rapidPowerUserDescription: {\n    id: 'projects.formInputs.rapid_power_user.description',\n    defaultMessage: 'If checked, RapiD will load with the power user dialog enabled.',\n  },\n  imagery: {\n    id: 'projects.formInputs.imagery',\n    defaultMessage: 'Imagery',\n  },\n  imageryURLNote: {\n    id: 'projects.formInputs.imagery.note',\n    defaultMessage: 'Follow this format for TMS URLs: {exampleUrl}',\n  },\n  drawPolygon: {\n    id: 'projects.formInputs.priority_areas.options.polygon',\n    defaultMessage: 'Draw polygon',\n  },\n  drawRectangle: {\n    id: 'projects.formInputs.priority_areas.options.rectangle',\n    defaultMessage: 'Draw rectangle',\n  },\n  clearAll: {\n    id: 'projects.formInputs.priority_areas.action.clear',\n    defaultMessage: 'Clear all',\n  },\n  selectFile: {\n    id: 'projects.formInputs.priority_areas.action.selectFile',\n    defaultMessage: 'Select File',\n  },\n  importDescription: {\n    id: 'projects.formInputs.priority_areas.upload.description',\n    defaultMessage:\n      'The supported file formats are: GeoJSON, KML, OSM or zipped Shapefile. You can drag and drop a file over the map to import it.',\n  },\n  name: {\n    id: 'projects.formInputs.name',\n    defaultMessage: 'Name of the project',\n  },\n  dueDate: {\n    id: 'projects.formInputs.dueDate',\n    defaultMessage: 'Due date',\n  },\n  dueDateDescription: {\n    id: 'projects.formInputs.dueDate.description',\n    defaultMessage:\n      'Define the ideal date to have the project finished. The date format is day/month/year.',\n  },\n  description: {\n    id: 'projects.formInputs.description',\n    defaultMessage: 'Description',\n  },\n  shortDescription: {\n    id: 'projects.formInputs.shortDescription',\n    defaultMessage: 'Short description',\n  },\n  instructions: {\n    id: 'projects.formInputs.instructions',\n    defaultMessage: 'Detailed instructions',\n  },\n  osmchaFilterId: {\n    id: 'projects.formInputs.osmcha_filter_id',\n    defaultMessage: 'OSMCha filter ID',\n  },\n  osmchaFilterIdDescription: {\n    id: 'projects.formInputs.osmcha_filter_id.description',\n    defaultMessage:\n      'Optional id of a saved OSMCha filter to apply when viewing the project in OSMCha, if you desire custom filtering. Note that this replaces all standard filters. Example: 095e8b31-b3cb-4b36-a106-02826fb6a109 (for convenience, you can also paste an OSMCha URL here that uses a saved filter and the filter id will be extracted for you).',\n  },\n  priorityAreasDescription: {\n    id: 'projects.formInputs.priority_areas.description',\n    defaultMessage:\n      'If you want mappers to work on the highest priority areas first, draw one or more polygons within the project area or import a file.',\n  },\n  mappingTypes: {\n    id: 'projects.formInputs.mapping_types',\n    defaultMessage: 'Types of mapping',\n  },\n  idPresets: {\n    id: 'projects.formInputs.id_presets',\n    defaultMessage: 'iD editor presets',\n  },\n\n  userRole: {\n    id: 'projects.formInputs.user_role',\n    defaultMessage: 'User role',\n  },\n  difficulty: {\n    id: 'projects.formInputs.difficulty',\n    defaultMessage: 'Difficulty',\n  },\n  difficultyDescription: {\n    id: 'projects.formInputs.difficulty.description',\n    defaultMessage:\n      'Setting the difficulty will help mappers to find suitable projects to work on.',\n  },\n  perTaskInstructions: {\n    id: 'projects.formInputs.per_task_instructions',\n    defaultMessage: 'Per task instructions',\n  },\n  perTaskInstructionsDescription: {\n    id: 'projects.formInputs.per_task_instructions.descriptions',\n    defaultMessage:\n      'Add any information that can be useful to users while mapping a task. \"{x}\", \"{y}\" and \"{z}\" will be replaced by the corresponding parameters for each task. \"{x}\", \"{y}\" and \"{z}\" parameters can only be be used on tasks generated in the Tasking Manager and not on imported tasks.',\n  },\n  perTaskInstructionsExample: {\n    id: 'projects.formInputs.per_task_instructions.example',\n    defaultMessage:\n      'Example: This task involves loading extra data. Click [here](http://localhost:8111/import?new_layer=true&amp;url=http://www.domain.com/data/{x}/{y}/{z}/routes_2009.osm) to load the data into JOSM.',\n  },\n  changesetComment: {\n    id: 'projects.formInputs.changesetComment',\n    defaultMessage: 'Changeset comment',\n  },\n  changesetCommentExample: {\n    id: 'projects.formInputs.changesetComment.example',\n    defaultMessage: 'Example: #hotosm-project-470 #missingmaps Buildings mapping.',\n  },\n  changesetCommentDescription: {\n    id: 'projects.formInputs.changesetComment.description',\n    defaultMessage:\n      'Default comments added to uploaded changeset comment field. Users should also be encouraged to add text describing what they mapped. Hashtags are sometimes used for analysis later, but should be human informative and not overused, #group #event for example.',\n  },\n  nonEditableComment: {\n    id: 'projects.formInputs.non_editable_comment',\n    defaultMessage: 'This default comment is not editable.',\n  },\n  projectPriorityURGENT: {\n    id: 'project.formInputs.priority.options.urgent',\n    defaultMessage: 'Urgent',\n  },\n  projectPriorityHIGH: {\n    id: 'project.formInputs.priority.options.high',\n    defaultMessage: 'High',\n  },\n  projectPriorityMEDIUM: {\n    id: 'project.formInputs.priority.options.medium',\n    defaultMessage: 'Medium',\n  },\n  projectPriorityLOW: {\n    id: 'project.formInputs.priority.options.low',\n    defaultMessage: 'Low',\n  },\n  statusDRAFT: {\n    id: 'project.formInputs.status.options.draft',\n    defaultMessage: 'Draft',\n  },\n  statusARCHIVED: {\n    id: 'project.formInputs.status.options.archived',\n    defaultMessage: 'Archived',\n  },\n  statusPUBLISHED: {\n    id: 'project.formInputs.status.options.published',\n    defaultMessage: 'Published',\n  },\n  userRoleALL: {\n    id: 'project.formInputs.user_role.options.all',\n    defaultMessage: 'All roles',\n  },\n  userRoleMAPPER: {\n    id: 'project.formInputs.user_role.options.mapper',\n    defaultMessage: 'Mapper',\n  },\n  subjectPlaceholder: {\n    id: 'project.formInputs.placeholders.subject',\n    defaultMessage: 'Subject *',\n  },\n  messagePlaceholder: {\n    id: 'project.formInputs.placeholders.message',\n    defaultMessage: 'Message *',\n  },\n  difficultyALL: {\n    id: 'project.formInputs.mapper_level.options.all',\n    defaultMessage: 'All levels',\n  },\n  difficultyCHALLENGING: {\n    id: 'project.formInputs.mapper_level.options.challenging',\n    defaultMessage: 'Challenging',\n  },\n  difficultyMODERATE: {\n    id: 'project.formInputs.mapper_level.options.moderate',\n    defaultMessage: 'Moderate',\n  },\n  difficultyEASY: {\n    id: 'project.formInputs.mapper_level.options.easy',\n    defaultMessage: 'Easy',\n  },\n  filterByOrg: {\n    id: 'project.formInputs.teams.actions.filter.organisations',\n    defaultMessage: 'Filter teams by organizations',\n  },\n  selectTeam: {\n    id: 'project.formInputs.teams.actions.select',\n    defaultMessage: 'Select a team...',\n  },\n  selectRole: {\n    id: 'project.formInputs.teams.actions.select.role',\n    defaultMessage: 'Select a role...',\n  },\n  add: {\n    id: 'project.formInputs.teams.actions.add',\n    defaultMessage: 'Add',\n  },\n  update: {\n    id: 'project.formInputs.teams.actions.update',\n    defaultMessage: 'Update',\n  },\n  preview: {\n    id: 'project.messages.preview',\n    defaultMessage: 'Preview',\n  },\n  customEditorName: {\n    id: 'projects.formInputs.custom_editor.name',\n    defaultMessage: 'Name',\n  },\n  customEditorDescription: {\n    id: 'projects.formInputs.custom_editor.description',\n    defaultMessage: 'Description',\n  },\n  customEditorUrl: {\n    id: 'projects.formInputs.custom_editor.url',\n    defaultMessage: 'URL',\n  },\n  customEditorEnabledForMapping: {\n    id: 'projects.formInputs.custom_editor.enabled.mapping',\n    defaultMessage: 'Enabled for mapping',\n  },\n  customEditorEnabledForValidation: {\n    id: 'projects.formInputs.custom_editor.enabled.validation',\n    defaultMessage: 'Enabled for validation',\n  },\n  deleteCustomEditor: {\n    id: 'projects.formInputs.custom_editor.delete',\n    defaultMessage: 'Delete Custom Editor',\n  },\n  removeCustomEditor: {\n    id: 'projects.formInputs.custom_editor.remove',\n    defaultMessage: 'Remove Custom Editor',\n  },\n  confirmDeleteCustomEditor: {\n    id: 'projects.formInputs.custom_editor.delete.confirm',\n    defaultMessage:\n      'This will remove the custom editor from the project. Are you sure you don\\'t want to disable the custom editor by toggling the \"Enabled\" checkbox above?',\n  },\n  noMappingEditor: {\n    id: 'projects.formInputs.noMappingEditor',\n    defaultMessage: 'At least one editor must be enabled for mapping',\n  },\n  noValidationEditor: {\n    id: 'projects.formInputs.noValidationEditor',\n    defaultMessage: 'At least one editor must be enabled for validation',\n  },\n  extraIdParams: {\n    id: 'projects.formInputs.extraIdParams',\n    defaultMessage: 'Additional iD URL parameters',\n  },\n  extraIdParamsDescription: {\n    id: 'projects.formInputs.extraIdParams.description',\n    defaultMessage:\n      'Any additional URL parameters that you want include when loading iD editor (both the embedded and the external ones). Use & to separate different parameters. Example: {text}.',\n  },\n  extraIdParamsDescriptionLink: {\n    id: 'projects.formInputs.extraIdParams.description.link',\n    defaultMessage: 'Check the {link} for more information.',\n  },\n  iDAPIDocs: {\n    id: 'projects.formInputs.extraIdParams.iDAPIDocs',\n    defaultMessage: 'iD editor documentation',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on user components.\n */\nexport default defineMessages({\n  loading: {\n    id: 'users.detail.loading',\n    defaultMessage: 'loading',\n  },\n  contributionTimelineTitle: {\n    id: 'users.detail.contributionTimelineTitle',\n    defaultMessage: 'Contribution Timeline',\n  },\n  projectsTitle: {\n    id: 'users.detail.projectsTitle',\n    defaultMessage: 'Projects',\n  },\n  countries: {\n    id: 'users.detail.countries',\n    defaultMessage: 'Countries',\n  },\n  timeSpentMapping: {\n    id: 'users.detail.timeSpentMapping',\n    defaultMessage: 'Time spent mapping',\n  },\n  buildingsMapped: {\n    id: 'users.detail.buildingsMapped',\n    defaultMessage: 'Buildings mapped',\n  },\n  roadMapped: {\n    id: 'users.detail.roadMapped',\n    defaultMessage: 'Km road mapped',\n  },\n  poiMapped: {\n    id: 'users.detail.poiMapped',\n    defaultMessage: 'Points of interests mapped',\n  },\n  waterwaysMapped: {\n    id: 'users.detail.waterwaysMapped',\n    defaultMessage: 'Km waterways mapped',\n  },\n  userMapped: {\n    id: 'users.detail.tasksMapped',\n    defaultMessage: '{user} mapped',\n  },\n  you: {\n    id: 'users.detail.you',\n    defaultMessage: 'You',\n  },\n  userValidated: {\n    id: 'users.detail.tasksValidated',\n    defaultMessage: '{user} validated',\n  },\n  invalidated: {\n    id: 'users.detail.invalidated',\n    defaultMessage: 'Needed more mapping',\n  },\n  validated: {\n    id: 'users.detail.validated',\n    defaultMessage: 'Validated',\n  },\n  finished: {\n    id: 'users.detail.finished',\n    defaultMessage: 'Finished',\n  },\n  topProjectsMappedTitle: {\n    id: 'users.detail.topProjectsMappedTitle',\n    defaultMessage: 'Top 5 projects contributed',\n  },\n  noTopProjectsData: {\n    id: 'users.detail.topProjectsMapped.error',\n    defaultMessage: 'No projects mapped until now.',\n  },\n  topCausesTitle: {\n    id: 'users.detail.topCausesTitle',\n    defaultMessage: 'Top causes contributed to',\n  },\n  others: {\n    id: 'users.detail.others',\n    defaultMessage: 'Others',\n  },\n  noProjectsData: {\n    id: 'users.detail.projects.noData',\n    defaultMessage: 'Information is not available because no projects were mapped until now.',\n  },\n  editsTitle: {\n    id: 'users.detail.editsTitle',\n    defaultMessage: 'Edits by numbers',\n  },\n  noEditsData: {\n    id: 'users.detail.edits.error',\n    defaultMessage:\n      'No data to show yet. OpenStreetMap edits stats are updated with a delay of one hour.',\n  },\n  topCountriesTitle: {\n    id: 'users.detail.topCountriesTitle',\n    defaultMessage: 'Top 5 countries most mapped',\n  },\n  tasks: {\n    id: 'users.detail.tasks',\n    defaultMessage: 'tasks',\n  },\n  heatmapNoContribution: {\n    id: 'users.detail.heatmapNoContribution',\n    defaultMessage: 'No contribution',\n  },\n  heatmapContribution: {\n    id: 'users.detail.heatmapContribution',\n    defaultMessage: 'contribution',\n  },\n  heatmapContributions: {\n    id: 'users.detail.heatmapContributions',\n    defaultMessage: 'contributions',\n  },\n  heatmapLegendMore: {\n    id: 'users.detail.heatmapLegendMore',\n    defaultMessage: 'more',\n  },\n  heatmapLegendLess: {\n    id: 'users.detail.heatmapLegendLess',\n    defaultMessage: 'less',\n  },\n  teams: {\n    id: 'users.detail.teams',\n    defaultMessage: 'Teams',\n  },\n  userOrganisationsError: {\n    id: 'users.header.organisations.error',\n    defaultMessage: \"Couldn't load organisations at this time\",\n  },\n});\n","import React from 'react';\n\nimport { useHover } from '../hooks/UseHover';\n\nexport const ProgressBar = ({\n  className,\n  small,\n  height,\n  firstBarValue,\n  secondBarValue = 0,\n  children,\n}) => {\n  const [hoverRef, isHovered, position] = useHover();\n  const heightClassname = `h${height}`;\n\n  /* tooltip component credit: https://codepen.io/syndicatefx/pen/QVPbJg */\n  return (\n    <div className={`cf db ${className || ''}`}>\n      <div className=\"relative\" ref={hoverRef}>\n        <div\n          className={`absolute bg-blue-grey br-pill ${\n            small ? heightClassname : 'h-pill'\n          } hide-child`}\n          style={{ width: `${firstBarValue > 100 ? 100 : firstBarValue}%` }}\n          role=\"progressbar\"\n          aria-valuenow={firstBarValue}\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        />\n        <div\n          className={`absolute bg-red br-pill ${small ? heightClassname : 'h-pill'} hide-child`}\n          style={{ width: `${secondBarValue > 100 ? 100 : secondBarValue}%` }}\n          role=\"progressbar\"\n          aria-valuenow={secondBarValue}\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        />\n        <div className={`bg-tan br-pill ${small ? heightClassname : 'h-pill'} overflow-y-hidden`} />\n        {isHovered && (\n          <span\n            className={`db absolute z-1 dib bg-blue-dark ba br2 b--blue-dark pa2 shadow-5 bottom-${\n              height === 'half' ? '2' : height\n            }`}\n            style={{ left: position.x }}\n          >\n            {children}\n            <span\n              className=\"absolute left-2 nt2 w1 h1 bg-blue-dark bl bt b--blue-dark rotate-45\"\n              style={{ bottom: '-0.5rem', left: 'calc(50% - 10px)' }}\n            />\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useState, useCallback, useRef } from 'react';\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  // Wrap in useCallback so we can use in dependencies below\n  const handleMouseOver = useCallback((e) => {\n    setPosition({ x: e.clientX - ref.current.offsetLeft - 35, y: e.clientY });\n    setValue(true);\n  }, []);\n  const handleMouseOut = useCallback(() => setValue(false), []);\n\n  // Keep track of the last node passed to callbackRef\n  // so we can remove its event listeners.\n  const ref = useRef();\n\n  // Use a callback ref instead of useEffect so that event listeners\n  // get changed in the case that the returned ref gets added to\n  // a different element later. With useEffect, changes to ref.current\n  // wouldn't cause a rerender and thus the effect would run again.\n  const callbackRef = useCallback(\n    (node) => {\n      if (ref.current) {\n        ref.current.removeEventListener('mouseover', handleMouseOver);\n        ref.current.removeEventListener('mouseout', handleMouseOut);\n      }\n\n      ref.current = node;\n\n      if (ref.current) {\n        ref.current.addEventListener('mouseover', handleMouseOver);\n        ref.current.addEventListener('mouseout', handleMouseOut);\n      }\n    },\n    [handleMouseOver, handleMouseOut],\n  );\n\n  return [callbackRef, value, position];\n}\n","import React from 'react';\nimport { FormattedNumber } from 'react-intl';\n\nexport const StatsCard = ({ icon, description, value, className, invertColors = false }) => {\n  return (\n    <div\n      className={`cf pt3 pb3 ph3 br1 ${\n        invertColors ? 'bg-red white' : 'bg-white red shadow-6'\n      } flex items-center ${className || ''}`}\n    >\n      <div className=\"w-30 fl ml2\">{icon}</div>\n      <StatsCardContent\n        value={Number(value) || value === 0 ? <FormattedNumber value={Math.trunc(value)} /> : value}\n        label={description}\n        className=\"w-70 pt3-m mb1 fl\"\n        invertColors={invertColors}\n      />\n    </div>\n  );\n};\n\nexport const StatsCardContent = ({ value, label, className, invertColors = false }: Object) => (\n  <div className={className}>\n    <h3 className={`ma0 mb1 barlow-condensed f2 fw5 ${invertColors ? 'white' : 'red'}`}>{value}</h3>\n    <span className={`ma0 h2 f7 fw5 ${invertColors ? 'white' : 'blue-grey'}`}>{label}</span>\n  </div>\n);\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on project cards.\n */\nexport default defineMessages({\n  projectTitle: {\n    id: 'project.mainSection.title',\n    defaultMessage: 'Generic project',\n  },\n  mappingDifficulty: {\n    id: 'project.nav.mappingDifficulty',\n    defaultMessage: 'Difficulty level',\n  },\n  moreFilters: {\n    id: 'project.nav.moreFilters',\n    defaultMessage: 'More filters',\n  },\n  campaign: {\n    id: 'project.nav.campaign',\n    defaultMessage: 'Campaign',\n  },\n  startDate: {\n    id: 'navFilters.startDate',\n    defaultMessage: 'From',\n  },\n  startDatePlaceholder: {\n    id: 'navFilters.startDate.placeholder',\n    defaultMessage: 'Click to select a start date',\n  },\n  endDate: {\n    id: 'navFilters.endDate',\n    defaultMessage: 'To',\n  },\n  endDatePlaceholder: {\n    id: 'navFilters.endDatePlace.placeholder',\n    defaultMessage: 'Click to select an end date',\n  },\n  dateRange: {\n    id: 'navFilters.dateRange',\n    defaultMessage: 'Date Range',\n  },\n  thisWeek: {\n    id: 'navFilters.thisWeek',\n    defaultMessage: 'This week',\n  },\n  thisMonth: {\n    id: 'navFilters.thisMonth',\n    defaultMessage: 'This month',\n  },\n  thisYear: {\n    id: 'navFilters.thisYear',\n    defaultMessage: 'This year',\n  },\n  lastWeek: {\n    id: 'navFilters.lastWeek',\n    defaultMessage: 'Last week',\n  },\n  lastMonth: {\n    id: 'navFilters.lastMonth',\n    defaultMessage: 'Last month',\n  },\n  lastYear: {\n    id: 'navFilters.lastYear',\n    defaultMessage: 'Last year',\n  },\n  customRange: {\n    id: 'navFilters.customRange',\n    defaultMessage: 'Custom range',\n  },\n  showMapToggle: {\n    id: 'project.nav.showMapToggle',\n    defaultMessage: 'Show map',\n  },\n  listViewToggle: {\n    id: 'project.nav.listViewToggle',\n    defaultMessage: 'List view',\n  },\n  typesOfMapping: {\n    id: 'project.navFilters.typesOfMapping',\n    defaultMessage: 'Types of mapping',\n  },\n  projectsToMap: {\n    id: 'project.navFilters.action.map',\n    defaultMessage: 'Projects to map',\n  },\n  projectsToValidate: {\n    id: 'project.navFilters.action.validate',\n    defaultMessage: 'Projects to validate',\n  },\n  anyProject: {\n    id: 'project.navFilters.action.any',\n    defaultMessage: 'Any project',\n  },\n  exactMatch: {\n    id: 'project.navFilters.typesOfMapping.exactMatch',\n    defaultMessage: 'Exact match',\n  },\n  campaigns: {\n    id: 'project.navFilters.campaigns',\n    defaultMessage: 'All campaigns',\n  },\n  showAllXTags: {\n    id: 'project.navFilters.showAllXTags',\n    defaultMessage: 'Show {typeOfTag}',\n  },\n  searchPlaceholder: {\n    id: 'project.inputs.placeholders.search',\n    defaultMessage: 'Search project',\n  },\n  organisation: {\n    id: 'project.navFilters.organisation',\n    defaultMessage: 'Organization',\n  },\n  organisations: {\n    id: 'project.navFilters.organisations',\n    defaultMessage: 'All Organizations',\n  },\n  location: {\n    id: 'project.navFilters.location',\n    defaultMessage: 'Location',\n  },\n  locations: {\n    id: 'project.navFilters.locations',\n    defaultMessage: 'Locations',\n  },\n  interest: {\n    id: 'project.navFilters.interest',\n    defaultMessage: 'Interest',\n  },\n  interests: {\n    id: 'project.navFilters.interests',\n    defaultMessage: 'Interests',\n  },\n  filterByMyInterests: {\n    id: 'project.navFilters.filterByMyInterests',\n    defaultMessage: 'Filter by my interests',\n  },\n  errorLoadingTheXForY: {\n    id: 'project.navFilters.error',\n    defaultMessage: 'Error loading the {xWord} for {yWord}',\n  },\n  filters: {\n    id: 'project.nav.filters',\n    defaultMessage: 'Filters',\n  },\n  projects: {\n    id: 'project.nav.projects',\n    defaultMessage: 'Projects',\n  },\n  myProjects: {\n    id: 'project.nav.myprojects',\n    defaultMessage: 'My Projects',\n  },\n  manageProjects: {\n    id: 'project.nav.manageProjects',\n    defaultMessage: 'Manage Projects',\n  },\n  favorited: {\n    id: 'project.nav.favorited',\n    defaultMessage: 'Favorited',\n  },\n  contributed: {\n    id: 'project.nav.contributed',\n    defaultMessage: 'Contributed',\n  },\n  allprojects: {\n    id: 'project.nav.allprojects',\n    defaultMessage: 'All',\n  },\n  active: {\n    id: 'project.nav.active',\n    defaultMessage: 'Active',\n  },\n  stale: {\n    id: 'project.nav.stale',\n    defaultMessage: 'Stale',\n  },\n  managed: {\n    id: 'project.nav.managed',\n    defaultMessage: 'Managed by me',\n  },\n  created: {\n    id: 'project.nav.created',\n    defaultMessage: 'Created by me',\n  },\n  draft: {\n    id: 'project.nav.draft',\n    defaultMessage: 'Draft',\n  },\n  archived: {\n    id: 'project.nav.archived',\n    defaultMessage: 'Archived',\n  },\n  paginationCount: {\n    id: 'project.pagination.count',\n    defaultMessage: 'Showing {number} of {total} projects',\n  },\n  clearFilters: {\n    id: 'project.nav.clearFilters',\n    defaultMessage: 'Clear filters',\n  },\n  sortBy: {\n    id: 'project.sortby',\n    defaultMessage: 'Sort by',\n  },\n  sortByIdDesc: {\n    id: 'project.sortby.id.descending',\n    defaultMessage: 'New projects',\n  },\n  sortByIdAsc: {\n    id: 'project.sortby.id.ascending',\n    defaultMessage: 'Old projects',\n  },\n  sortByPriority: {\n    id: 'project.sortby.priority',\n    defaultMessage: 'Urgent projects',\n  },\n  sortByEasy: {\n    id: 'project.sortby.difficulty.easy',\n    defaultMessage: 'Easy projects',\n  },\n  sortByChallenging: {\n    id: 'project.sortby.difficulty.challenging',\n    defaultMessage: 'Challenging projects',\n  },\n  sortByMoreActive: {\n    id: 'project.sortby.more_active',\n    defaultMessage: 'Active projects',\n  },\n  apply: {\n    id: 'project.nav.apply',\n    defaultMessage: 'Apply',\n  },\n  clear: {\n    id: 'project.nav.clear',\n    defaultMessage: 'Clear',\n  },\n  retry: {\n    id: 'project.results.retry',\n    defaultMessage: 'Retry',\n  },\n});\n","import {\n  format,\n  startOfWeek,\n  startOfMonth,\n  startOfYear,\n  endOfWeek,\n  endOfMonth,\n  endOfYear,\n} from 'date-fns';\n\nexport function getPastMonths(months) {\n  let today = new Date();\n  return today.setMonth(today.getMonth() - months);\n}\n\nconst date = new Date();\nconst dateFormat = 'yyyy-MM-dd';\nexport const dateRanges = {\n  thisWeek: {\n    start: format(startOfWeek(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisMonth: {\n    start: format(startOfMonth(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisYear: {\n    start: format(startOfYear(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  lastWeek: {\n    start: format(startOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n    end: format(endOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n  },\n  lastMonth: {\n    start: format(startOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n    end: format(endOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n  },\n  lastYear: {\n    start: format(startOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n    end: format(endOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n  },\n};\n","export function compareTaskId(a, b) {\n  if (a.properties.taskId > b.properties.taskId) return 1;\n  if (b.properties.taskId > a.properties.taskId) return -1;\n  return 0;\n}\n\nexport function compareLastUpdate(a, b) {\n  return new Date(b.properties.actionDate) - new Date(a.properties.actionDate);\n}\n\nexport function compareHistoryLastUpdate(a, b) {\n  return new Date(b.actionDate) - new Date(a.actionDate);\n}\n\nexport function compareByPropertyDescending(a, b, property) {\n  if (a[property] > b[property]) return -1;\n  if (b[property] > a[property]) return 1;\n  return 0;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\n\nconst ProgressBar = ({ percent }) => (\n  <div className=\"w-100 relative mt2\">\n    <div\n      style={{ height: '0.5em', width: `${percent * 100}%` }}\n      className=\"bg-red br-pill absolute\"\n    ></div>\n  </div>\n);\n\nexport const BarChartItem = ({ name, link, percentValue, number, numberUnit }: Object) => (\n  <li className=\"w-100 cf list pv3\">\n    <div className=\"w-100 cf mr4\">\n      <div className=\"di ma0 f7 b fl\">\n        {link ? (\n          <Link className=\"link blue-dark\" to={link}>\n            {name}\n          </Link>\n        ) : (\n          name\n        )}\n      </div>\n      <div className=\"di ma0 f7 fr\">\n        <span className=\"b mr1\">{number}</span>\n        {numberUnit && <span className=\"blue-grey\">{numberUnit}</span>}\n      </div>\n    </div>\n    <div className=\"w-100 cf\">\n      <ProgressBar percent={percentValue} />\n    </div>\n  </li>\n);\n\nexport const BarListChart = ({ data, valueField, nameField, linkBase, linkField }) => {\n  return (\n    <ol className=\"pa0 mt1 mb0\">\n      {data.map((p, n) => (\n        <BarChartItem\n          key={n}\n          name={p[nameField]}\n          link={linkBase ? `${linkBase}${p[linkField]}` : null}\n          percentValue={p.percent}\n          number={p[valueField]}\n          numberUnit={<FormattedMessage {...messages.tasks} />}\n        />\n      ))}\n    </ol>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { format, parse } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport 'react-placeholder/lib/reactPlaceholder.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { dateRanges } from '../../utils/date';\nimport messages from './messages';\nimport { CalendarIcon } from '../svgIcons';\n\nexport const ProjectFilterSelect = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  selectedTag,\n  setQueryForChild,\n  allQueryParamsForChild,\n  options,\n  payloadKey,\n}) => {\n  const fieldsetTitle = <FormattedMessage {...messages[fieldsetName]} />;\n  const fieldsetTitlePlural = <FormattedMessage {...messages[`${fieldsetName}s`]} />;\n\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>{fieldsetTitle}</legend>\n      {options.isError ? (\n        <div className=\"bg-tan pa4\">\n          <FormattedMessage\n            {...messages.errorLoadingTheXForY}\n            values={{\n              xWord: <FormattedMessage {...messages.filters} />,\n              yWord: fieldsetTitlePlural,\n            }}\n          />\n        </div>\n      ) : (\n        <TagFilterPickerAutocomplete\n          fieldsetTitle={fieldsetTitle}\n          defaultSelectedItem={fieldsetTitlePlural}\n          fieldsetName={fieldsetName}\n          payloadKey={payloadKey}\n          queryParamSelectedItem={selectedTag || fieldsetTitle}\n          tagOptionsFromAPI={options}\n          setQuery={setQueryForChild}\n          allQueryParams={allQueryParamsForChild}\n        />\n      )}\n    </fieldset>\n  );\n};\n\nexport const DateRangeFilterSelect = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  setQueryForChild,\n  allQueryParamsForChild,\n  isCustomDateRange,\n  setIsCustomDateRange,\n  startDateInQuery,\n  endDateInQuery,\n}) => {\n  const [dateRange, setDateRange] = useState('thisYear');\n\n  const dropdownOptions = [\n    { value: 'thisWeek', label: <FormattedMessage {...messages.thisWeek} /> },\n    { value: 'thisMonth', label: <FormattedMessage {...messages.thisMonth} /> },\n    { value: 'thisYear', label: <FormattedMessage {...messages.thisYear} /> },\n    { value: 'lastWeek', label: <FormattedMessage {...messages.lastWeek} /> },\n    { value: 'lastMonth', label: <FormattedMessage {...messages.lastMonth} /> },\n    { value: 'lastYear', label: <FormattedMessage {...messages.lastYear} /> },\n    (isCustomDateRange || dateRange === 'custom') && {\n      value: 'custom',\n      label: <FormattedMessage {...messages.customRange} />,\n      isOptionDisabled: true,\n    },\n  ].filter((a) => a);\n\n  useEffect(() => {\n    if (!endDateInQuery && startDateInQuery === dateRanges['thisYear'].start) {\n      setDateRange('thisYear');\n      return;\n    }\n    const doesRangeMatch = Object.keys(dateRanges).find(\n      (range) =>\n        dateRanges[range].start === startDateInQuery && dateRanges[range].end === endDateInQuery,\n    );\n    doesRangeMatch ? setDateRange(doesRangeMatch) : setDateRange('custom');\n  }, [startDateInQuery, endDateInQuery]);\n\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>\n        <FormattedMessage {...messages.dateRange} />\n      </legend>\n      <Select\n        onChange={({ value }) => {\n          setQueryForChild(\n            {\n              ...allQueryParamsForChild,\n              page: undefined,\n              startDate: dateRanges[value].start,\n              endDate: dateRanges[value].end,\n            },\n            'pushIn',\n          );\n          setIsCustomDateRange(false);\n          setDateRange(value);\n        }}\n        classNamePrefix=\"react-select\"\n        options={dropdownOptions}\n        value={\n          isCustomDateRange\n            ? dropdownOptions.filter((option) => option.value === 'custom')\n            : dropdownOptions.filter((option) => option.value === dateRange)\n        }\n        isOptionDisabled={(option) => option.isOptionDisabled}\n      />\n    </fieldset>\n  );\n};\n\nexport const DateFilterPicker = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  selectedValue,\n  setQueryForChild,\n  allQueryParamsForChild,\n  setIsCustomDateRange,\n}) => {\n  const intl = useIntl();\n  const dateFormat = 'yyyy-MM-dd';\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>\n        <FormattedMessage {...messages[fieldsetName]} />\n      </legend>\n      <div className=\"flex\">\n        <CalendarIcon className=\"blue-grey dib w1 pr2 v-mid\" />\n        <DatePicker\n          selected={selectedValue ? parse(selectedValue, dateFormat, new Date()) : null}\n          onChange={(date) => {\n            setQueryForChild(\n              {\n                ...allQueryParamsForChild,\n                page: undefined,\n                [fieldsetName]: date ? format(date, dateFormat) : null,\n              },\n              'pushIn',\n            );\n            setIsCustomDateRange(true);\n          }}\n          dateFormat={dateFormat}\n          className=\"w-auto pv2 ph1 ba b--grey-light\"\n          placeholderText={intl.formatMessage(messages[`${fieldsetName}Placeholder`])}\n          showYearDropdown\n          scrollableYearDropdown\n        />\n      </div>\n    </fieldset>\n  );\n};\n\n/*\ndefaultSelectedItem gets appended to top of list as an option for reset\n*/\nexport const TagFilterPickerAutocomplete = ({\n  tagOptionsFromAPI: { tags: tagOptions },\n  fieldsetTitle,\n  fieldsetName,\n  queryParamSelectedItem,\n  defaultSelectedItem,\n  allQueryParams,\n  setQuery,\n  payloadKey = 'name',\n}) => {\n  const getLabel = (option) => option.name || option;\n\n  const getValue = (option) => (option && option[payloadKey] ? option[payloadKey] : option);\n\n  const handleTagChange = (change) => {\n    const value = getValue(change);\n    const isAllTags = change && value === defaultSelectedItem;\n    /* should we encodeURIComponent the change.value? */\n    const newValue = isAllTags ? undefined : value;\n    setQuery(\n      {\n        ...allQueryParams,\n        page: undefined,\n        [fieldsetName]: newValue || undefined,\n      },\n      'pushIn',\n    );\n  };\n\n  const selectedOption = tagOptions.find((option) => option[payloadKey] === queryParamSelectedItem);\n\n  return (\n    <Select\n      isLoading={tagOptions.isLoading}\n      onChange={handleTagChange}\n      classNamePrefix=\"react-select\"\n      getOptionLabel={getLabel}\n      getOptionValue={getValue}\n      placeholder={allQueryParams[fieldsetName] || fieldsetTitle}\n      options={tagOptions}\n      value={selectedOption || null}\n      isClearable={true}\n      isDisabled={fieldsetName === 'interests' && allQueryParams.basedOnMyInterests}\n      styles={{\n        menu: (baseStyles) => ({\n          ...baseStyles,\n          // having greater zIndex than switch toggle(5)\n          zIndex: 6,\n        }),\n      }}\n    />\n  );\n};\n","import { useEffect, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { API_URL } from '../config';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        tags: action.payload && action.payload[Object.keys(action.payload)[0]],\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      console.log(action);\n      throw new Error();\n  }\n};\n\nexport const useTagAPI = (initialData, tagType, processDataFn) => {\n  const token = useSelector((state) => state.auth.token);\n  const locale = useSelector((state) => state.preferences.locale);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    tags: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    /* TODO(tdk): support axios cancelling like on projectsAPI,\n       make sure to consider how to monitor if form is unloaded */\n\n    const fetchData = async () => {\n      const queryParams = {\n        organisations: '?omitManagerList=true',\n      };\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        let result;\n        if (token) {\n          result = await axios({\n            url: `${API_URL}${tagType}/${queryParams[tagType] ? queryParams[tagType] : ''}`,\n            method: 'GET',\n            headers: { Authorization: `Token ${token}` },\n          });\n        } else {\n          result = await axios(`${API_URL}${tagType}/`);\n        }\n\n        if (!didCancel) {\n          if (result && result.headers && result.headers['content-type'].indexOf('json') !== -1) {\n            if (processDataFn) {\n              result.data.tags = processDataFn(result.data.tags, locale);\n            }\n            dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n          } else {\n            console.error('Invalid return content-type for organisation tags');\n            dispatch({ type: 'FETCH_FAILURE' });\n          }\n        }\n      } catch (error) {\n        /* if cancelled, this setting state of unmounted\n         * component would be a memory leak */\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [tagType, token, processDataFn, locale]);\n\n  return [state];\n};\n","import { useEffect, useState } from 'react';\n\nfunction getStatusCount(stats, status) {\n  return stats.reduce((total, entry) => total + entry[status], 0);\n}\n\nexport function useTotalTasksStats(stats) {\n  const [totalStats, setTotalStats] = useState({\n    mapped: 0,\n    validated: 0,\n  });\n  useEffect(() => {\n    if (stats && stats.length) {\n      setTotalStats({\n        mapped: getStatusCount(stats, 'mapped'),\n        validated: getStatusCount(stats, 'validated'),\n      });\n    }\n  }, [stats]);\n  return totalStats;\n}\n","import { useEffect, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useQueryParams,\n  encodeQueryParams,\n  StringParam,\n  NumberParam,\n  withDefault,\n} from 'use-query-params';\nimport { stringify as stringifyUQP } from 'query-string';\nimport axios from 'axios';\nimport { format, startOfYear } from 'date-fns';\n\nimport { CommaArrayParam } from '../utils/CommaArrayParam';\nimport { useThrottle } from '../hooks/UseThrottle';\nimport { remapParamsToAPI } from '../utils/remapParamsToAPI';\nimport { API_URL } from '../config';\n\n/* See also moreFiltersForm, the useQueryParams are duplicated there for specific modular usage */\n/* This one is e.g. used for updating the URL when returning to /contribute\n *  and directly submitting the query to the API */\nconst statsQueryAllSpecification = {\n  startDate: withDefault(StringParam, format(startOfYear(Date.now()), 'yyyy-MM-dd')),\n  endDate: StringParam,\n  campaign: StringParam,\n  location: StringParam,\n  project: CommaArrayParam,\n  organisationName: StringParam,\n  organisationId: NumberParam,\n};\n\nexport const useTasksStatsQueryParams = () => {\n  const uqp = useQueryParams(statsQueryAllSpecification);\n  return uqp;\n};\n\n/* The API uses slightly different JSON keys than the queryParams,\n   this fn takes an object with queryparam keys and outputs JSON keys\n   while maintaining the same values */\n/* TODO support full text search and change text=>project for that */\nconst backendToQueryConversion = {\n  startDate: 'startDate',\n  endDate: 'endDate',\n  campaign: 'campaign',\n  location: 'country',\n  project: 'projectId',\n  organisationName: 'organisationName',\n  organisationId: 'organisationId',\n};\n\nconst defaultInitialData = {\n  taskStats: [],\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        stats: action.payload.taskStats,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      console.log(action);\n      throw new Error();\n  }\n};\n\nexport const useTasksStatsQueryAPI = (\n  initialData = defaultInitialData,\n  ExternalQueryParamsState,\n  extraQuery = '',\n) => {\n  const throttledExternalQueryParamsState = useThrottle(ExternalQueryParamsState, 1500);\n  const token = useSelector((state) => state.auth.token);\n  const controller = new AbortController();\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    stats: initialData.taskStats,\n    queryParamsState: ExternalQueryParamsState[0],\n  });\n\n  const fetchData = async () => {\n    dispatch({\n      type: 'FETCH_INIT',\n    });\n\n    let headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    };\n    const paramsRemapped = remapParamsToAPI(\n      throttledExternalQueryParamsState,\n      backendToQueryConversion,\n    );\n    extraQuery.split(',').forEach((query) => {\n      const [key, value] = query.trim().split('=');\n      paramsRemapped[key] = value;\n    });\n\n    await axios({\n      url: `${API_URL}tasks/statistics/`,\n      method: 'GET',\n      headers: headers,\n      params: paramsRemapped,\n      signal: controller.signal,\n    })\n      .then((result) => {\n        if (result?.headers && result.headers['content-type'].indexOf('json') !== -1) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        } else {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      })\n      .catch((error) => {\n        if (!axios.isCancel(error)) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n        if (error.response?.data?.Error === 'No statistics found') {\n          const zeroPayload = Object.assign(defaultInitialData, { pagination: { total: 0 } });\n          dispatch({ type: 'FETCH_SUCCESS', payload: zeroPayload });\n        }\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [throttledExternalQueryParamsState, token, extraQuery]);\n\n  return [state, fetchData];\n};\n\nexport const stringify = (obj) => {\n  const encodedQuery = encodeQueryParams(statsQueryAllSpecification, obj);\n  return stringifyUQP(encodedQuery);\n};\n","import { useEffect, useState } from 'react';\n\nexport const levels = [\n  { level: 5, tier: 'veryHigh', minActions: 50000, fee: 35000 },\n  { level: 4, tier: 'high', minActions: 25000, fee: 20000 },\n  { level: 3, tier: 'medium', minActions: 10000, fee: 7500 },\n  { level: 2, tier: 'low', minActions: 1000, fee: 2500 },\n  { level: 1, tier: 'free', minActions: 0, fee: 0 },\n];\n\nexport function useOrganisationLevel(completedActions) {\n  const currentLevel = useGetLevel(completedActions);\n  const [nextLevelThreshold, setNextLevelThreshold] = useState(1000);\n  useEffect(() => {\n    setNextLevelThreshold(\n      currentLevel && currentLevel.level < 5\n        ? levels.filter((item) => item.level === currentLevel.level + 1)[0].minActions\n        : null,\n    );\n  }, [currentLevel]);\n  return [currentLevel, nextLevelThreshold];\n}\n\nexport function useGetLevel(actions) {\n  const [currentLevel, setCurrentLevel] = useState(levels[levels.length - 1]);\n  useEffect(() => {\n    if (actions) {\n      setCurrentLevel(levels.filter((level) => actions >= level.minActions)[0]);\n    } else {\n      setCurrentLevel(levels[levels.length - 1]);\n    }\n  }, [actions]);\n  return currentLevel;\n}\n\nexport function usePredictLevel(actions, type) {\n  const newLevel = useGetLevel(actions);\n  const [predictedLevel, setPredictedLevel] = useState(newLevel);\n\n  useEffect(() => {\n    if (type === 'DISCOUNTED') {\n      const cost =\n        newLevel.level > 1 ? levels.filter((item) => item.level === newLevel.level - 1)[0].fee : 0;\n      setPredictedLevel({ ...newLevel, fee: cost });\n    } else {\n      setPredictedLevel(newLevel);\n    }\n  }, [type, newLevel]);\n  return predictedLevel;\n}\n","import React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport messages from './messages';\nimport { StatsCardContent } from '../statsCard';\nimport { useTotalTasksStats } from '../../hooks/UseTotalTasksStats';\n\nexport function TasksStatsSummary({ stats }) {\n  const totalStats = useTotalTasksStats(stats);\n  return (\n    <>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.tasksMapped} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.mapped} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.tasksValidated} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.validated} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.completedActions} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.mapped + totalStats.validated} />}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { Suspense, useState } from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport { useTagAPI } from '../../hooks/UseTagAPI';\nimport { useValidateDateRange } from '../../hooks/UseValidateDateRange';\nimport { formatFilterCountriesData } from '../../utils/countries';\nimport {\n  ProjectFilterSelect,\n  DateFilterPicker,\n  DateRangeFilterSelect,\n} from '../projects/filterSelectFields';\nimport { TasksStatsSummary } from './tasksStatsSummary';\n\nconst TasksStatsChart = React.lazy(() =>\n  import('./tasksStatsChart' /* webpackChunkName: \"taskStatsChart\" */),\n);\n\nexport const TasksStats = ({ query, setQuery, stats, error, loading, retryFn }) => {\n  const [campaignAPIState] = useTagAPI([], 'campaigns');\n  const [countriesAPIState] = useTagAPI([], 'countries', formatFilterCountriesData);\n  const {\n    startDate: startDateInQuery,\n    endDate: endDateInQuery,\n    campaign: campaignInQuery,\n    location: countryInQuery,\n  } = query;\n  const [isCustomDateRange, setIsCustomDateRange] = useState(false);\n\n  const dateValidation = useValidateDateRange(query);\n\n  const fieldsetStyle = 'bn dib pv0-ns pv2 ph2-ns ph1 mh0 mb1';\n  const titleStyle = 'dib ttu fw5 blue-grey mb1';\n\n  return (\n    <>\n      <div className=\"w-100 cf flex flex-wrap\">\n        <DateFilterPicker\n          fieldsetName=\"startDate\"\n          fieldsetStyle={`${fieldsetStyle} fl`}\n          titleStyle={titleStyle}\n          selectedValue={startDateInQuery}\n          setQueryForChild={setQuery}\n          allQueryParamsForChild={query}\n          setIsCustomDateRange={setIsCustomDateRange}\n        />\n        <DateFilterPicker\n          fieldsetName=\"endDate\"\n          fieldsetStyle={`${fieldsetStyle} fl`}\n          titleStyle={titleStyle}\n          selectedValue={endDateInQuery}\n          setQueryForChild={setQuery}\n          allQueryParamsForChild={query}\n          setIsCustomDateRange={setIsCustomDateRange}\n        />\n        <div className=\"w-60-l w-100 fl\">\n          <DateRangeFilterSelect\n            fieldsetName=\"dateRange\"\n            fieldsetStyle={`${fieldsetStyle} w-20-ns w-100`}\n            titleStyle={titleStyle}\n            selectedValue={startDateInQuery}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n            isCustomDateRange={isCustomDateRange}\n            setIsCustomDateRange={setIsCustomDateRange}\n            startDateInQuery={startDateInQuery}\n            endDateInQuery={endDateInQuery}\n          />\n          <ProjectFilterSelect\n            fieldsetName=\"campaign\"\n            fieldsetStyle={`${fieldsetStyle} w-30-ns w-100`}\n            titleStyle={titleStyle}\n            selectedTag={campaignInQuery}\n            options={campaignAPIState}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n          />\n          <ProjectFilterSelect\n            fieldsetName=\"location\"\n            fieldsetStyle={`${fieldsetStyle} w-30-ns w-100`}\n            titleStyle={titleStyle}\n            selectedTag={countryInQuery}\n            options={countriesAPIState}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n            payloadKey=\"value\"\n          />\n        </div>\n      </div>\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        rows={26}\n        ready={!loading}\n        className=\"pv3 ph2 ph4-ns\"\n      >\n        {!loading && error ? (\n          <div className=\"bg-tan pa4\">\n            <FormattedMessage {...messages.errorLoadingStats} />\n            <div className=\"pv3\">\n              {dateValidation && dateValidation.detail ? (\n                <FormattedMessage {...messages[dateValidation.detail]} />\n              ) : (\n                <button className=\"pa1 pointer\" onClick={() => retryFn()}>\n                  <FormattedMessage {...messages.retry} />\n                </button>\n              )}\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"pt3 pb3 ph2 cf mr2 w-100 w-two-thirds-l\">\n              <Suspense fallback={<div>loading...</div>}>\n                <TasksStatsChart stats={stats} />\n              </Suspense>\n            </div>\n            <div className=\"cf w-100\">\n              <TasksStatsSummary stats={stats} />\n            </div>\n          </>\n        )}\n      </ReactPlaceholder>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { startOfTomorrow, startOfToday, parse, differenceInDays } from 'date-fns';\n\nexport function useValidateDateRange(query) {\n  const [validation, setValidation] = useState();\n\n  useEffect(() => {\n    setValidation({ error: false, detail: '' });\n    if (query.startDate) {\n      const startDate = parse(query.startDate, 'yyyy-MM-dd', new Date());\n      const endDate = query.endDate\n        ? parse(query.endDate, 'yyyy-MM-dd', new Date())\n        : startOfToday();\n      if (startDate > startOfTomorrow() || startDate > endDate) {\n        setValidation({ error: true, detail: 'badStartDate' });\n      }\n      if (differenceInDays(endDate, startDate) > 366) {\n        setValidation({ error: true, detail: 'longDateRange' });\n      }\n    }\n  }, [query.startDate, query.endDate]);\n  return validation;\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { startOfYear, format, startOfToday, parse } from 'date-fns';\n\nimport { fetchLocalJSONAPI } from '../network/genericJSONRequest';\n\n// check if query is correspondent only to the current year period and don't apply\n// any other filter\nexport function useIsOrgYearQuery(query) {\n  const [isOrgYearQuery, setIsOrgYearQuery] = useState(true);\n  useEffect(() => {\n    if (query) {\n      if (\n        query.startDate !== format(startOfYear(new Date()), 'yyyy-MM-dd') ||\n        (query.endDate && parse(query.endDate, 'yyyy-MM-dd', new Date()) < startOfToday()) ||\n        query.location ||\n        query.campaign\n      )\n        setIsOrgYearQuery(false);\n    }\n  }, [query]);\n  return isOrgYearQuery;\n}\n\n// if the query is relative to the current year period, return the received stats\n// case not, fetch the api to get the stats of the current year\nexport function useCurrentYearStats(organisationId, query, stats) {\n  const isOrgYearQuery = useIsOrgYearQuery(query);\n  const [yearStats, setYearStats] = useState([]);\n  const token = useSelector((state) => state.auth.token);\n\n  useEffect(() => {\n    if (!isOrgYearQuery) {\n      const startDate = format(startOfYear(new Date()), 'yyyy-MM-dd');\n      fetchLocalJSONAPI(\n        `tasks/statistics/?startDate=${startDate}&organisationId=${organisationId}`,\n        token,\n      )\n        .then((res) => setYearStats(res.taskStats))\n        .catch((e) => console.log(e));\n    }\n  }, [isOrgYearQuery, organisationId, token]);\n\n  useEffect(() => {\n    if (isOrgYearQuery) setYearStats(stats);\n  }, [isOrgYearQuery, stats]);\n  return yearStats;\n}\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { FormattedMessage, FormattedNumber, useIntl } from 'react-intl';\n\nimport messages from './messages';\nimport { StatsCardContent } from '../statsCard';\nimport { InfoIcon } from '../svgIcons';\n\nconst ActionsNeededLabel = () => {\n  const intl = useIntl();\n  return (\n    <>\n      <span data-tip={intl.formatMessage(messages.actionsNeededHelp)}>\n        <FormattedMessage {...messages.actionsNeeded} />\n        <InfoIcon className=\"blue-grey h1 w1 v-mid pb1 ml2\" />\n      </span>\n      <ReactTooltip place=\"bottom\" className=\"mw6\" effect=\"solid\" />\n    </>\n  );\n};\n\nexport function RemainingTasksStats({ tasks }) {\n  const mappingNeeded = tasks.ready + tasks.invalidated + tasks.lockedForMapping;\n  const validationNeeded = tasks.mapped + tasks.lockedForValidation;\n  return (\n    <>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.toBeMapped} />}\n            className=\"tc\"\n            value={<FormattedNumber value={mappingNeeded} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.readyForValidation} />}\n            className=\"tc\"\n            value={<FormattedNumber value={validationNeeded} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<ActionsNeededLabel />}\n            className=\"tc\"\n            // each task that needs to be mapped, also needs to be validated,\n            // that is the reason why we multiple by 2\n            value={<FormattedNumber value={mappingNeeded * 2 + validationNeeded} />}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useCallback } from 'react';\nimport { getDayOfYear, isLeapYear } from 'date-fns';\n\nexport function usePredictYearlyTasks(completedActions, currentDate) {\n  const prediction = useCallback(() => {\n    const dayNumber = getDayOfYear(currentDate);\n    const totalDays = isLeapYear(currentDate) ? 366 : 365;\n    return Math.round((completedActions * totalDays) / dayNumber);\n  }, [completedActions, currentDate]);\n\n  return prediction();\n}\n","import toDate from \"../toDate/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * const result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import React from 'react';\nimport { getYear } from 'date-fns';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport messages from './messages';\nimport { StatsCardContent } from '../statsCard';\nimport { ProgressBar } from '../progressBar';\nimport { usePredictYearlyTasks } from '../../hooks/UsePredictYearlyTasks';\nimport {\n  useOrganisationLevel,\n  usePredictLevel,\n  useGetLevel,\n  levels,\n} from '../../hooks/UseOrganisationLevel';\n\n// this component is designed to the FREE organisation type\nexport function OrganisationUsageLevel({ completedActions, orgName }) {\n  const [currentLevel, nextLevelThreshold] = useOrganisationLevel(completedActions);\n  const percent = parseInt((completedActions / nextLevelThreshold) * 100);\n  const yearPrediction = usePredictYearlyTasks(completedActions, new Date());\n  const levelPrediction = usePredictLevel(yearPrediction, 'FREE');\n  const currentYear = getYear(new Date());\n\n  return (\n    <div className=\"w-100 cf pb2\">\n      <div className=\"cf ph2 bg-white\">\n        <div className=\"w-10-l w-20-m w-100 fl\">\n          <h1\n            className=\"relative tc w-100 dib red barlow-condensed ma0 ph4 v-mid top--1\"\n            style={{ fontSize: '8rem' }}\n          >\n            {currentLevel.level}\n          </h1>\n        </div>\n        <div className=\"w-60-ns w-100 fl pl2-ns\">\n          {nextLevelThreshold && (\n            <ProgressBar height={2} className=\"pt3 mt4 bg-white\" secondBarValue={percent}>\n              <p className=\"f6 lh-copy ma0 white f7 fw4\">\n                <FormattedMessage\n                  {...messages.levelTooltip}\n                  values={{\n                    n: <FormattedNumber value={completedActions} />,\n                    total: <FormattedNumber value={nextLevelThreshold} />,\n                    percent: percent,\n                    nextLevel: <strong>{currentLevel.level + 1}</strong>,\n                  }}\n                />\n              </p>\n            </ProgressBar>\n          )}\n        </div>\n        <div className=\"w-100 fl mt3\">\n          {nextLevelThreshold && (\n            <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n              <div className=\"cf pa3 bg-white shadow-4\">\n                <StatsCardContent\n                  label={\n                    <FormattedMessage {...messages.estimatedLevel} values={{ year: currentYear }} />\n                  }\n                  className=\"tc\"\n                  value={<FormattedNumber value={levelPrediction.level} />}\n                />\n              </div>\n            </div>\n          )}\n          {nextLevelThreshold && (\n            <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n              <div className=\"cf pa3 bg-white shadow-4\">\n                <StatsCardContent\n                  label={\n                    <FormattedMessage\n                      {...messages.actionsToNextLevel}\n                      values={{ n: currentLevel.level + 1 }}\n                    />\n                  }\n                  className=\"tc\"\n                  value={<FormattedNumber value={nextLevelThreshold - completedActions} />}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n        {!nextLevelThreshold && ( // message on level 5 organisations\n          <div className=\"w-100 fl pv2\">\n            <div>\n              <FormattedMessage\n                {...messages.levelInfo}\n                values={{\n                  org: <strong>{orgName}</strong>,\n                  level: currentLevel.level,\n                }}\n              />{' '}\n              <FormattedMessage {...messages.topLevelInfo} />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// this component is designed to the DISCOUNTED and FULL_FEE organisations\nexport function OrganisationTier({ completedActions, type, subscriptionTier }) {\n  const yearPrediction = usePredictYearlyTasks(completedActions, new Date());\n  const levelPrediction = usePredictLevel(yearPrediction, type);\n  const selectedTier = subscriptionTier\n    ? levels.filter((level) => level.level === subscriptionTier)[0]\n    : null;\n  const selectedTierMax =\n    selectedTier && selectedTier.level < 5\n      ? levels.filter((level) => level.level === selectedTier.level + 1)[0].minActions\n      : null;\n  const nextLevel = useGetLevel(selectedTierMax);\n  const percent = parseInt((completedActions / selectedTierMax) * 100);\n  const showDiscountLabel = levelPrediction.tier !== 'free' && type === 'DISCOUNTED';\n  const currentYear = getYear(new Date());\n\n  return (\n    <div className=\"w-100 cf pb2\">\n      <div className=\"cf ph2 bg-white\">\n        <div className=\"w-20-l w-third-m w-100 fl tc\">\n          <h1 className=\"relative f1 tc w-100 dib ttu red barlow-condensed ma0 pt2 mt3\">\n            {selectedTier && <FormattedMessage {...messages[`${selectedTier.tier}Tier`]} />}\n          </h1>\n          <span className={`ma0 h2 f7 b blue-grey`}>\n            <FormattedMessage {...messages.subscribedTier} />\n          </span>\n        </div>\n        <div className=\"w-50-l w-two-thirds-m w-100 fl pl2-ns\">\n          {selectedTierMax && (\n            <ProgressBar height={2} className=\"pt1 mt4 bg-white\" secondBarValue={percent}>\n              <p className=\"f6 lh-copy ma0 white f7 fw4\">\n                <FormattedMessage\n                  {...messages.tierTooltip}\n                  values={{\n                    n: <FormattedNumber value={completedActions} />,\n                    total: <FormattedNumber value={selectedTierMax} />,\n                    percent: percent,\n                    nextTier: (\n                      <strong>\n                        <FormattedMessage {...messages[`${nextLevel.tier}Tier`]} />\n                      </strong>\n                    ),\n                  }}\n                />\n              </p>\n            </ProgressBar>\n          )}\n        </div>\n        <div className=\"w-100 fl mt3\">\n          <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n            <div className=\"cf pa3 bg-white shadow-4\">\n              <StatsCardContent\n                label={\n                  <FormattedMessage {...messages.estimatedTier} values={{ year: currentYear }} />\n                }\n                className=\"tc\"\n                value={\n                  <span className=\"ttu\">\n                    <FormattedMessage {...messages[`${levelPrediction.tier}Tier`]} />\n                  </span>\n                }\n              />\n            </div>\n          </div>\n          <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n            <div className=\"cf pa3 bg-white shadow-4\">\n              <StatsCardContent\n                label={\n                  <FormattedMessage {...messages.estimatedCost} values={{ year: currentYear }} />\n                }\n                className=\"tc\"\n                value={\n                  <>\n                    <FormattedNumber\n                      value={levelPrediction.fee}\n                      // eslint-disable-next-line\n                      style=\"currency\"\n                      currency=\"USD\"\n                    />\n                    {showDiscountLabel ? (\n                      <span className=\"f4 ttl\">\n                        {' '}\n                        (<FormattedMessage {...messages.discounted} />)\n                      </span>\n                    ) : (\n                      ''\n                    )}\n                  </>\n                }\n              />\n            </div>\n          </div>\n          {selectedTierMax && (\n            <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n              <div className=\"cf pa3 bg-white shadow-4\">\n                <StatsCardContent\n                  label={\n                    <FormattedMessage\n                      {...messages.actionsRemaining}\n                      values={{\n                        name: <FormattedMessage {...messages[`${selectedTier.tier}Tier`]} />,\n                      }}\n                    />\n                  }\n                  className=\"tc\"\n                  value={\n                    <FormattedNumber\n                      value={\n                        completedActions < selectedTierMax ? selectedTierMax - completedActions : 0\n                      }\n                    />\n                  }\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { setDayOfYear, format } from 'date-fns';\nimport { FormattedMessage } from 'react-intl';\n\nimport statusMessages from '../projectEdit/messages';\nimport messages from './messages';\nimport { BarChartItem } from '../userDetail/barListChart';\nimport { compareByPropertyDescending } from '../../utils/sorting';\n\nexport const OrganisationProjectStats = ({ projects, orgName }) => {\n  const totalProjects = projects ? projects.draft + projects.published + projects.archived : 0;\n  const firstDayOfYear = format(setDayOfYear(new Date(), 1), 'yyyy-MM-dd');\n  const chartItems = [\n    {\n      name: <FormattedMessage {...statusMessages.statusPUBLISHED} />,\n      value: projects ? projects.published : 0,\n      link: `/manage/projects/?managedByMe=1&status=PUBLISHED&organisation=${orgName}`,\n    },\n    {\n      name: <FormattedMessage {...statusMessages.statusDRAFT} />,\n      value: projects ? projects.draft : 0,\n      link: `/manage/projects/?status=DRAFT&organisation=${orgName}`,\n    },\n    {\n      name: <FormattedMessage {...messages.stale} />,\n      value: projects ? projects.stale : 0,\n      link: `/manage/projects/?stale=1&organisation=${orgName}`,\n    },\n    {\n      name: <FormattedMessage {...messages.createdThisYear} />,\n      value: projects ? projects.recent : 0,\n      link: `/manage/projects/?createdFrom=${firstDayOfYear}&status=ARCHIVED,PUBLISHED&organisation=${orgName}`,\n    },\n  ];\n  const stats = chartItems.sort((a, b) => compareByPropertyDescending(a, b, 'value'));\n\n  return (\n    <div className=\"pv2 ph3 bg-white blue-dark shadow-4\">\n      {projects && (\n        <>\n          <h3 className=\"f4 mv0 fw6 pt3\">\n            <FormattedMessage {...messages.projectsCreated} values={{ number: totalProjects }} />\n          </h3>\n          <ol className=\"pa0 mt1 mb2\">\n            {stats.map((item, n) => (\n              <BarChartItem\n                key={n}\n                name={item.name}\n                link={item.link}\n                percentValue={item.value / stats[0].value}\n                number={\n                  <FormattedMessage\n                    {...messages.numberOfProjects}\n                    values={{ number: item.value }}\n                  />\n                }\n              />\n            ))}\n          </ol>\n        </>\n      )}\n    </div>\n  );\n};\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * const result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { useTasksStatsQueryParams, useTasksStatsQueryAPI } from '../hooks/UseTasksStatsQueryAPI';\nimport { useTotalTasksStats } from '../hooks/UseTotalTasksStats';\nimport { useCurrentYearStats } from '../hooks/UseOrgYearStats';\nimport { useFetch } from '../hooks/UseFetch';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { RemainingTasksStats } from '../components/teamsAndOrgs/remainingTasksStats';\nimport { OrganisationUsageLevel, OrganisationTier } from '../components/teamsAndOrgs/orgUsageLevel';\nimport { TasksStats } from '../components/teamsAndOrgs/tasksStats';\nimport { OrganisationProjectStats } from '../components/teamsAndOrgs/organisationProjectStats';\n\nexport const OrganisationStats = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const token = useSelector((state) => state.auth.token);\n  const isOrgManager = useSelector(\n    (state) =>\n      state.auth.userDetails.role === 'ADMIN' || state.auth.organisations?.includes(Number(id)),\n  );\n  const [query, setQuery] = useTasksStatsQueryParams();\n\n  const [apiState, fetchTasksStatistics] = useTasksStatsQueryAPI(\n    { taskStats: [] },\n    query,\n    `organisationId=${id}`,\n  );\n  const [error, loading, organisation] = useFetch(`organisations/${id}/?omitManagerList=true`, id);\n  const [errorOrgStats, loadingOrgStats, orgStats] = useFetch(\n    `organisations/${id}/statistics/`,\n    id,\n  );\n  const currentYearStats = useCurrentYearStats(id, query, apiState.stats);\n  const totalStats = useTotalTasksStats(currentYearStats);\n  const completedActions = totalStats.mapped + totalStats.validated;\n  const showTierInfo =\n    ['DISCOUNTED', 'FULL_FEE'].includes(organisation.type) &&\n    organisation.subscriptionTier &&\n    isOrgManager;\n  useSetTitleTag(`${organisation.name || 'Organization'} stats`);\n\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  if (token) {\n    return (\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        rows={26}\n        ready={!error && !loading}\n        className=\"pv3 ph2 ph4-ns\"\n      >\n        <div className=\"w-100 cf pv3 ph2 ph4-ns bg-white blue-dark\">\n          <img src={organisation.logo} className=\"w3 dib v-mid mr3\" alt={organisation.name} />\n          <h3 className=\"f2 fw6 mv2 ttu barlow-condensed blue-dark dib v-mid\">\n            {organisation.name}\n          </h3>\n          <div className=\"w-100 fl cf\">\n            <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb3\">\n              <FormattedMessage {...messages.tasksStatistics} />\n            </h4>\n            <TasksStats\n              query={query}\n              setQuery={setQuery}\n              stats={apiState.stats}\n              error={apiState.isError}\n              loading={apiState.isLoading}\n              retryFn={fetchTasksStatistics}\n            />\n          </div>\n          <div className=\"w-100 fl cf\">\n            <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb2\">\n              <FormattedMessage {...messages.remainingTasks} />\n            </h4>\n            <ReactPlaceholder\n              showLoadingAnimation={true}\n              rows={5}\n              delay={500}\n              ready={!errorOrgStats && !loadingOrgStats}\n            >\n              <RemainingTasksStats tasks={orgStats && orgStats.activeTasks} />\n            </ReactPlaceholder>\n          </div>\n          <div className=\"w-100 fl cf\">\n            <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb2\">\n              {showTierInfo ? (\n                <FormattedMessage {...messages.tier} />\n              ) : (\n                <FormattedMessage {...messages.usageLevel} />\n              )}\n            </h4>\n            <ReactPlaceholder showLoadingAnimation={true} rows={5} delay={500} ready={totalStats}>\n              {showTierInfo ? (\n                <OrganisationTier\n                  type={organisation.type}\n                  subscriptionTier={organisation.subscriptionTier}\n                  completedActions={completedActions}\n                />\n              ) : (\n                <OrganisationUsageLevel\n                  orgName={organisation.name}\n                  completedActions={completedActions}\n                />\n              )}\n            </ReactPlaceholder>\n          </div>\n          <div className=\"w-40-l w-100 fl cf\">\n            <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb2\">\n              <FormattedMessage {...messages.orgProjectStats} />\n            </h4>\n            <div className=\"pa2\">\n              <OrganisationProjectStats\n                projects={orgStats && orgStats.projects}\n                orgName={organisation.name}\n              />\n            </div>\n          </div>\n        </div>\n      </ReactPlaceholder>\n    );\n  } else {\n    return null;\n  }\n};\n"],"sourceRoot":""}