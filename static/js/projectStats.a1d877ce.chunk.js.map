{"version":3,"sources":["components/alert/index.js","components/projectDetail/messages.js","components/projectCard/messages.js","hooks/UsePermissions.js","components/userDetail/messages.js","components/projectCard/priorityBox.js","components/projectDetail/statusBox.js","components/statsCard.js","api/projects.js","components/statsTimestamp/messages.js","components/statsTimestamp/index.js","components/projectDetail/visibilityBox.js","components/projectDetail/header.js","hooks/UseProjectCompletenessCalc.js","components/projectStats/messages.js","components/userDetail/elementsMapped.js","utils/defaultChangesetComment.js","api/stats.js","components/projectStats/timeStats.js","components/projectStats/completion.js","components/projectStats/edits.js","views/projectStats.js"],"names":["Alert","_ref","type","compact","inline","iconClassName","children","Icon","info","InfoIcon","success","CheckIcon","warning","AlertIcon","error","BanIcon","_jsxs","className","concat","_jsx","EntityError","_ref2","entity","action","messageType","FormattedMessage","messages","values","defineMessages","noProjectTeams","id","defaultMessage","coordination","projectCoordination","createdBy","noProjectContributors","projectTotalContributors","projectLastContribution","percentMapped","percentValidated","projectPriorityURGENT","projectPriorityHIGH","projectPriorityMEDIUM","projectPriorityLOW","dueDateRelativeRemainingDays","typesOfMapping","private","editProject","editor","selectEditor","tasks","instructions","imagery","customTMSLayer","customWMSLayer","customWMTSLayer","contribute","readMore","readLess","addToFavorites","removeFromFavorites","noComments","loginTocomment","errorLoadingComments","post","share","team","validationTeam","teamsAndPermissions","author","whoCanMap","whoCanValidate","zoomToTasks","selectATaskCardTitle","mapThroughOSMCardTitle","submitYourWorkCardTitle","selectATaskCardDescription","mapThroughOSMCardDescription","submitYourWorkCardDescription","overview","dueDateTooltip","description","questionsAndComments","contributions","contributionsTimeline","downloadOsmData","errorDownloadOsmData","errorDownloadOsmDataDescription","viewInOsmcha","changesets","contributors","similarProjects","contributorsError","timelineNotAvailable","status_DRAFT","status_ARCHIVED","status_PUBLISHED","permissions_ANY","permissions_LEVEL","permissions_TEAMS","permissions_TEAMS_LEVEL","downloadProjectAOI","downloadTaskGrid","moreStats","mappedTasks","validatedTasks","shareMessage","postOnFacebook","shareOnLinkedIn","inaccessibleProjectTitle","inaccessibleProjectDescription","exploreOtherProjects","noSimilarProjectsFound","percentBadImagery","priorityDescriptionURGENT","priorityDescriptionHIGH","priorityDescriptionMEDIUM","priorityDescriptionLOW","projectPage","projectTasks","noDueDate","dueDateExpired","useEditProjectAllowed","project","userDetails","useSelector","state","auth","organisations","pmTeams","isAllowed","setIsAllowed","useState","useEffect","role","username","includes","organisation","teams","filter","map","teamId","some","item","useEditTeamAllowed","organisation_id","members","managers","member","active","function","useEditOrgAllowed","org","organisationId","i","loading","contributionTimelineTitle","projectsTitle","countries","timeSpentMapping","buildingsMapped","roadMapped","poiMapped","waterwaysMapped","userMapped","you","userValidated","invalidated","validated","finished","topProjectsMappedTitle","noTopProjectsData","topCausesTitle","others","noProjectsData","editsTitle","noEditsData","topCountriesTitle","heatmapNoContribution","heatmapContribution","heatmapContributions","heatmapLegendMore","heatmapLegendLess","userOrganisationsError","PriorityBox","priority","extraClasses","showIcon","color","msg","title","ClockIcon","style","height","ProjectStatusBox","status","colour","StatsCard","icon","value","invertColors","StatsCardContent","Number","FormattedNumber","Math","trunc","label","useProjectsQuery","fullProjectsQuery","token","locale","preferences","useQuery","queryKey","queryFn","signal","fetchProjects","paramsRemapped","remapParamsToAPI","backendToQueryConversion","undefined","lastUpdatedTo","format","subMonths","Date","now","api","get","params","then","res","data","keepPreviousData","useProjectQuery","projectId","useProjectSummaryQuery","otherOptions","arguments","length","_ref3","select","useProjectContributionsQuery","_ref4","userContributions","useActivitiesQuery","_ref5","refetchIntervalInBackground","refetchInterval","refetchOnWindowFocus","useErrorBoundary","useTasksQuery","_ref6","usePriorityAreasQuery","_ref7","fetchProjectPriorityArea","useProjectTimelineQuery","_ref8","fetchTimelineData","stats","useTaskDetail","taskId","shouldRefetch","_ref9","enabled","stopMapping","comment","splitTask","submitMappingTask","url","payload","stopValidation","submitValidationTask","difficulty","campaign","location","types","exactTypes","interests","text","page","orderBy","orderByType","createdByMe","managedByMe","favoritedByMe","mappedByMe","stale","createdFrom","basedOnMyInterests","generic","StatsTimestamp","intl","useIntl","lastUpdated","setLastUpdated","fetchExternalJSONAPI","OHSOME_STATS_BASE_URL","result","max_timestamp","catch","console","formatMessage","formattedDate","formatDate","year","month","day","hour","minute","timeZone","ReactTooltip","place","effect","ProjectVisibilityBox","LockIcon","width","HeaderLine","showEditLink","projectIdLink","Link","to","EditButton","ProjectHeader","userCanEditProject","_Fragment","projectPriority","organisationName","lang","projectInfo","name","TagLine","campaigns","countryTag","translateCountry","tags","join","interest","n","tag","index","useComputeCompleteness","setPercentMapped","setPercentValidated","setPercentBadImagery","features","totalTasks","mapped","task","properties","taskStatus","getStatusCount","badImagery","parseInt","useTasksByStatus","setStats","ready","lockedForMapping","lockedForValidation","projectStatsTitle","projectStatsError","averageMappingTime","averageValidationTime","timeToFinishMapping","timeToFinishValidating","tasksToMap","tasksToValidate","totalContributors","usersExperience","usersLevel","mappers","validators","lessThan1MonthExp","lessThan3MonthExp","lessThan6MonthExp","lessThan12MonthExp","moreThan1YearExp","totalEdits","edits","TaskStats","userStats","tasksMapped","tasksValidatedByOthers","tasksInvalidatedByOthers","tasksValidated","tasksInvalidated","taskStats","MappedIcon","items","ValidatedIcon","stat","letterSpacing","user","shortEnglishHumanizer","humanizeDuration","humanizer","language","languages","shortEn","y","mo","w","d","h","m","s","ms","ElementsMapped","osmStats","duration","round","delimiter","units","spacer","iconClass","iconStyle","HomeIcon","buildings","RoadIcon","roads","MarkerIcon","total_poi_count_add","WavesIcon","total_waterway_km_add","retrieveDefaultChangesetComment","changesetComment","regex","RegExp","TM_DEFAULT_CHANGESET_COMMENT","split","c","match","useSystemStatisticsQuery","useProjectStatisticsQuery","useOsmStatsQuery","useOsmHashtagStatsQuery","defaultComment","replace","Boolean","StatsRow","options","t","indexOf","StatsCards","TimeStats","ReactPlaceholder","showLoadingAnimation","rows","CompletionStats","tasksByStatus","EditsStats","projectMessages","field","MappingIcon","EditIcon","userDetailMessages","ContributorsStats","React","lazy","TasksByStatus","ProjectTimeline","ProjectStats","useParams","useSetTitleTag","projectStatus","tasksStatus","contributionsStatus","timelineData","timelineDataStatus","editsStatus","delay","tasksStatsError","Suspense","fallback","editsStatsError","contributionsStatsError","projectTimeline","timelineDataError","tasksByDay"],"mappings":"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","file":"static/js/projectStats.a1d877ce.chunk.js","sourcesContent":["import { FormattedMessage } from 'react-intl';\n\nimport { BanIcon, CheckIcon, InfoIcon, AlertIcon } from '../svgIcons';\nimport messages from '../../views/messages';\n\nexport const Alert = ({\n  type = 'info',\n  compact = false,\n  inline = false,\n  iconClassName,\n  children,\n}) => {\n  const icons = {\n    info: InfoIcon,\n    success: CheckIcon,\n    warning: AlertIcon,\n    error: BanIcon,\n  };\n  const Icon = icons[type];\n\n  const color = {\n    info: 'b--blue bg-lightest-blue',\n    success: 'b--dark-green bg-washed-green',\n    warning: 'b--gold bg-washed-yellow',\n    error: 'b--dark-red bg-washed-red',\n  };\n  const iconColor = {\n    info: 'blue',\n    success: 'dark-green',\n    warning: 'gold',\n    error: 'dark-red',\n  };\n\n  return (\n    <div\n      className={`${inline ? 'di' : 'db'} blue-dark bl bw2 br2 ${compact ? 'pa2' : 'pa3'} ${\n        color[type]\n      }`}\n    >\n      <Icon className={`h1 w1 v-top mr2 ${iconColor[type]} ${iconClassName || ''}`} />\n      {children}\n    </div>\n  );\n};\n\nexport function EntityError({ entity, action = 'creation' }) {\n  const messageType = action === 'updation' ? 'entityInfoUpdationFailure' : 'entityCreationFailure';\n\n  return (\n    <Alert type=\"error\">\n      <FormattedMessage\n        {...messages[messageType]}\n        values={{\n          entity: entity,\n        }}\n      />\n    </Alert>\n  );\n}\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on project cards.\n */\nexport default defineMessages({\n  noProjectTeams: {\n    id: 'project.detail.teams.empty',\n    defaultMessage: \"This project doesn't have any teams associated with.\",\n  },\n  coordination: {\n    id: 'project.detail.coordination',\n    defaultMessage: 'Coordination',\n  },\n  projectCoordination: {\n    id: 'project.detail.coordination.description',\n    defaultMessage: 'This project is coordinated by {organisation} and was created by {user}.',\n  },\n  createdBy: {\n    id: 'project.detail.createdBy',\n    defaultMessage: 'Project created by {user}.',\n  },\n  noProjectContributors: {\n    id: 'project.detail.contributorCount.zero',\n    defaultMessage: 'No contributors yet',\n  },\n  projectTotalContributors: {\n    id: 'project.detail.contributorCount',\n    defaultMessage: '{number, plural, one {<b>#</b> contributor} other {<b>#</b> contributors}}',\n  },\n  projectLastContribution: {\n    id: 'project.detail.lastContribution',\n    defaultMessage: 'Last contribution',\n  },\n  percentMapped: {\n    id: 'project.detail.percentMapped',\n    defaultMessage: 'Mapped',\n  },\n  percentValidated: {\n    id: 'project.detail.percentValidated',\n    defaultMessage: 'Validated',\n  },\n  projectPriorityURGENT: {\n    id: 'project.detail.projectPriorityUrgent',\n    defaultMessage: 'Urgent',\n  },\n  projectPriorityHIGH: {\n    id: 'project.detail.projectPriorityHigh',\n    defaultMessage: 'High',\n  },\n  projectPriorityMEDIUM: {\n    id: 'project.detail.projectPriorityMedium',\n    defaultMessage: 'Medium',\n  },\n  projectPriorityLOW: {\n    id: 'project.detail.projectPriorityLow',\n    defaultMessage: 'Low',\n  },\n  dueDateRelativeRemainingDays: {\n    id: 'project.detail.dueDateLeft',\n    defaultMessage: '{daysLeftHumanize} left',\n  },\n  typesOfMapping: {\n    id: 'project.detail.typesOfMapping',\n    defaultMessage: 'Types of Mapping',\n  },\n  private: {\n    id: 'project.detail.private',\n    defaultMessage: 'Private',\n  },\n  editProject: {\n    id: 'project.detail.editProject',\n    defaultMessage: 'Edit project',\n  },\n  editor: {\n    id: 'project.detail.editor',\n    defaultMessage: 'Editor',\n  },\n  selectEditor: {\n    id: 'project.detail.editor.select',\n    defaultMessage: 'Select editor',\n  },\n  tasks: {\n    id: 'project.detail.tasks',\n    defaultMessage: 'Tasks',\n  },\n  instructions: {\n    id: 'project.detail.instructions',\n    defaultMessage: 'Instructions',\n  },\n  imagery: {\n    id: 'project.detail.imagery',\n    defaultMessage: 'Imagery',\n  },\n  customTMSLayer: {\n    id: 'project.detail.imagery.tms',\n    defaultMessage: 'Custom TMS Layer',\n  },\n  customWMSLayer: {\n    id: 'project.detail.imagery.wms',\n    defaultMessage: 'Custom WMS Layer',\n  },\n  customWMTSLayer: {\n    id: 'project.detail.imagery.wmts',\n    defaultMessage: 'Custom WMTS Layer',\n  },\n  contribute: {\n    id: 'project.selectTask.footer.button.contribute',\n    defaultMessage: 'Contribute',\n  },\n  readMore: {\n    id: 'project.readMoreButton',\n    defaultMessage: 'Read more',\n  },\n  readLess: {\n    id: 'project.readLessButton',\n    defaultMessage: 'Read less',\n  },\n  addToFavorites: {\n    id: 'project.detail.addToFavorites',\n    defaultMessage: 'Add to Favorites',\n  },\n  removeFromFavorites: {\n    id: 'project.detail.removeFromFavorites',\n    defaultMessage: 'Remove from Favorites',\n  },\n  noComments: {\n    id: 'project.detail.questionsAndComments.none',\n    defaultMessage:\n      'There are currently no questions or comments on this project. Be the first to post one!',\n  },\n  loginTocomment: {\n    id: 'project.detail.questionsAndComments.login',\n    defaultMessage: 'Log in to be able to post comments.',\n  },\n  errorLoadingComments: {\n    id: 'project.detail.questionsAndComments.fetching.error',\n    defaultMessage: 'An error occured while loading questions and comments.',\n  },\n  post: {\n    id: 'project.detail.questionsAndComments.button',\n    defaultMessage: 'Post',\n  },\n  share: {\n    id: 'project.detail.share',\n    defaultMessage: 'Share',\n  },\n  team: {\n    id: 'project.detail.team',\n    defaultMessage: 'Team',\n  },\n  validationTeam: {\n    id: 'project.detail.validation_team',\n    defaultMessage: 'Validation team',\n  },\n  teamsAndPermissions: {\n    id: 'project.detail.teams_permissions',\n    defaultMessage: 'Teams & Permissions',\n  },\n  author: {\n    id: 'project.detail.author',\n    defaultMessage: 'Author',\n  },\n  whoCanMap: {\n    id: 'project.detail.mapping_permissions',\n    defaultMessage: 'Who can map?',\n  },\n  whoCanValidate: {\n    id: 'project.detail.validation_permissions',\n    defaultMessage: 'Who can validate?',\n  },\n  zoomToTasks: {\n    id: 'project.detail.zoomToTasks',\n    defaultMessage: 'Zoom to tasks',\n  },\n  selectATaskCardTitle: {\n    id: 'project.detail.cards.selectATask.title',\n    defaultMessage: '1. Select a task',\n  },\n  mapThroughOSMCardTitle: {\n    id: 'project.detail.cards.mapthroughosm.title',\n    defaultMessage: '2. Map with OpenStreetMap',\n  },\n  submitYourWorkCardTitle: {\n    id: 'project.detail.cards.submityourwork.title',\n    defaultMessage: '3. Submit your work',\n  },\n  selectATaskCardDescription: {\n    id: 'project.detail.cards.selectATask.description',\n    defaultMessage:\n      'Projects are divided into sets of smaller tasks and adapted to fit your skill level.',\n  },\n  mapThroughOSMCardDescription: {\n    id: 'project.detail.cards.mapthroughosm.description',\n    defaultMessage:\n      'If you are new to mapping, we recommend checking the Learn page for instructions before you begin.',\n  },\n  submitYourWorkCardDescription: {\n    id: 'project.detail.cards.submityourwork.description',\n    defaultMessage: 'Submitting your work is crucial to make sure your data is saved.',\n  },\n  overview: {\n    id: 'project.detail.sections.overview',\n    defaultMessage: 'Overview',\n  },\n  dueDateTooltip: {\n    id: 'project.detail.sections.overview.dueDate',\n    defaultMessage: 'Ideal date to complete the project',\n  },\n  description: {\n    id: 'project.detail.sections.description',\n    defaultMessage: 'Description',\n  },\n  questionsAndComments: {\n    id: 'project.detail.sections.questionsAndComments',\n    defaultMessage: 'Questions and comments',\n  },\n  contributions: {\n    id: 'project.detail.sections.contributions',\n    defaultMessage: 'Contributions',\n  },\n  contributionsTimeline: {\n    id: 'project.detail.sections.contributionsTimeline',\n    defaultMessage: 'Contributions timeline',\n  },\n  downloadOsmData: {\n    id: 'project.detail.sections.downloadOsmData',\n    defaultMessage: 'Download OSM Data',\n  },\n  errorDownloadOsmData: {\n    id: 'project.detail.sections.errorDownloadOsmData',\n    defaultMessage: 'Data Extraction Unavailable',\n  },\n  errorDownloadOsmDataDescription: {\n    id: 'project.detail.sections.errorDownloadOsmDataDescription',\n    defaultMessage:\n      'The data extract you are attempting to download is currently inactive or unavailable. Please ensure that the extract is active and try again later.',\n  },\n  viewInOsmcha: {\n    id: 'project.detail.sections.contributions.osmcha',\n    defaultMessage: 'Changesets in OSMCha',\n  },\n  changesets: {\n    id: 'project.detail.sections.contributions.changesets',\n    defaultMessage: 'Changesets',\n  },\n  contributors: {\n    id: 'project.detail.sections.contributors',\n    defaultMessage: 'Contributors',\n  },\n  similarProjects: {\n    id: 'project.detail.sections.similarProjects',\n    defaultMessage: 'Similar projects',\n  },\n  contributorsError: {\n    id: 'project.detail.sections.contributors.error',\n    defaultMessage: 'An error occured while loading contributors',\n  },\n  timelineNotAvailable: {\n    id: 'project.detail.sections.contributions.timelineError',\n    defaultMessage: 'A timeline is going to be available after the first task has been mapped.',\n  },\n  status_DRAFT: {\n    id: 'project.status.draft',\n    defaultMessage: 'Draft',\n  },\n  status_ARCHIVED: {\n    id: 'project.status.archived',\n    defaultMessage: 'Archived',\n  },\n  status_PUBLISHED: {\n    id: 'project.status.published',\n    defaultMessage: 'Published',\n  },\n  permissions_ANY: {\n    id: 'project.permissions.any',\n    defaultMessage: 'All users',\n  },\n  permissions_LEVEL: {\n    id: 'project.permissions.level',\n    defaultMessage: 'Users with intermediate or advanced level',\n  },\n  permissions_TEAMS: {\n    id: 'project.permissions.teams',\n    defaultMessage: '{team} members',\n  },\n  permissions_TEAMS_LEVEL: {\n    id: 'project.permissions.teamsAndLevel',\n    defaultMessage: 'Intermediate and advanced {team} members',\n  },\n  downloadProjectAOI: {\n    id: 'projects.data.download.aoi',\n    defaultMessage: 'Download AOI',\n  },\n  downloadTaskGrid: {\n    id: 'projects.data.download.taskGrid',\n    defaultMessage: 'Download Tasks Grid',\n  },\n  moreStats: {\n    id: 'projects.link.stats',\n    defaultMessage: 'More statistics',\n  },\n  mappedTasks: {\n    id: 'projects.stats.mapped',\n    defaultMessage: 'Mapped tasks',\n  },\n  validatedTasks: {\n    id: 'projects.stats.validated',\n    defaultMessage: 'Validated tasks',\n  },\n  shareMessage: {\n    id: 'project.share.twitter',\n    defaultMessage: 'Contribute mapping the project #{id} on {site}',\n  },\n  postOnFacebook: {\n    id: 'project.share.facebook',\n    defaultMessage: 'Post on Facebook',\n  },\n  shareOnLinkedIn: {\n    id: 'project.share.linkedin',\n    defaultMessage: 'Share on LinkedIn',\n  },\n  inaccessibleProjectTitle: {\n    id: 'project.inaccessible.title',\n    defaultMessage: \"You don't have permission to access this project\",\n  },\n  inaccessibleProjectDescription: {\n    id: 'project.inaccessible.description',\n    defaultMessage: 'Please contact the project manager to request access.',\n  },\n  exploreOtherProjects: {\n    id: 'project.inaccessible.exploreOtherProjects',\n    defaultMessage: 'Explore other projects',\n  },\n  noSimilarProjectsFound: {\n    id: 'project.noSimilarProjectsFound',\n    defaultMessage: 'Could not find any similar projects for this project',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on project cards.\n */\nexport default defineMessages({\n  projectTotalContributors: {\n    id: 'project.card.contributorCount',\n    defaultMessage: '{number} total contributors',\n  },\n  projectLastContribution: {\n    id: 'project.card.lastContribution',\n    defaultMessage: 'Last contribution',\n  },\n  percentMapped: {\n    id: 'project.card.percentMapped',\n    defaultMessage: '{n}% mapped',\n  },\n  percentValidated: {\n    id: 'project.card.percentValidated',\n    defaultMessage: '{n}% validated',\n  },\n  percentBadImagery: {\n    id: 'project.card.percentBadImagery',\n    defaultMessage: '{n}% bad imagery',\n  },\n  projectPriorityURGENT: {\n    id: 'project.card.projectPriorityUrgent',\n    defaultMessage: 'Urgent',\n  },\n  projectPriorityHIGH: {\n    id: 'project.card.projectPriorityHigh',\n    defaultMessage: 'High',\n  },\n  projectPriorityMEDIUM: {\n    id: 'project.card.projectPriorityMedium',\n    defaultMessage: 'Medium',\n  },\n  projectPriorityLOW: {\n    id: 'project.card.projectPriorityLow',\n    defaultMessage: 'Low',\n  },\n  priorityDescriptionURGENT: {\n    id: 'project.card.projectPriorityUrgent.description',\n    defaultMessage: 'Urgent priority',\n  },\n  priorityDescriptionHIGH: {\n    id: 'project.card.projectPriorityHigh.description',\n    defaultMessage: 'High priority',\n  },\n  priorityDescriptionMEDIUM: {\n    id: 'project.card.projectPriorityMedium.description',\n    defaultMessage: 'Medium priority',\n  },\n  priorityDescriptionLOW: {\n    id: 'project.card.projectPriorityLow.description',\n    defaultMessage: 'Low priority',\n  },\n  dueDateRelativeRemainingDays: {\n    id: 'project.card.dueDateLeft',\n    defaultMessage: '{daysLeftHumanize} left',\n  },\n  editProject: {\n    id: 'project.card.edit_project.button',\n    defaultMessage: 'Edit',\n  },\n  projectPage: {\n    id: 'project.card.project_page.button',\n    defaultMessage: 'Project Page',\n  },\n  projectTasks: {\n    id: 'project.card.project_tasks.button',\n    defaultMessage: 'Tasks',\n  },\n  noDueDate: {\n    id: 'project.detail.noDueDate',\n    defaultMessage: 'No due date specified',\n  },\n  dueDateExpired: {\n    id: 'project.detail.dueDateExpired',\n    defaultMessage: 'Due date expired',\n  },\n});\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport function useEditProjectAllowed(project) {\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const organisations = useSelector((state) => state.auth.organisations);\n  const pmTeams = useSelector((state) => state.auth.pmTeams);\n  const [isAllowed, setIsAllowed] = useState(false);\n\n  useEffect(() => {\n    // admin users can edit any project\n    if (userDetails.role === 'ADMIN') setIsAllowed(true);\n    // owners can edit their projects\n    // project and project.author check are needed to avoid `null === null` case while data is loading\n    if (project && project.author && userDetails.username === project.author) setIsAllowed(true);\n    // managers of the organisation related to the project can edit it\n    if (organisations && organisations.includes(project.organisation)) setIsAllowed(true);\n    // users that are member of a PROJECT_MANAGER team associated with the project can edit it\n    const teams = project.teams\n      ? project.teams.filter((team) => team.role === 'PROJECT_MANAGER').map((team) => team.teamId)\n      : [];\n    if (pmTeams && pmTeams.some((item) => teams.includes(item))) {\n      setIsAllowed(true);\n    }\n  }, [pmTeams, userDetails.role, userDetails.username, organisations, project]);\n  return [isAllowed];\n}\n\nexport function useEditTeamAllowed(team) {\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const organisations = useSelector((state) => state.auth.organisations);\n  const pmTeams = useSelector((state) => state.auth.pmTeams);\n  const [isAllowed, setIsAllowed] = useState(false);\n\n  useEffect(() => {\n    // admin users can edit any team\n    if (userDetails.role === 'ADMIN') setIsAllowed(true);\n    // managers of the organisation related to the team can edit it\n    if (organisations && organisations.includes(team.organisation_id)) setIsAllowed(true);\n    // team managers can edit it\n    // verify from the redux store\n    if (pmTeams && pmTeams.includes(team.teamId)) setIsAllowed(true);\n    // and verify based on the team members list\n    if (team.members) {\n      const managers = team.members\n        .filter((member) => member.active && member.function === 'MANAGER')\n        .map((member) => member.username);\n      if (userDetails.username && managers.includes(userDetails.username)) {\n        setIsAllowed(true);\n      }\n    }\n  }, [pmTeams, userDetails.role, userDetails.username, organisations, team]);\n  return [isAllowed];\n}\n\nexport function useEditOrgAllowed(org) {\n  const userDetails = useSelector((state) => state.auth.userDetails);\n  const organisations = useSelector((state) => state.auth.organisations);\n  const [isAllowed, setIsAllowed] = useState(false);\n\n  useEffect(() => {\n    // admin users can edit any organisation\n    if (userDetails.role === 'ADMIN') setIsAllowed(true);\n    // check if user is a organisation manager\n    // based on the redux store data\n    if (org && org.organisationId && organisations && organisations.includes(org.organisationId)) {\n      setIsAllowed(true);\n    }\n    // and based on the organisation data\n    if (org && org.managers && org.managers.map((i) => i.username).includes(userDetails.username)) {\n      setIsAllowed(true);\n    }\n  }, [org, organisations, userDetails.username, userDetails.role]);\n  return [isAllowed];\n}\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on user components.\n */\nexport default defineMessages({\n  loading: {\n    id: 'users.detail.loading',\n    defaultMessage: 'loading',\n  },\n  contributionTimelineTitle: {\n    id: 'users.detail.contributionTimelineTitle',\n    defaultMessage: 'Contribution Timeline',\n  },\n  projectsTitle: {\n    id: 'users.detail.projectsTitle',\n    defaultMessage: 'Projects',\n  },\n  countries: {\n    id: 'users.detail.countries',\n    defaultMessage: 'Countries',\n  },\n  timeSpentMapping: {\n    id: 'users.detail.timeSpentMapping',\n    defaultMessage: 'Time spent mapping',\n  },\n  buildingsMapped: {\n    id: 'users.detail.buildingsMapped',\n    defaultMessage: 'Buildings mapped',\n  },\n  roadMapped: {\n    id: 'users.detail.roadMapped',\n    defaultMessage: 'Km road mapped',\n  },\n  poiMapped: {\n    id: 'users.detail.poiMapped',\n    defaultMessage: 'Points of interests mapped',\n  },\n  waterwaysMapped: {\n    id: 'users.detail.waterwaysMapped',\n    defaultMessage: 'Km waterways mapped',\n  },\n  userMapped: {\n    id: 'users.detail.tasksMapped',\n    defaultMessage: '{user} mapped',\n  },\n  you: {\n    id: 'users.detail.you',\n    defaultMessage: 'You',\n  },\n  userValidated: {\n    id: 'users.detail.tasksValidated',\n    defaultMessage: '{user} validated',\n  },\n  invalidated: {\n    id: 'users.detail.invalidated',\n    defaultMessage: 'Needed more mapping',\n  },\n  validated: {\n    id: 'users.detail.validated',\n    defaultMessage: 'Validated',\n  },\n  finished: {\n    id: 'users.detail.finished',\n    defaultMessage: 'Finished',\n  },\n  topProjectsMappedTitle: {\n    id: 'users.detail.topProjectsMappedTitle',\n    defaultMessage: 'Top 5 projects contributed',\n  },\n  noTopProjectsData: {\n    id: 'users.detail.topProjectsMapped.error',\n    defaultMessage: 'No projects mapped until now.',\n  },\n  topCausesTitle: {\n    id: 'users.detail.topCausesTitle',\n    defaultMessage: 'Top causes contributed to',\n  },\n  others: {\n    id: 'users.detail.others',\n    defaultMessage: 'Others',\n  },\n  noProjectsData: {\n    id: 'users.detail.projects.noData',\n    defaultMessage: 'Information is not available because no projects were mapped until now.',\n  },\n  editsTitle: {\n    id: 'users.detail.editsTitle',\n    defaultMessage: 'Edits by numbers',\n  },\n  noEditsData: {\n    id: 'users.detail.edits.error',\n    defaultMessage:\n      'No data to show yet. OpenStreetMap edits stats are updated with a delay of one hour.',\n  },\n  topCountriesTitle: {\n    id: 'users.detail.topCountriesTitle',\n    defaultMessage: 'Top 5 countries most mapped',\n  },\n  tasks: {\n    id: 'users.detail.tasks',\n    defaultMessage: 'tasks',\n  },\n  heatmapNoContribution: {\n    id: 'users.detail.heatmapNoContribution',\n    defaultMessage: 'No contribution',\n  },\n  heatmapContribution: {\n    id: 'users.detail.heatmapContribution',\n    defaultMessage: 'contribution',\n  },\n  heatmapContributions: {\n    id: 'users.detail.heatmapContributions',\n    defaultMessage: 'contributions',\n  },\n  heatmapLegendMore: {\n    id: 'users.detail.heatmapLegendMore',\n    defaultMessage: 'more',\n  },\n  heatmapLegendLess: {\n    id: 'users.detail.heatmapLegendLess',\n    defaultMessage: 'less',\n  },\n  teams: {\n    id: 'users.detail.teams',\n    defaultMessage: 'Teams',\n  },\n  userOrganisationsError: {\n    id: 'users.header.organisations.error',\n    defaultMessage: \"Couldn't load organisations at this time\",\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { ClockIcon } from '../svgIcons';\n\nexport function PriorityBox({ priority, extraClasses, showIcon }: Object) {\n  let color = 'blue-grey b--blue-grey';\n  if (priority === 'URGENT') color = 'red b--red';\n  if (priority === 'HIGH') color = 'orange b--orange';\n\n  return (\n    <FormattedMessage {...messages[`priorityDescription${priority}`]}>\n      {(msg) => (\n        <div className={`tc br1 f8 ttu ba ${color} ${extraClasses}`} title={msg}>\n          {showIcon && <ClockIcon className={`${color} v-mid mr1`} style={{ height: '13px' }} />}\n          {priority ? (\n            <span className=\"v-mid fw5\">\n              <FormattedMessage {...messages[`projectPriority${priority}`]} />\n            </span>\n          ) : (\n            ''\n          )}\n        </div>\n      )}\n    </FormattedMessage>\n  );\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\n\nexport const ProjectStatusBox = ({ status, className }: Object) => {\n  const colour = status === 'DRAFT' ? 'orange' : 'blue-grey';\n  return (\n    <div className={`tc br1 f7 ttu ba b--${colour} ${colour} ${className}`}>\n      <FormattedMessage {...messages[`status_${status}`]} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedNumber } from 'react-intl';\n\nexport const StatsCard = ({ icon, description, value, className, invertColors = false }) => {\n  return (\n    <div\n      className={`cf pt3 pb3 ph3 br1 ${\n        invertColors ? 'bg-red white' : 'bg-white red shadow-6'\n      } flex items-center ${className || ''}`}\n    >\n      <div className=\"w-30 fl ml2\">{icon}</div>\n      <StatsCardContent\n        value={Number(value) || value === 0 ? <FormattedNumber value={Math.trunc(value)} /> : value}\n        label={description}\n        className=\"w-70 pt3-m mb1 fl\"\n        invertColors={invertColors}\n      />\n    </div>\n  );\n};\n\nexport const StatsCardContent = ({ value, label, className, invertColors = false }: Object) => (\n  <div className={className}>\n    <h3 className={`ma0 mb1 barlow-condensed f2 fw5 ${invertColors ? 'white' : 'red'}`}>{value}</h3>\n    <span className={`ma0 h2 f7 fw5 ${invertColors ? 'white' : 'blue-grey'}`}>{label}</span>\n  </div>\n);\n","import { subMonths, format } from 'date-fns';\nimport { useQuery } from '@tanstack/react-query';\nimport { useSelector } from 'react-redux';\n\nimport { remapParamsToAPI } from '../utils/remapParamsToAPI';\nimport api from './apiClient';\n\nexport const useProjectsQuery = (fullProjectsQuery, action) => {\n  const token = useSelector((state) => state.auth.token);\n  const locale = useSelector((state) => state.preferences['locale']);\n\n  const fetchProjects = (signal, queryKey) => {\n    const [, fullProjectsQuery, action] = queryKey;\n    const paramsRemapped = remapParamsToAPI(fullProjectsQuery, backendToQueryConversion);\n    // it's needed in order to query by action when the user goes to /explore page\n    if (paramsRemapped.action === undefined && action) {\n      paramsRemapped.action = action;\n    }\n\n    if (paramsRemapped.lastUpdatedTo) {\n      paramsRemapped.lastUpdatedTo = format(subMonths(Date.now(), 6), 'yyyy-MM-dd');\n    }\n\n    return api(token, locale)\n      .get('projects/', {\n        signal,\n        params: paramsRemapped,\n      })\n      .then((res) => res.data);\n  };\n\n  return useQuery({\n    queryKey: ['projects', fullProjectsQuery, action],\n    queryFn: ({ signal, queryKey }) => fetchProjects(signal, queryKey),\n    keepPreviousData: true,\n  });\n};\n\nexport const useProjectQuery = (projectId) => {\n  const token = useSelector((state) => state.auth.token);\n  const locale = useSelector((state) => state.preferences['locale']);\n  const fetchProject = ({ signal }) => {\n    return api(token, locale).get(`projects/${projectId}/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project', projectId],\n    queryFn: fetchProject,\n  });\n};\nexport const useProjectSummaryQuery = (projectId, otherOptions = {}) => {\n  const fetchProjectSummary = ({ signal }) => {\n    return api().get(`projects/${projectId}/queries/summary/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-summary', projectId],\n    queryFn: fetchProjectSummary,\n    select: (data) => data.data,\n    ...otherOptions,\n  });\n};\n\nexport const useProjectContributionsQuery = (projectId, otherOptions = {}) => {\n  const fetchProjectContributions = ({ signal }) => {\n    return api().get(`projects/${projectId}/contributions/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-contributions', projectId],\n    queryFn: fetchProjectContributions,\n    select: (data) => data.data.userContributions,\n    ...otherOptions,\n  });\n};\n\nexport const useActivitiesQuery = (projectId) => {\n  const ACTIVITIES_REFETCH_INTERVAL = 1000 * 60;\n  const fetchProjectActivities = ({ signal }) => {\n    return api().get(`projects/${projectId}/activities/latest/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-activities', projectId],\n    queryFn: fetchProjectActivities,\n    select: (data) => data.data,\n    refetchIntervalInBackground: false,\n    refetchInterval: ACTIVITIES_REFETCH_INTERVAL,\n    refetchOnWindowFocus: true,\n    useErrorBoundary: true,\n  });\n};\n\nexport const useTasksQuery = (projectId, otherOptions = {}) => {\n  const fetchProjectTasks = ({ signal }) => {\n    return api().get(`projects/${projectId}/tasks/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-tasks', projectId],\n    queryFn: fetchProjectTasks,\n    select: (data) => data.data,\n    ...otherOptions,\n  });\n};\n\nexport const usePriorityAreasQuery = (projectId) => {\n  const fetchProjectPriorityArea = (signal) => {\n    return api().get(`projects/${projectId}/queries/priority-areas/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-priority-area', projectId],\n    queryFn: ({ signal }) => fetchProjectPriorityArea(signal),\n    select: (data) => data.data,\n  });\n};\n\nexport const useProjectTimelineQuery = (projectId) => {\n  const fetchTimelineData = (signal) => {\n    return api().get(`projects/${projectId}/contributions/queries/day/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-timeline', projectId],\n    queryFn: ({ signal }) => fetchTimelineData(signal),\n    select: (data) => data.data.stats,\n  });\n};\n\nexport const useTaskDetail = (projectId, taskId, shouldRefetch) => {\n  const token = useSelector((state) => state.auth.token);\n\n  const fetchTaskDetail = ({ signal }) => {\n    return api(token).get(`projects/${projectId}/tasks/${taskId}/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['task-detail', projectId, taskId],\n    queryFn: fetchTaskDetail,\n    select: (data) => data.data,\n    enabled: !!(projectId && taskId),\n    refetchInterval: shouldRefetch ? 1000 * 60 : false,\n  });\n};\n\n// MAPPING\nexport const stopMapping = (projectId, taskId, comment, token, locale = 'en') => {\n  return api(token, locale).post(`projects/${projectId}/tasks/actions/stop-mapping/${taskId}/`, {\n    comment,\n  });\n};\n\nexport const splitTask = (projectId, taskId, token, locale) => {\n  return api(token, locale).post(`projects/${projectId}/tasks/actions/split/${taskId}/`);\n};\n\nexport const submitMappingTask = (url, payload, token, locale) => {\n  return api(token, locale).post(url, payload);\n};\n\n// VALIDATION\nexport const stopValidation = (projectId, payload, token, locale = 'en') => {\n  return api(token, locale).post(`projects/${projectId}/tasks/actions/stop-validation/`, payload);\n};\n\nexport const submitValidationTask = (projectId, payload, token, locale) => {\n  return api(token, locale).post(\n    `projects/${projectId}/tasks/actions/unlock-after-validation/`,\n    payload,\n  );\n};\n\nconst backendToQueryConversion = {\n  difficulty: 'difficulty',\n  campaign: 'campaign',\n  team: 'teamId',\n  organisation: 'organisationName',\n  location: 'country',\n  types: 'mappingTypes',\n  exactTypes: 'mappingTypesExact',\n  interests: 'interests',\n  text: 'textSearch',\n  page: 'page',\n  orderBy: 'orderBy',\n  orderByType: 'orderByType',\n  createdByMe: 'createdByMe',\n  managedByMe: 'managedByMe',\n  favoritedByMe: 'favoritedByMe',\n  mappedByMe: 'mappedByMe',\n  status: 'projectStatuses',\n  action: 'action',\n  stale: 'lastUpdatedTo',\n  createdFrom: 'createdFrom',\n  basedOnMyInterests: 'basedOnMyInterests',\n};\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  generic: {\n    id: 'stats.ohsome.timestamp.generic',\n    defaultMessage:\n      'These statistics come from ohsomeNow Stats and were last updated at {formattedDate} ({timeZone}). Missing fields will be made available soon!',\n  },\n  project: {\n    id: 'stats.ohsome.timestamp.project',\n    defaultMessage:\n      'These stats were retrieved using the default changeset comment of the project and were last updated at {formattedDate} ({timeZone}).',\n  },\n});\n","import { useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport ReactTooltip from 'react-tooltip';\n\nimport { fetchExternalJSONAPI } from '../../network/genericJSONRequest';\nimport { OHSOME_STATS_BASE_URL } from '../../config';\nimport { InfoIcon } from '../svgIcons';\nimport messages from './messages';\n\nfunction StatsTimestamp({ messageType }) {\n  const intl = useIntl();\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  useEffect(() => {\n    fetchExternalJSONAPI(`${OHSOME_STATS_BASE_URL}/metadata`)\n      .then((res) => {\n        setLastUpdated(res.result.max_timestamp);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n\n  return (\n    <div>\n      <InfoIcon\n        className=\"blue-grey h1 w1 v-mid ml2 pointer\"\n        data-tip={intl.formatMessage(messages[messageType], {\n          formattedDate: intl.formatDate(lastUpdated, dateOptions),\n          timeZone: intl.timeZone,\n        })}\n        data-for=\"ohsome-timestamp\"\n      />\n      <ReactTooltip id=\"ohsome-timestamp\" place=\"top\" className=\"mw6\" effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default StatsTimestamp;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { LockIcon } from '../svgIcons';\nimport messages from './messages';\n\nexport const ProjectVisibilityBox = ({ className }: Object) => {\n  return (\n    <div className={`tc br1 f7 ttu ba b--red red ${className}`}>\n      <LockIcon title=\"lock\" className=\"red v-mid mr1\" style={{ height: '13px', width: '13px' }} />\n      <FormattedMessage {...messages.private} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { PriorityBox } from '../projectCard/priorityBox';\nimport { translateCountry } from '../../utils/countries';\nimport { ProjectVisibilityBox } from './visibilityBox';\nimport { ProjectStatusBox } from './statusBox';\nimport { EditButton } from '../button';\nimport { useEditProjectAllowed } from '../../hooks/UsePermissions';\n\nexport function HeaderLine({ author, projectId, priority, showEditLink, organisation }: Object) {\n  const projectIdLink = (\n    <Link to={`/projects/${projectId}`} className=\"no-underline pointer\">\n      <span className=\"blue-light\">#{projectId}</span>\n    </Link>\n  );\n  return (\n    <div className=\"flex flex-column flex-row-ns justify-start justify-between-ns items-start items-center-ns flex-wrap\">\n      <div className=\"pv2\">\n        <span className=\"blue-light\">{projectIdLink}</span>\n        {organisation ? <span className=\"blue-dark\"> | {organisation}</span> : null}\n      </div>\n      <div className=\"tr\">\n        {showEditLink && (\n          <EditButton url={`/manage/projects/${projectId}`} className=\"mh0 mv0\">\n            <FormattedMessage {...messages.editProject} />\n          </EditButton>\n        )}\n        {priority && (\n          <div className=\"mw4 dib\">\n            <PriorityBox priority={priority} extraClasses={'pv2 ph3 ml2'} showIcon />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const ProjectHeader = ({ project, showEditLink }: Object) => {\n  const locale = useSelector((state) => state.preferences.locale);\n  const [userCanEditProject] = useEditProjectAllowed(project);\n\n  return (\n    <>\n      <HeaderLine\n        author={project.author}\n        projectId={project.projectId}\n        priority={project.projectPriority}\n        organisation={project.organisationName}\n        showEditLink={showEditLink && userCanEditProject}\n      />\n      <div>\n        <h3\n          className=\"f2 fw5 mt3 mt2-ns mb3 ttu barlow-condensed blue-dark dib mr3\"\n          lang={project.projectInfo.locale}\n        >\n          {project.projectInfo && project.projectInfo.name}\n        </h3>\n        {project.private && <ProjectVisibilityBox className=\"pv2 ph3 mb3 mr3 v-mid dib\" />}\n        {['DRAFT', 'ARCHIVED'].includes(project.status) && (\n          <ProjectStatusBox status={project.status} className=\"pv2 ph3 mb3 v-mid dib mr3\" />\n        )}\n      </div>\n      <TagLine\n        campaigns={project.campaigns}\n        interests={project.interests}\n        countries={\n          locale.includes('en') ? project.countryTag : translateCountry(project.countryTag, locale)\n        }\n      />\n    </>\n  );\n};\n\nexport function TagLine({ campaigns = [], countries = [], interests = [] }: Object) {\n  const locale = useSelector((state) => state.preferences.locale);\n  const formattedCampaigns = campaigns.map((campaign) => campaign.name).join(', ');\n  const formattedCountries = locale.includes('en') ? countries.join(', ') : countries;\n  const formattedInterests = interests.map((interest) => interest.name).join(', ');\n  // Remove empty formatted strings\n  const tags = [formattedCampaigns, formattedCountries, formattedInterests].filter((n) => n);\n\n  return (\n    <span className=\"blue-light\">\n      {tags.map((tag, index) => (\n        <span key={tag}>\n          {index !== 0 && <span className=\"ph2\">&#183;</span>}\n          {tag}\n        </span>\n      ))}\n    </span>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport function useComputeCompleteness(tasks) {\n  const [percentMapped, setPercentMapped] = useState(0);\n  const [percentValidated, setPercentValidated] = useState(0);\n  const [percentBadImagery, setPercentBadImagery] = useState(0);\n  useEffect(() => {\n    if (tasks && tasks.features) {\n      const totalTasks = tasks.features.length;\n      const mapped = tasks.features.filter((task) =>\n        ['MAPPED', 'LOCKED_FOR_VALIDATION'].includes(task.properties.taskStatus),\n      ).length;\n      const validated = getStatusCount(tasks, 'VALIDATED');\n      const badImagery = getStatusCount(tasks, 'BADIMAGERY');\n      setPercentMapped(parseInt(((mapped + validated) / (totalTasks - badImagery)) * 100));\n      setPercentValidated(parseInt((validated / (totalTasks - badImagery)) * 100));\n      setPercentBadImagery(parseInt((badImagery / totalTasks) * 100));\n    }\n  }, [tasks, setPercentMapped, setPercentValidated, setPercentBadImagery]);\n  return { percentMapped, percentValidated, percentBadImagery };\n}\n\nfunction getStatusCount(tasks, status) {\n  return tasks.features.filter((task) => task.properties.taskStatus === status).length;\n}\n\nexport function useTasksByStatus(tasks) {\n  const [stats, setStats] = useState({\n    ready: 0,\n    badImagery: 0,\n    lockedForMapping: 0,\n    mapped: 0,\n    lockedForValidation: 0,\n    validated: 0,\n    invalidated: 0,\n    totalTasks: 0,\n  });\n  useEffect(() => {\n    if (tasks && tasks.features) {\n      const totalTasks = tasks.features.length;\n      const ready = getStatusCount(tasks, 'READY');\n      const mapped = getStatusCount(tasks, 'MAPPED');\n      const validated = getStatusCount(tasks, 'VALIDATED');\n      const invalidated = getStatusCount(tasks, 'INVALIDATED');\n      const badImagery = getStatusCount(tasks, 'BADIMAGERY');\n      const lockedForMapping = getStatusCount(tasks, 'LOCKED_FOR_MAPPING');\n      const lockedForValidation = getStatusCount(tasks, 'LOCKED_FOR_VALIDATION');\n      setStats({\n        ready: ready,\n        badImagery: badImagery,\n        lockedForMapping: lockedForMapping,\n        mapped: mapped,\n        lockedForValidation: lockedForValidation,\n        validated: validated,\n        invalidated: invalidated,\n        totalTasks: totalTasks,\n      });\n    }\n  }, [tasks]);\n  return stats;\n}\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  projectStatsTitle: {\n    id: 'projects.stats.title',\n    defaultMessage: 'Time statistics',\n  },\n  projectStatsError: {\n    id: 'project.stats.timeline.fetching.error',\n    defaultMessage: 'An error occured while loading project stats',\n  },\n  averageMappingTime: {\n    id: 'projects.stats.average_mapping_time',\n    defaultMessage: 'Average mapping time per Task',\n  },\n  averageValidationTime: {\n    id: 'projects.stats.average_validation_time',\n    defaultMessage: 'Average validation time per Task',\n  },\n  timeToFinishMapping: {\n    id: 'projects.stats.time_finish_mapping',\n    defaultMessage: 'Estimated time to finish mapping',\n  },\n  timeToFinishValidating: {\n    id: 'projects.stats.time_finish_validation',\n    defaultMessage: 'Estimated time to finish validation',\n  },\n  status: {\n    id: 'project.stats.tasks.tatus',\n    defaultMessage: 'Tasks by status',\n  },\n  tasksToMap: {\n    id: 'project.stats.tasks.needs_mapping',\n    defaultMessage: 'Tasks to map',\n  },\n  tasksToValidate: {\n    id: 'project.stats.tasks.needs_validation',\n    defaultMessage: 'Tasks to validate',\n  },\n  contributors: {\n    id: 'project.stats.contributors.title',\n    defaultMessage: 'Contributors',\n  },\n  totalContributors: {\n    id: 'project.stats.contributors.total',\n    defaultMessage: 'Total contributors',\n  },\n  usersExperience: {\n    id: 'project.stats.experience.title',\n    defaultMessage: 'Users by experience on Tasking Manager',\n  },\n  usersLevel: {\n    id: 'project.stats.level.title',\n    defaultMessage: 'Users by level',\n  },\n  mappers: {\n    id: 'project.stats.contributors.mappers',\n    defaultMessage: 'Mappers',\n  },\n  validators: {\n    id: 'project.stats.contributors.validators',\n    defaultMessage: 'Validators',\n  },\n  lessThan1MonthExp: {\n    id: 'project.stats.contributors.experience.1',\n    defaultMessage: 'Less than 1 month',\n  },\n  lessThan3MonthExp: {\n    id: 'project.stats.contributors.experience.3',\n    defaultMessage: '1 to 3 months',\n  },\n  lessThan6MonthExp: {\n    id: 'project.stats.contributors.experience.6',\n    defaultMessage: '3 to 6 months',\n  },\n  lessThan12MonthExp: {\n    id: 'project.stats.contributors.experience.12',\n    defaultMessage: '6 to 12 months',\n  },\n  moreThan1YearExp: {\n    id: 'project.stats.contributors.experience.year',\n    defaultMessage: 'More than 1 year',\n  },\n  totalEdits: {\n    id: 'project.stats.totalEdits',\n    defaultMessage: 'Total map edits',\n  },\n  changesets: {\n    id: 'project.stats.changesets',\n    defaultMessage: 'Changesets',\n  },\n  edits: {\n    id: 'project.stats.edits',\n    defaultMessage: 'Edits',\n  },\n});\n","import React from 'react';\nimport humanizeDuration from 'humanize-duration';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport {\n  ClockIcon,\n  RoadIcon,\n  HomeIcon,\n  WavesIcon,\n  MarkerIcon,\n  MappedIcon,\n  ValidatedIcon,\n} from '../svgIcons';\nimport { StatsCard } from '../statsCard';\nimport StatsTimestamp from '../statsTimestamp';\n\nexport const TaskStats = ({ userStats, username }) => {\n  const {\n    tasksMapped,\n    tasksValidatedByOthers,\n    tasksInvalidatedByOthers,\n    tasksValidated,\n    tasksInvalidated,\n  } = userStats;\n  const taskStats = [\n    {\n      icon: <MappedIcon className=\"v-mid h-100 w-50-ns w-25\" />,\n      title: messages.userMapped,\n      items: [\n        {\n          label: messages.tasks,\n          value: tasksMapped,\n        },\n        {\n          label: messages.validated,\n          value: tasksValidatedByOthers,\n        },\n        {\n          label: messages.invalidated,\n          value: tasksInvalidatedByOthers,\n        },\n      ],\n    },\n    {\n      icon: <ValidatedIcon className=\"v-mid h-100 w-30-ns w-25\" />,\n      title: messages.userValidated,\n      items: [\n        {\n          label: messages.tasks,\n          value: tasksValidated + tasksInvalidated || 0,\n        },\n        {\n          label: messages.finished,\n          value: tasksValidated,\n        },\n        {\n          label: messages.invalidated,\n          value: tasksInvalidated,\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"relative base-font blue-grey task-stats-ctr\">\n      {taskStats.map((stat, index) => (\n        <article\n          key={index}\n          className=\"shadow-6 pv3 ph2 bg-white flex flex-column flex-row-ns items-center\"\n        >\n          <div className=\"w-75 w-25-ns h-100 pa2 pa0-m red tc\">{stat.icon}</div>\n          <div className=\"w-75 mt3 tc f6 b\">\n            <div className=\" w-100\">\n              <p className=\"mb1 mt3 mt1-ns f3 fw6\" style={{ letterSpacing: '1.25px' }}>\n                <FormattedMessage\n                  {...stat.title}\n                  values={{ user: username ? username : <FormattedMessage {...messages.you} /> }}\n                />\n              </p>\n              <hr className=\"w-50\" />\n            </div>\n            <div className=\"w-100 pt4 flex\">\n              {stat.items.map((item, index) => (\n                <div key={index} className=\" w-33 tc\">\n                  <p className=\"ma0 mb0 barlow-condensed f2 fw5 red\">{item.value}</p>\n                  <p className=\"mb3 ttl fw6\">\n                    <FormattedMessage {...item.label} />\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </article>\n      ))}\n    </div>\n  );\n};\n\nexport const shortEnglishHumanizer = humanizeDuration.humanizer({\n  language: 'shortEn',\n  languages: {\n    shortEn: {\n      y: () => 'y',\n      mo: () => 'mo',\n      w: () => 'w',\n      d: () => 'd',\n      h: () => 'h',\n      m: () => 'm',\n      s: () => 's',\n      ms: () => 'ms',\n    },\n  },\n});\n\nexport const ElementsMapped = ({ userStats, osmStats }) => {\n  const duration = shortEnglishHumanizer(userStats.timeSpentMapping * 1000, {\n    round: true,\n    delimiter: ' ',\n    units: ['h', 'm'],\n    spacer: '',\n  });\n\n  const iconClass = 'h-50 w-50';\n  const iconStyle = { height: '45px' };\n\n  return (\n    <div>\n      <div className=\"w-100 relative stats-cards-container\">\n        <StatsCard\n          invertColors={true}\n          icon={<ClockIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...messages.timeSpentMapping} />}\n          value={duration}\n        />\n        <StatsCard\n          icon={<HomeIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...messages.buildingsMapped} />}\n          value={osmStats.buildings || 0}\n        />\n        <StatsCard\n          icon={<RoadIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...messages.roadMapped} />}\n          value={osmStats.roads || 0}\n        />\n        <StatsCard\n          icon={<MarkerIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...messages.poiMapped} />}\n          value={osmStats.total_poi_count_add || '-'}\n        />\n        <StatsCard\n          icon={<WavesIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...messages.waterwaysMapped} />}\n          value={osmStats.total_waterway_km_add || '-'}\n        />\n      </div>\n      <div className=\"cf w-100 relative tr pt3 pr3\">\n        <StatsTimestamp messageType=\"generic\" />\n      </div>\n    </div>\n  );\n};\n","import { TM_DEFAULT_CHANGESET_COMMENT } from '../config';\n\nexport const retrieveDefaultChangesetComment = (changesetComment, projectId) => {\n  const regex = new RegExp(`${TM_DEFAULT_CHANGESET_COMMENT}-${projectId}`);\n  return changesetComment.split(' ').filter((c) => c.match(regex) !== null);\n};\n","import { useQuery } from '@tanstack/react-query';\n\nimport api from './apiClient';\nimport { OHSOME_STATS_BASE_URL } from '../config';\n\nexport const useSystemStatisticsQuery = () => {\n  const fetchSystemStats = ({ signal }) => {\n    return api().get(`system/statistics/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['tm-stats'],\n    queryFn: fetchSystemStats,\n    useErrorBoundary: true,\n  });\n};\n\nexport const useProjectStatisticsQuery = (projectId) => {\n  const fetchProjectStats = ({ signal }) => {\n    return api().get(`projects/${projectId}/statistics/`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['project-stats'],\n    queryFn: fetchProjectStats,\n    select: (data) => data.data,\n  });\n};\n\nexport const useOsmStatsQuery = () => {\n  const fetchOsmStats = ({ signal }) => {\n    return api().get(`${OHSOME_STATS_BASE_URL}/stats/hotosm-project-%2A`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['osm-stats'],\n    queryFn: fetchOsmStats,\n    useErrorBoundary: true,\n    select: (data) => data.data.result\n  });\n};\n\nexport const useOsmHashtagStatsQuery = (defaultComment) => {\n  const fetchOsmStats = ({ signal }) => {\n    return api().get(`${OHSOME_STATS_BASE_URL}/stats/${defaultComment[0].replace('#', '')}`, {\n      signal,\n    });\n  };\n\n  return useQuery({\n    queryKey: ['osm-hashtag-stats'],\n    queryFn: fetchOsmStats,\n    useErrorBoundary: true,\n    enabled: Boolean(defaultComment?.[0]),\n    select: (data) => data.data.result,\n  });\n};\n","import React from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { shortEnglishHumanizer } from '../userDetail/elementsMapped';\nimport { StatsCardContent } from '../statsCard';\nimport { MappedIcon, ValidatedIcon } from '../svgIcons';\nimport { useProjectStatisticsQuery } from '../../api/stats';\nimport { Alert } from '../alert';\n\nconst StatsRow = ({ stats }) => {\n  const fields = [\n    'averageMappingTime',\n    'averageValidationTime',\n    'timeToFinishMapping',\n    'timeToFinishValidating',\n  ];\n\n  const options = {\n    units: ['h', 'm', 's'],\n    round: true,\n    spacer: '',\n  };\n\n  return (\n    <div className=\"cf center\">\n      {fields.map((t, n) => (\n        <div key={n} className=\"ph2 w-25-l w-50-m w-100 fl mv1\">\n          <div className=\"cf pa3 bg-white shadow-4\">\n            <div className=\"w-30 fl red\">\n              {t.indexOf('Mapping') !== -1 ? (\n                <MappedIcon className=\"v-mid w-50-ns w-25\" />\n              ) : (\n                <ValidatedIcon className=\"v-mid w-50-ns w-25\" />\n              )}\n            </div>\n            <div className=\"w-70 fl\">\n              <StatsCardContent\n                className=\"tc\"\n                value={shortEnglishHumanizer(stats[t] * 1000, options).replace(/,/g, '')}\n                label={<FormattedMessage {...messages[t]} />}\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst StatsCards = ({ stats }) => {\n  return (\n    <div className=\"ph2 ph4-ns pb4\">\n      <h3 className=\"f3 ttu barlow-condensed\">\n        <FormattedMessage {...messages.projectStatsTitle} />\n      </h3>\n      <StatsRow stats={stats} />\n    </div>\n  );\n};\n\nexport const TimeStats = ({ id }) => {\n  const { data: stats, status } = useProjectStatisticsQuery(id);\n\n  if (status === 'loading') {\n    return <ReactPlaceholder showLoadingAnimation={true} rows={26} ready={false} className=\"pr3\" />;\n  }\n  if (status === 'error') {\n    return (\n      <Alert type=\"error\">\n        <FormattedMessage {...messages.projectStatsError} />\n      </Alert>\n    );\n  }\n\n  return <StatsCards stats={stats} />;\n};\n","import React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport messages from './messages';\n\nexport const CompletionStats = ({ tasksByStatus }: Object) => {\n  const tasksToMap = tasksByStatus.invalidated + tasksByStatus.ready;\n  const tasksToValidate =\n    tasksByStatus.totalTasks -\n    tasksByStatus.validated -\n    tasksByStatus.lockedForValidation -\n    tasksByStatus.badImagery;\n  return (\n    <div className=\"w-100 fl tc\">\n      <div className=\"w-100-l w-50 fl pv4\">\n        <h3 className=\"ma0 mb2 barlow-condensed f1 b red\">\n          <FormattedNumber value={tasksToMap} />\n          <span className=\"dib f3 pl2 blue-grey\">/ {tasksByStatus.totalTasks}</span>\n        </h3>\n        <span className=\"ma0 h2 f4 fw6 blue-grey ttl\">\n          <FormattedMessage {...messages.tasksToMap} />\n        </span>\n      </div>\n      <div className=\"w-100-l w-50 fl pv4\">\n        <h3 className=\"ma0 mb2 barlow-condensed f1 b red\">\n          <FormattedNumber value={tasksToValidate} />\n        </h3>\n        <span className=\"ma0 h2 f4 fw6 blue-grey ttl\">\n          <FormattedMessage {...messages.tasksToValidate} />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport projectMessages from './messages';\nimport userDetailMessages from '../userDetail/messages';\nimport { MappingIcon, HomeIcon, RoadIcon, EditIcon } from '../svgIcons';\nimport { StatsCard } from '../statsCard';\nimport StatsTimestamp from '../statsTimestamp';\n\nexport const EditsStats = ({ data }) => {\n  const { changesets, buildings, roads, edits } = data;\n\n  const iconClass = 'h-50 w-50';\n  const iconStyle = { height: '45px' };\n\n  return (\n    <div className=\"cf w-100 pb4 ph2 ph4-ns blue-dark\">\n      <div className=\"flex items-center\">\n        <h3 className=\"barlow-condensed ttu f3\">\n          <FormattedMessage {...projectMessages.edits} />\n        </h3>\n        <StatsTimestamp messageType=\"project\" />\n      </div>\n      <div className=\"db pb2 project-edit-stats\">\n        <StatsCard\n          field={'changesets'}\n          icon={<MappingIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...projectMessages.changesets} />}\n          value={changesets || 0}\n        />\n        <StatsCard\n          icon={<EditIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...projectMessages.totalEdits} />}\n          value={edits || 0}\n        />\n        <StatsCard\n          icon={<HomeIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.buildingsMapped} />}\n          value={buildings || 0}\n        />\n        <StatsCard\n          icon={<RoadIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.roadMapped} />}\n          value={roads || 0}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { useTasksByStatus } from '../hooks/UseProjectCompletenessCalc';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { ProjectHeader } from '../components/projectDetail/header';\nimport { TimeStats } from '../components/projectStats/timeStats';\nimport { CompletionStats } from '../components/projectStats/completion';\nimport { EditsStats } from '../components/projectStats/edits';\nimport { retrieveDefaultChangesetComment } from '../utils/defaultChangesetComment';\nimport {\n  useProjectContributionsQuery,\n  useProjectSummaryQuery,\n  useProjectTimelineQuery,\n  useTasksQuery,\n} from '../api/projects';\nimport { useOsmHashtagStatsQuery } from '../api/stats';\nimport { Alert } from '../components/alert';\n\nconst ContributorsStats = React.lazy(() => import('../components/projectStats/contributorsStats'));\nconst TasksByStatus = React.lazy(() => import('../components/projectStats/taskStatus'));\nconst ProjectTimeline = React.lazy(() => import('../components/projectDetail/timeline'));\n\nexport function ProjectStats() {\n  const { id } = useParams();\n  useSetTitleTag(`Project #${id} Stats`);\n  const { data: project, status: projectStatus } = useProjectSummaryQuery(id, {\n    useErrorBoundary: true,\n  });\n  const { data: tasks, status: tasksStatus } = useTasksQuery(id);\n  const tasksByStatus = useTasksByStatus(tasks);\n  const { data: contributions, status: contributionsStatus } = useProjectContributionsQuery(id);\n  const { data: timelineData, status: timelineDataStatus } = useProjectTimelineQuery(id);\n  const defaultComment = project && retrieveDefaultChangesetComment(project.changesetComment, id);\n  const { data: edits, status: editsStatus } = useOsmHashtagStatsQuery(defaultComment);\n\n  return (\n    <ReactPlaceholder\n      showLoadingAnimation={true}\n      rows={26}\n      ready={projectStatus === 'success'}\n      className=\"pa4-ns\"\n    >\n      <div className=\"cf bg-tan\">\n        <div className=\"w-100 fl pv3 ph2 ph4-ns bg-white blue-dark\">\n          <ProjectHeader project={project} showEditLink={true} />\n        </div>\n        <div className=\"w-100 fl\">\n          {tasksStatus === 'loading' && (\n            <ReactPlaceholder showLoadingAnimation={true} rows={5} delay={500} ready={false} />\n          )}\n          {tasksStatus === 'error' && (\n            <Alert type=\"error\">\n              <FormattedMessage {...messages.tasksStatsError} />\n            </Alert>\n          )}\n          {tasksStatus === 'success' && (\n            <React.Suspense fallback={<div className={`w7 h5`}>Loading...</div>}>\n              <TasksByStatus stats={tasksByStatus} />\n            </React.Suspense>\n          )}\n        </div>\n        {defaultComment?.[0] && (\n          <div className=\"w-100 fl\">\n            {editsStatus === 'loading' && (\n              <ReactPlaceholder showLoadingAnimation={true} rows={5} delay={500} ready={false} />\n            )}\n            {editsStatus === 'error' && (\n              <Alert type=\"error\">\n                <FormattedMessage {...messages.editsStatsError} />\n              </Alert>\n            )}\n            {editsStatus === 'success' && (\n              <React.Suspense fallback={<div className={`w7 h5`}>Loading...</div>}>\n                <EditsStats data={edits} />\n              </React.Suspense>\n            )}\n          </div>\n        )}\n        <div className=\"w-100 fl pb4\">\n          {contributionsStatus === 'error' && (\n            <Alert type=\"error\">\n              <FormattedMessage {...messages.contributionsStatsError} />\n            </Alert>\n          )}\n          {contributionsStatus === 'loading' && (\n            <ReactPlaceholder showLoadingAnimation={true} rows={7} delay={500} ready={false} />\n          )}\n          {contributionsStatus === 'success' && (\n            <React.Suspense fallback={<div className={`w7 h5`}>Loading...</div>}>\n              <ContributorsStats contributors={contributions} />\n            </React.Suspense>\n          )}\n        </div>\n        <div className=\"w-100 mb2 fl ph2 ph4-ns\">\n          <h3 className=\"barlow-condensed ttu f3\">\n            <FormattedMessage {...messages.projectTimeline} />\n          </h3>\n          <div className=\"bg-white pv3 ph2 fl w-100 shadow-4\">\n            <div className=\"w-100 w-50-l fl\">\n              {timelineDataStatus === 'loading' && (\n                <ReactPlaceholder\n                  showLoadingAnimation={true}\n                  rows={3}\n                  delay={500}\n                  ready={timelineDataStatus === 'success'}\n                />\n              )}\n              {timelineDataStatus === 'error' && (\n                <Alert type=\"error\">\n                  <FormattedMessage {...messages.timelineDataError} />\n                </Alert>\n              )}\n              {timelineDataStatus === 'success' && (\n                <React.Suspense fallback={<div className={`w7 h5`}>Loading...</div>}>\n                  <ProjectTimeline tasksByDay={timelineData} />\n                </React.Suspense>\n              )}\n            </div>\n            <div className=\"w-100 w-50-l fl\">\n              {tasksStatus === 'error' && (\n                <Alert type=\"error\">\n                  <FormattedMessage {...messages.tasksStatsError} />\n                </Alert>\n              )}\n              {tasksStatus === 'loading' && (\n                <ReactPlaceholder showLoadingAnimation={true} rows={5} delay={500} ready={false} />\n              )}\n              {tasksStatus === 'success' && <CompletionStats tasksByStatus={tasksByStatus} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"w-100 fl bg-tan pb3 mb4\">\n          <TimeStats id={id} />\n        </div>\n      </div>\n    </ReactPlaceholder>\n  );\n}\n\nexport default ProjectStats;\n"],"sourceRoot":""}