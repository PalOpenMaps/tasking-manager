{"version":3,"sources":["components/editor.js"],"names":["Editor","_ref","editorRef","setEditorRef","setDisable","comment","presets","dispatch","useDispatch","session","useSelector","state","auth","get","locale","preferences","windowInit","undefined","window","useEffect","iD","coreContext","type","isVisible","defaultChangesetComment","length","presetManager","addablePresetIDs","e","embed","assetPath","setsDocumentTitle","containerNode","document","getElementById","init","osm","connection","urlroot","OSM_SERVER_URL","oauth_consumer_key","OSM_CONSUMER_KEY","oauth_secret","OSM_CONSUMER_SECRET","oauth_token","osm_oauth_token","oauth_token_secret","osm_oauth_token_secret","switch","thereAreChanges","changes","modified","created","deleted","history","on","React","createElement","className","id"],"mappings":"0IAAA,mGAOe,SAASA,EAAMC,GAA6D,IAA5D,UAAEC,EAAS,aAAEC,EAAY,WAAEC,EAAU,QAAEC,EAAO,QAAEC,GAASL,EACtF,MAAMM,EAAWC,cACXC,EAAUC,YAAaC,GAAUA,EAAMC,KAAKC,IAAI,YAChDC,EAASJ,YAAaC,GAAUA,EAAMI,YAAYD,QAClDE,OAA+BC,WAAXC,OAkE1B,OAhEAC,oBAAU,IACD,KACLD,OAAOE,GAAGC,YAAY,WACtBd,EAAS,CAAEe,KAAM,iBAAkBC,WAAW,KAG/C,IAEHJ,oBAAU,KACJH,IAAed,IACjBK,EAAS,CAAEe,KAAM,iBAAkBC,WAAW,IAC9CpB,EAAae,OAAOE,GAAGC,iBAExB,CAACL,EAAYb,EAAcD,EAAWK,IAEzCY,oBAAU,KACJjB,GAAaG,GACfH,EAAUsB,wBAAwBnB,IAEnC,CAACA,EAASH,IAEbiB,oBAAU,KACR,GAAIV,GAAWK,GAAUM,GAAMlB,EAAW,CAExC,IACMI,EAAQmB,OACVP,OAAOE,GAAGM,cAAcC,iBAAiBrB,GAEzCY,OAAOE,GAAGM,cAAcC,iBAAiB,MAE3C,MAAOC,GACPV,OAAOE,GAAGM,cAAcC,iBAAiB,MAE3CzB,EACG2B,OAAM,GACNC,UAAU,YACVhB,OAAOA,GACPiB,mBAAkB,GAClBC,cAAcC,SAASC,eAAe,iBACzChC,EAAUiC,OAEV,IAAIC,EAAMlC,EAAUmC,aACpB,MAAMzB,EAAO,CACX0B,QAASC,IACTC,mBAAoBC,IACpBC,aAAcC,IACdC,YAAanC,EAAQoC,gBACrBC,mBAAoBrC,EAAQsC,wBAE9BX,EAAIY,OAAOpC,GAEX,MAAMqC,EAAmBC,GACvBA,EAAQC,SAAS1B,QAAUyB,EAAQE,QAAQ3B,QAAUyB,EAAQG,QAAQ5B,OAEvEvB,EAAUoD,UAAUC,GAAG,SAAU,KAC3BN,EAAgB/C,EAAUoD,UAAUJ,WACtC9C,GAAW,GAEXA,GAAW,OAIhB,CAACK,EAASP,EAAWE,EAAYE,EAASQ,IAEtC0C,IAAAC,cAAA,OAAKC,UAAU,uBAAuBC,GAAG","file":"static/js/7.11267487.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as iD from '@hotosm/id';\nimport '@hotosm/id/dist/iD.css';\n\nimport { OSM_CONSUMER_KEY, OSM_CONSUMER_SECRET, OSM_SERVER_URL } from '../config';\n\nexport default function Editor({ editorRef, setEditorRef, setDisable, comment, presets }) {\n  const dispatch = useDispatch();\n  const session = useSelector((state) => state.auth.get('session'));\n  const locale = useSelector((state) => state.preferences.locale);\n  const windowInit = typeof window !== undefined;\n\n  useEffect(() => {\n    return () => {\n      window.iD.coreContext('destroy');\n      dispatch({ type: 'SET_VISIBILITY', isVisible: true });\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (windowInit && !editorRef) {\n      dispatch({ type: 'SET_VISIBILITY', isVisible: false });\n      setEditorRef(window.iD.coreContext());\n    }\n  }, [windowInit, setEditorRef, editorRef, dispatch]);\n\n  useEffect(() => {\n    if (editorRef && comment) {\n      editorRef.defaultChangesetComment(comment);\n    }\n  }, [comment, editorRef]);\n\n  useEffect(() => {\n    if (session && locale && iD && editorRef) {\n      // if presets is not a populated list we need to set it as null\n      try {\n        if (presets.length) {\n          window.iD.presetManager.addablePresetIDs(presets);\n        } else {\n          window.iD.presetManager.addablePresetIDs(null);\n        }\n      } catch (e) {\n        window.iD.presetManager.addablePresetIDs(null);\n      }\n      editorRef\n        .embed(true)\n        .assetPath('/static/')\n        .locale(locale)\n        .setsDocumentTitle(false)\n        .containerNode(document.getElementById('id-container'));\n      editorRef.init();\n\n      let osm = editorRef.connection();\n      const auth = {\n        urlroot: OSM_SERVER_URL,\n        oauth_consumer_key: OSM_CONSUMER_KEY,\n        oauth_secret: OSM_CONSUMER_SECRET,\n        oauth_token: session.osm_oauth_token,\n        oauth_token_secret: session.osm_oauth_token_secret,\n      };\n      osm.switch(auth);\n\n      const thereAreChanges = (changes) =>\n        changes.modified.length || changes.created.length || changes.deleted.length;\n\n      editorRef.history().on('change', () => {\n        if (thereAreChanges(editorRef.history().changes())) {\n          setDisable(true);\n        } else {\n          setDisable(false);\n        }\n      });\n    }\n  }, [session, editorRef, setDisable, presets, locale]);\n\n  return <div className=\"w-100 vh-minus-77-ns\" id=\"id-container\"></div>;\n}\n"],"sourceRoot":""}