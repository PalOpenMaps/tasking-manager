{"version":3,"sources":["utils/formatChartJSData.js","../node_modules/date-fns/esm/startOfWeek/index.js","utils/date.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfYear/index.js","components/projectStats/contributorsStats.js","hooks/UseContributorStats.js"],"names":["formatChartData","reference","stats","data","datasets","backgroundColor","labels","map","f","field","total","reduce","a","b","v","Math","round","borderColor","label","formatTimelineData","mappedTasksConfig","validatedTasksConfig","mapped","color","fill","validated","entry","date","cumulative_mapped","total_tasks","cumulative_validated","formatTasksStatsData","formatTooltip","context","dataset","dataIndex","concat","formatTimelineTooltip","isPercent","startOfWeek","dirtyDate","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","requiredArgs","arguments","defaultOptions","getDefaultOptions","weekStartsOn","toInteger","locale","RangeError","toDate","day","getDay","diff","setDate","getDate","setHours","getPastMonths","months","today","Date","setMonth","getMonth","dateFormat","dateRanges","thisWeek","start","format","end","thisMonth","startOfMonth","thisYear","startOfYear","lastWeek","endOfWeek","lastMonth","endOfMonth","lastYear","setFullYear","getFullYear","endOfYear","cleanDate","month","year","ContributorsStats","contributors","ChartJS","register","BarElement","CategoryScale","Legend","LinearScale","Title","Tooltip","ArcElement","intl","useIntl","contributions","setStats","useState","validators","mappers","beginnerUsers","intermediateUsers","advancedUsers","lessThan1MonthExp","lessThan3MonthExp","lessThan6MonthExp","lessThan12MonthExp","moreThan1YearExp","useEffect","undefined","filter","i","length","mappingLevel","forEach","dateRegistered","useContributorStats","getUserLevelLabel","level","formatMessage","userMessages","getUserExpLabel","id","messages","userLevelsReference","CHART_COLOURS","green","white","blue","orange","userExperienceReference","red","_jsxs","className","children","_jsx","FormattedMessage","StatsCardContent","value","totalContributors","usersExperience","Bar","plugins","legend","display","tooltip","callbacks","usersLevel","Doughnut","aspectRatio","position","boxWidth"],"mappings":"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","file":"static/js/834.9207761b.chunk.js","sourcesContent":["export const formatChartData = (reference, stats) => {\n  let data = { datasets: [{ data: [], backgroundColor: [] }], labels: [] };\n\n  data.datasets[0].data = reference.map((f) => stats[f.field]);\n  const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\n  data.datasets[0].data = data.datasets[0].data.map((v) => Math.round((v / total) * 100));\n  data.datasets[0].backgroundColor = reference.map((f) => f.backgroundColor);\n  data.datasets[0].borderColor = reference.map((f) => f.borderColor);\n  data.labels = reference.map((f) => f.label);\n\n  return data;\n};\n\nexport const formatTimelineData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    borderColor: mappedTasksConfig.color,\n    fill: false,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    borderColor: validatedTasksConfig.color,\n    fill: false,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) =>\n    Math.round((entry.cumulative_mapped / entry.total_tasks) * 100),\n  );\n  validated.data = stats.map((entry) =>\n    Math.round((entry.cumulative_validated / entry.total_tasks) * 100),\n  );\n\n  return { datasets: [validated, mapped], labels: labels };\n};\n\nexport const formatTasksStatsData = (stats, mappedTasksConfig, validatedTasksConfig) => {\n  let mapped = {\n    data: [],\n    backgroundColor: mappedTasksConfig.color,\n    label: mappedTasksConfig.label,\n  };\n  let validated = {\n    data: [],\n    backgroundColor: validatedTasksConfig.color,\n    label: validatedTasksConfig.label,\n  };\n\n  const labels = stats.map((entry) => entry.date);\n  mapped.data = stats.map((entry) => entry.mapped);\n  validated.data = stats.map((entry) => entry.validated);\n\n  return { datasets: [mapped, validated], labels: labels };\n};\n\nexport const formatTooltip = (context) => {\n  var label = context.label;\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}%`;\n};\n\nexport const formatTimelineTooltip = (context, isPercent) => {\n  var label = context.dataset.label || '';\n  if (label) label += ': ';\n  label += context.dataset.data[context.dataIndex];\n\n  return `${label}${isPercent ? '%' : ''}`;\n};\n","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import {\n  format,\n  startOfWeek,\n  startOfMonth,\n  startOfYear,\n  endOfWeek,\n  endOfMonth,\n  endOfYear,\n} from 'date-fns';\n\nexport function getPastMonths(months) {\n  let today = new Date();\n  return today.setMonth(today.getMonth() - months);\n}\n\nconst date = new Date();\nconst dateFormat = 'yyyy-MM-dd';\nexport const dateRanges = {\n  thisWeek: {\n    start: format(startOfWeek(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisMonth: {\n    start: format(startOfMonth(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisYear: {\n    start: format(startOfYear(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  lastWeek: {\n    start: format(startOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n    end: format(endOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n  },\n  lastMonth: {\n    start: format(startOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n    end: format(endOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n  },\n  lastYear: {\n    start: format(startOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n    end: format(endOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n  },\n};\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  BarElement,\n  CategoryScale,\n  Legend,\n  LinearScale,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport messages from './messages';\nimport userMessages from '../user/messages';\nimport { CHART_COLOURS } from '../../config';\nimport { formatChartData, formatTooltip } from '../../utils/formatChartJSData';\nimport { useContributorStats } from '../../hooks/UseContributorStats';\nimport { StatsCardContent } from '../statsCard';\n\nexport default function ContributorsStats({ contributors }) {\n  ChartJS.register(BarElement, CategoryScale, Legend, LinearScale, Title, Tooltip, ArcElement);\n  const intl = useIntl();\n  const stats = useContributorStats(contributors);\n  const getUserLevelLabel = (level) => intl.formatMessage(userMessages[`mapperLevel${level}`]);\n  const getUserExpLabel = (id) => intl.formatMessage(messages[`${id}`]);\n\n  let userLevelsReference = [\n    {\n      label: getUserLevelLabel('BEGINNER'),\n      field: 'beginnerUsers',\n      backgroundColor: CHART_COLOURS.green,\n      borderColor: CHART_COLOURS.white,\n    },\n    {\n      label: getUserLevelLabel('INTERMEDIATE'),\n      field: 'intermediateUsers',\n      backgroundColor: CHART_COLOURS.blue,\n      borderColor: CHART_COLOURS.white,\n    },\n    {\n      label: getUserLevelLabel('ADVANCED'),\n      field: 'advancedUsers',\n      backgroundColor: CHART_COLOURS.orange,\n      borderColor: CHART_COLOURS.white,\n    },\n  ];\n  let userExperienceReference = [\n    {\n      label: getUserExpLabel('lessThan1MonthExp'),\n      field: 'lessThan1MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan3MonthExp'),\n      field: 'lessThan3MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan6MonthExp'),\n      field: 'lessThan6MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('lessThan12MonthExp'),\n      field: 'lessThan12MonthExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n    {\n      label: getUserExpLabel('moreThan1YearExp'),\n      field: 'moreThan1YearExp',\n      backgroundColor: CHART_COLOURS.red,\n    },\n  ];\n\n  return (\n    <div className=\"ph2 ph4-ns\">\n      <h3 className=\"f3 ttu barlow-condensed\">\n        <FormattedMessage {...messages.contributors} />\n      </h3>\n      <div className=\"cf w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-tan tc\">\n          <StatsCardContent\n            value={stats.mappers}\n            label={<FormattedMessage {...messages.mappers} />}\n            className=\"pv3-l pv2 mb3-l mb2 shadow-4 bg-white\"\n          />\n          <StatsCardContent\n            value={stats.validators}\n            label={<FormattedMessage {...messages.validators} />}\n            className=\"pv3-l pv2 mb3-l mb2 shadow-4 bg-white\"\n          />\n          <StatsCardContent\n            value={contributors.length}\n            label={<FormattedMessage {...messages.totalContributors} />}\n            className=\"pv3-l pv2 mb3-l mb2 shadow-4 bg-white\"\n          />\n        </div>\n      </div>\n      <div className=\"w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-white pb4 ph3 pt2 shadow-4\">\n          <h3 className=\"f4 mv3 fw6\">\n            <FormattedMessage {...messages.usersExperience} />\n          </h3>\n          <Bar\n            data={formatChartData(userExperienceReference, stats)}\n            options={{\n              plugins: {\n                legend: { display: false },\n                tooltip: { callbacks: { label: (context) => formatTooltip(context) } },\n              },\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"w-third-l w-100 fl pa2\">\n        <div className=\"cf bg-white pb4 ph3 pt2 shadow-4\">\n          <h3 className=\"f4 mv3 fw6\">\n            <FormattedMessage {...messages.usersLevel} />\n          </h3>\n          <Doughnut\n            data={formatChartData(userLevelsReference, stats)}\n            options={{\n              aspectRatio: 2,\n              plugins: {\n                legend: { position: 'right', labels: { boxWidth: 12 } },\n                tooltip: { callbacks: { label: (context) => formatTooltip(context) } },\n              },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { getPastMonths } from '../utils/date';\n\nexport function useContributorStats(contributions) {\n  const [stats, setStats] = useState({\n    validators: 0,\n    mappers: 0,\n    beginnerUsers: 0,\n    intermediateUsers: 0,\n    advancedUsers: 0,\n    lessThan1MonthExp: 0,\n    lessThan3MonthExp: 0,\n    lessThan6MonthExp: 0,\n    lessThan12MonthExp: 0,\n    moreThan1YearExp: 0,\n  });\n  useEffect(() => {\n    if (contributions !== undefined) {\n      const data = {\n        validators: contributions.filter((i) => i.validated > 0).length,\n        mappers: contributions.filter((i) => i.mapped > 0).length,\n        beginnerUsers: contributions.filter((i) => i.mappingLevel === 'BEGINNER').length,\n        intermediateUsers: contributions.filter((i) => i.mappingLevel === 'INTERMEDIATE').length,\n        advancedUsers: contributions.filter((i) => i.mappingLevel === 'ADVANCED').length,\n      };\n      const monthRanges = [\n        [0, 1],\n        [1, 3],\n        [3, 6],\n        [6, 12],\n      ];\n      monthRanges.forEach(\n        (months) =>\n          (data[`lessThan${months[1]}MonthExp`] = contributions.filter(\n            (i) =>\n              new Date(i.dateRegistered) > getPastMonths(months[1]) &&\n              new Date(i.dateRegistered) <= getPastMonths(months[0]),\n          ).length),\n      );\n      data.moreThan1YearExp = contributions.filter(\n        (i) => new Date(i.dateRegistered) <= getPastMonths(12),\n      ).length;\n      setStats(data);\n    }\n  }, [contributions]);\n  return stats;\n}\n"],"sourceRoot":""}