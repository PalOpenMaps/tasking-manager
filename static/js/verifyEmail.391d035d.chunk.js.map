{"version":3,"sources":["views/verifyEmail.js"],"names":["EmailVerification","useSetTitleTag","token","setToken","useQueryParam","StringParam","username","setUsername","status","setStatus","useState","useEffect","fetchLocalJSONAPI","concat","then","success","catch","error","_jsx","className","children","_jsxs","ReactPlaceholder","showLoadingAnimation","rows","height","delay","ready","FormattedMessage","messages","successExtraLine","values","link","Link","to","profileSettings"],"mappings":"6IAAA,6IAUO,SAASA,IACdC,YAAe,gBAEf,MAAOC,EAAOC,GAAYC,wBAAc,QAASC,gBAE1CC,EAAUC,GAAeH,wBAAc,WAAYC,gBACnDG,EAAQC,GAAaC,mBAAS,WAUrC,OARAC,qBAAU,KACJT,GAASI,GACXM,YAAkB,8CAADC,OAA+CX,EAAK,cAAAW,OAAaP,IAC/EQ,MAAMC,GAAYN,EAAU,mBAC5BO,OAAOC,GAAUR,EAAU,sBAChC,GACC,CAACP,EAAOI,IAGTY,cAAA,OAAKC,UAAU,yBAAwBC,SACrCC,eAACC,IAAgB,CACfC,sBAAsB,EACtBC,KAAM,EACNC,OAAO,QACPC,MAAO,GACPC,MAAkB,YAAXnB,EAAqBY,SAAA,CAE5BF,cAAA,MAAIC,UAAU,6BAA4BC,SACxCF,cAACU,IAAgB,IAAKC,IAASrB,OAEjCU,cAAA,KAAGC,UAAU,QAAOC,SAClBF,cAACU,IAAgB,IAAKC,IAAS,GAADhB,OAAIL,EAAM,oBAE9B,kBAAXA,GACCU,cAAA,KAAGC,UAAU,QAAOC,SAClBF,cAACU,IAAgB,IACXC,IAASC,iBACbC,OAAQ,CACNC,KACEd,cAACe,IAAI,CAACC,GAAI,YAAaf,UAAU,WAAUC,SACzCF,cAACU,IAAgB,IAAKC,IAASM,6BAUnD,C","file":"static/js/verifyEmail.391d035d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQueryParam, StringParam } from 'use-query-params';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { fetchLocalJSONAPI } from '../network/genericJSONRequest';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\n\nexport function EmailVerification() {\n  useSetTitleTag('Verify email');\n  /* eslint-disable-next-line */\n  const [token, setToken] = useQueryParam('token', StringParam);\n  /* eslint-disable-next-line */\n  const [username, setUsername] = useQueryParam('username', StringParam);\n  const [status, setStatus] = useState('loading');\n\n  useEffect(() => {\n    if (token && username) {\n      fetchLocalJSONAPI(`/api/v2/system/authentication/email/?token=${token}&username=${username}`)\n        .then((success) => setStatus('emailVerified'))\n        .catch((error) => setStatus('verificationError'));\n    }\n  }, [token, username]);\n\n  return (\n    <div className=\"cf w-100 pv5 ph6-l ph4\">\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        rows={2}\n        height=\"10rem\"\n        delay={10}\n        ready={status !== 'loading'}\n      >\n        <h3 className=\"f2 fw5 barlow-condensed tc\">\n          <FormattedMessage {...messages[status]} />\n        </h3>\n        <p className=\"f5 tc\">\n          <FormattedMessage {...messages[`${status}Explanation`]} />\n        </p>\n        {status === 'emailVerified' && (\n          <p className=\"f5 tc\">\n            <FormattedMessage\n              {...messages.successExtraLine}\n              values={{\n                link: (\n                  <Link to={'/settings'} className=\"red link\">\n                    <FormattedMessage {...messages.profileSettings} />\n                  </Link>\n                ),\n              }}\n            />\n          </p>\n        )}\n      </ReactPlaceholder>\n    </div>\n  );\n}\n"],"sourceRoot":""}