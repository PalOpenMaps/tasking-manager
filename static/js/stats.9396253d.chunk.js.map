{"version":3,"sources":["components/userDetail/messages.js","components/statsCard.js","components/projects/messages.js","components/statsTimestamp/messages.js","components/statsTimestamp/index.js","utils/date.js","components/userDetail/barListChart.js","components/projects/filterSelectFields.js","hooks/UseTagAPI.js","hooks/UseTotalTasksStats.js","hooks/UseTasksStatsQueryAPI.js","components/teamsAndOrgs/tasksStatsSummary.js","components/teamsAndOrgs/tasksStats.js","hooks/UseValidateDateRange.js","../node_modules/date-fns/esm/endOfToday/index.js","components/teamsAndOrgs/newUsersStats.js","hooks/UseDateRangeQueryParams.js","components/teamsAndOrgs/featureStats.js","views/stats.js"],"names":["defineMessages","loading","id","defaultMessage","contributionTimelineTitle","projectsTitle","countries","timeSpentMapping","buildingsMapped","roadMapped","poiMapped","waterwaysMapped","userMapped","you","userValidated","invalidated","validated","finished","topProjectsMappedTitle","noTopProjectsData","topCausesTitle","others","noProjectsData","editsTitle","noEditsData","topCountriesTitle","tasks","heatmapNoContribution","heatmapContribution","heatmapContributions","heatmapLegendMore","heatmapLegendLess","teams","userOrganisationsError","StatsCard","_ref","icon","description","value","className","invertColors","_jsxs","concat","children","_jsx","StatsCardContent","Number","FormattedNumber","Math","trunc","label","_ref2","projectTitle","mappingDifficulty","moreFilters","campaign","startDate","startDatePlaceholder","endDate","endDatePlaceholder","dateRange","thisWeek","thisMonth","thisYear","lastWeek","lastMonth","lastYear","customRange","showMapToggle","listViewToggle","typesOfMapping","projectsToMap","projectsToValidate","anyProject","exactMatch","campaigns","showAllXTags","searchPlaceholder","organisation","organisations","location","locations","interest","interests","filterByMyInterests","errorLoadingTheXForY","filters","projects","myProjects","manageProjects","favorited","contributed","allprojects","active","stale","managed","created","draft","archived","paginationCount","clearFilters","sortBy","sortByIdDesc","sortByIdAsc","sortByPriority","sortByEasy","sortByChallenging","sortByMoreActive","apply","clear","retry","generic","project","StatsTimestamp","messageType","intl","useIntl","lastUpdated","setLastUpdated","useState","useEffect","fetchExternalJSONAPI","OHSOME_STATS_BASE_URL","then","res","result","max_timestamp","catch","error","console","InfoIcon","formatMessage","messages","formattedDate","formatDate","year","month","day","hour","minute","timeZone","ReactTooltip","place","effect","getPastMonths","months","today","Date","setMonth","getMonth","date","dateFormat","dateRanges","start","format","startOfWeek","end","startOfMonth","startOfYear","setDate","getDate","endOfWeek","endOfMonth","setFullYear","getFullYear","endOfYear","ProgressBar","percent","style","height","width","BarChartItem","name","link","percentValue","number","numberUnit","Link","to","BarListChart","_ref3","data","valueField","nameField","linkBase","linkField","map","p","n","FormattedMessage","ProjectFilterSelect","fieldsetName","fieldsetStyle","titleStyle","selectedTag","setQueryForChild","allQueryParamsForChild","options","payloadKey","fieldsetTitle","fieldsetTitlePlural","isError","values","xWord","yWord","TagFilterPickerAutocomplete","defaultSelectedItem","queryParamSelectedItem","tagOptionsFromAPI","setQuery","allQueryParams","DateRangeFilterSelect","isCustomDateRange","setIsCustomDateRange","startDateInQuery","endDateInQuery","setDateRange","dropdownOptions","isOptionDisabled","filter","a","doesRangeMatch","Object","keys","find","range","Select","onChange","page","undefined","classNamePrefix","option","DateFilterPicker","_ref4","selectedValue","CalendarIcon","DatePicker","selected","parse","placeholderText","showYearDropdown","scrollableYearDropdown","_ref5","tags","tagOptions","getValue","selectedOption","isLoading","change","newValue","getOptionLabel","getOptionValue","placeholder","isClearable","isDisabled","basedOnMyInterests","styles","menu","baseStyles","zIndex","dataFetchReducer","state","action","type","payload","log","Error","useTagAPI","initialData","tagType","processDataFn","token","useSelector","auth","locale","preferences","dispatch","useReducer","didCancel","async","queryParams","axios","url","API_URL","method","headers","Authorization","indexOf","fetchData","getStatusCount","stats","status","reduce","total","entry","useTotalTasksStats","totalStats","setTotalStats","mapped","length","statsQueryAllSpecification","withDefault","StringParam","now","CommaArrayParam","organisationName","organisationId","NumberParam","useTasksStatsQueryParams","useQueryParams","backendToQueryConversion","defaultInitialData","taskStats","useTasksStatsQueryAPI","arguments","ExternalQueryParamsState","extraQuery","throttledExternalQueryParamsState","useThrottle","controller","AbortController","queryParamsState","paramsRemapped","remapParamsToAPI","split","forEach","query","key","trim","params","signal","_error$response","_error$response$data","isCancel","response","zeroPayload","assign","pagination","abort","TasksStatsSummary","_Fragment","tasksMapped","tasksValidated","completedActions","TasksStatsChart","React","lazy","TasksStats","retryFn","campaignAPIState","countriesAPIState","formatFilterCountriesData","campaignInQuery","countryInQuery","dateValidation","validation","setValidation","detail","startOfToday","startOfTomorrow","differenceInDays","useValidateDateRange","ReactPlaceholder","showLoadingAnimation","rows","ready","errorLoadingStats","onClick","Suspense","fallback","endOfToday","endOfDay","NewUsersStats","datePeriod","queryParam","useDateRangeQueryParams","period","setQueryParam","startDateValue","subMonths","subWeeks","errorStats","loadingStats","useFetch","activeUsers","emailVerifiedUsers","emailVerified","newUsersOnLastMonth","newUsersOnLastWeek","activeNewUsers","round","FeatureStats","setStats","edits","buildings","roads","pois","waterways","get","poi_count_add","waterway_km_add","getStats","iconClass","iconStyle","totalFeatures","HomeIcon","userDetailMessages","RoadIcon","MarkerIcon","WavesIcon","Stats","useSetTitleTag","apiState","fetchTasksStatistics","statistics","tasksStatistics","newUsers"],"mappings":"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","file":"static/js/stats.9396253d.chunk.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on user components.\n */\nexport default defineMessages({\n  loading: {\n    id: 'users.detail.loading',\n    defaultMessage: 'loading',\n  },\n  contributionTimelineTitle: {\n    id: 'users.detail.contributionTimelineTitle',\n    defaultMessage: 'Contribution Timeline',\n  },\n  projectsTitle: {\n    id: 'users.detail.projectsTitle',\n    defaultMessage: 'Projects',\n  },\n  countries: {\n    id: 'users.detail.countries',\n    defaultMessage: 'Countries',\n  },\n  timeSpentMapping: {\n    id: 'users.detail.timeSpentMapping',\n    defaultMessage: 'Time spent mapping',\n  },\n  buildingsMapped: {\n    id: 'users.detail.buildingsMapped',\n    defaultMessage: 'Buildings mapped',\n  },\n  roadMapped: {\n    id: 'users.detail.roadMapped',\n    defaultMessage: 'Km road mapped',\n  },\n  poiMapped: {\n    id: 'users.detail.poiMapped',\n    defaultMessage: 'Points of interests mapped',\n  },\n  waterwaysMapped: {\n    id: 'users.detail.waterwaysMapped',\n    defaultMessage: 'Km waterways mapped',\n  },\n  userMapped: {\n    id: 'users.detail.tasksMapped',\n    defaultMessage: '{user} mapped',\n  },\n  you: {\n    id: 'users.detail.you',\n    defaultMessage: 'You',\n  },\n  userValidated: {\n    id: 'users.detail.tasksValidated',\n    defaultMessage: '{user} validated',\n  },\n  invalidated: {\n    id: 'users.detail.invalidated',\n    defaultMessage: 'Needed more mapping',\n  },\n  validated: {\n    id: 'users.detail.validated',\n    defaultMessage: 'Validated',\n  },\n  finished: {\n    id: 'users.detail.finished',\n    defaultMessage: 'Finished',\n  },\n  topProjectsMappedTitle: {\n    id: 'users.detail.topProjectsMappedTitle',\n    defaultMessage: 'Top 5 projects contributed',\n  },\n  noTopProjectsData: {\n    id: 'users.detail.topProjectsMapped.error',\n    defaultMessage: 'No projects mapped until now.',\n  },\n  topCausesTitle: {\n    id: 'users.detail.topCausesTitle',\n    defaultMessage: 'Top causes contributed to',\n  },\n  others: {\n    id: 'users.detail.others',\n    defaultMessage: 'Others',\n  },\n  noProjectsData: {\n    id: 'users.detail.projects.noData',\n    defaultMessage: 'Information is not available because no projects were mapped until now.',\n  },\n  editsTitle: {\n    id: 'users.detail.editsTitle',\n    defaultMessage: 'Edits by numbers',\n  },\n  noEditsData: {\n    id: 'users.detail.edits.error',\n    defaultMessage:\n      'No data to show yet. OpenStreetMap edits stats are updated with a delay of one hour.',\n  },\n  topCountriesTitle: {\n    id: 'users.detail.topCountriesTitle',\n    defaultMessage: 'Top 5 countries most mapped',\n  },\n  tasks: {\n    id: 'users.detail.tasks',\n    defaultMessage: 'tasks',\n  },\n  heatmapNoContribution: {\n    id: 'users.detail.heatmapNoContribution',\n    defaultMessage: 'No contribution',\n  },\n  heatmapContribution: {\n    id: 'users.detail.heatmapContribution',\n    defaultMessage: 'contribution',\n  },\n  heatmapContributions: {\n    id: 'users.detail.heatmapContributions',\n    defaultMessage: 'contributions',\n  },\n  heatmapLegendMore: {\n    id: 'users.detail.heatmapLegendMore',\n    defaultMessage: 'more',\n  },\n  heatmapLegendLess: {\n    id: 'users.detail.heatmapLegendLess',\n    defaultMessage: 'less',\n  },\n  teams: {\n    id: 'users.detail.teams',\n    defaultMessage: 'Teams',\n  },\n  userOrganisationsError: {\n    id: 'users.header.organisations.error',\n    defaultMessage: \"Couldn't load organisations at this time\",\n  },\n});\n","import React from 'react';\nimport { FormattedNumber } from 'react-intl';\n\nexport const StatsCard = ({ icon, description, value, className, invertColors = false }) => {\n  return (\n    <div\n      className={`cf pt3 pb3 ph3 br1 ${\n        invertColors ? 'bg-red white' : 'bg-white red shadow-6'\n      } flex items-center ${className || ''}`}\n    >\n      <div className=\"w-30 fl ml2\">{icon}</div>\n      <StatsCardContent\n        value={Number(value) || value === 0 ? <FormattedNumber value={Math.trunc(value)} /> : value}\n        label={description}\n        className=\"w-70 pt3-m mb1 fl\"\n        invertColors={invertColors}\n      />\n    </div>\n  );\n};\n\nexport const StatsCardContent = ({ value, label, className, invertColors = false }: Object) => (\n  <div className={className}>\n    <h3 className={`ma0 mb1 barlow-condensed f2 fw5 ${invertColors ? 'white' : 'red'}`}>{value}</h3>\n    <span className={`ma0 h2 f7 fw5 ${invertColors ? 'white' : 'blue-grey'}`}>{label}</span>\n  </div>\n);\n","import { defineMessages } from 'react-intl';\n\n/**\n * Internationalized messages for use on project cards.\n */\nexport default defineMessages({\n  projectTitle: {\n    id: 'project.mainSection.title',\n    defaultMessage: 'Generic project',\n  },\n  mappingDifficulty: {\n    id: 'project.nav.mappingDifficulty',\n    defaultMessage: 'Difficulty level',\n  },\n  moreFilters: {\n    id: 'project.nav.moreFilters',\n    defaultMessage: 'More filters',\n  },\n  campaign: {\n    id: 'project.nav.campaign',\n    defaultMessage: 'Campaign',\n  },\n  startDate: {\n    id: 'navFilters.startDate',\n    defaultMessage: 'From',\n  },\n  startDatePlaceholder: {\n    id: 'navFilters.startDate.placeholder',\n    defaultMessage: 'Click to select a start date',\n  },\n  endDate: {\n    id: 'navFilters.endDate',\n    defaultMessage: 'To',\n  },\n  endDatePlaceholder: {\n    id: 'navFilters.endDatePlace.placeholder',\n    defaultMessage: 'Click to select an end date',\n  },\n  dateRange: {\n    id: 'navFilters.dateRange',\n    defaultMessage: 'Date Range',\n  },\n  thisWeek: {\n    id: 'navFilters.thisWeek',\n    defaultMessage: 'This week',\n  },\n  thisMonth: {\n    id: 'navFilters.thisMonth',\n    defaultMessage: 'This month',\n  },\n  thisYear: {\n    id: 'navFilters.thisYear',\n    defaultMessage: 'This year',\n  },\n  lastWeek: {\n    id: 'navFilters.lastWeek',\n    defaultMessage: 'Last week',\n  },\n  lastMonth: {\n    id: 'navFilters.lastMonth',\n    defaultMessage: 'Last month',\n  },\n  lastYear: {\n    id: 'navFilters.lastYear',\n    defaultMessage: 'Last year',\n  },\n  customRange: {\n    id: 'navFilters.customRange',\n    defaultMessage: 'Custom range',\n  },\n  showMapToggle: {\n    id: 'project.nav.showMapToggle',\n    defaultMessage: 'Show map',\n  },\n  listViewToggle: {\n    id: 'project.nav.listViewToggle',\n    defaultMessage: 'List view',\n  },\n  typesOfMapping: {\n    id: 'project.navFilters.typesOfMapping',\n    defaultMessage: 'Types of mapping',\n  },\n  projectsToMap: {\n    id: 'project.navFilters.action.map',\n    defaultMessage: 'Projects to map',\n  },\n  projectsToValidate: {\n    id: 'project.navFilters.action.validate',\n    defaultMessage: 'Projects to validate',\n  },\n  anyProject: {\n    id: 'project.navFilters.action.any',\n    defaultMessage: 'Any project',\n  },\n  exactMatch: {\n    id: 'project.navFilters.typesOfMapping.exactMatch',\n    defaultMessage: 'Exact match',\n  },\n  campaigns: {\n    id: 'project.navFilters.campaigns',\n    defaultMessage: 'All campaigns',\n  },\n  showAllXTags: {\n    id: 'project.navFilters.showAllXTags',\n    defaultMessage: 'Show {typeOfTag}',\n  },\n  searchPlaceholder: {\n    id: 'project.inputs.placeholders.search',\n    defaultMessage: 'Search project',\n  },\n  organisation: {\n    id: 'project.navFilters.organisation',\n    defaultMessage: 'Organization',\n  },\n  organisations: {\n    id: 'project.navFilters.organisations',\n    defaultMessage: 'All Organizations',\n  },\n  location: {\n    id: 'project.navFilters.location',\n    defaultMessage: 'Location',\n  },\n  locations: {\n    id: 'project.navFilters.locations',\n    defaultMessage: 'Locations',\n  },\n  interest: {\n    id: 'project.navFilters.interest',\n    defaultMessage: 'Interest',\n  },\n  interests: {\n    id: 'project.navFilters.interests',\n    defaultMessage: 'Interests',\n  },\n  filterByMyInterests: {\n    id: 'project.navFilters.filterByMyInterests',\n    defaultMessage: 'Filter by my interests',\n  },\n  errorLoadingTheXForY: {\n    id: 'project.navFilters.error',\n    defaultMessage: 'Error loading the {xWord} for {yWord}',\n  },\n  filters: {\n    id: 'project.nav.filters',\n    defaultMessage: 'Filters',\n  },\n  projects: {\n    id: 'project.nav.projects',\n    defaultMessage: 'Projects',\n  },\n  myProjects: {\n    id: 'project.nav.myprojects',\n    defaultMessage: 'My Projects',\n  },\n  manageProjects: {\n    id: 'project.nav.manageProjects',\n    defaultMessage: 'Manage Projects',\n  },\n  favorited: {\n    id: 'project.nav.favorited',\n    defaultMessage: 'Favorited',\n  },\n  contributed: {\n    id: 'project.nav.contributed',\n    defaultMessage: 'Contributed',\n  },\n  allprojects: {\n    id: 'project.nav.allprojects',\n    defaultMessage: 'All',\n  },\n  active: {\n    id: 'project.nav.active',\n    defaultMessage: 'Active',\n  },\n  stale: {\n    id: 'project.nav.stale',\n    defaultMessage: 'Stale',\n  },\n  managed: {\n    id: 'project.nav.managed',\n    defaultMessage: 'Managed by me',\n  },\n  created: {\n    id: 'project.nav.created',\n    defaultMessage: 'Created by me',\n  },\n  draft: {\n    id: 'project.nav.draft',\n    defaultMessage: 'Draft',\n  },\n  archived: {\n    id: 'project.nav.archived',\n    defaultMessage: 'Archived',\n  },\n  paginationCount: {\n    id: 'project.pagination.count',\n    defaultMessage: 'Showing {number} of {total} projects',\n  },\n  clearFilters: {\n    id: 'project.nav.clearFilters',\n    defaultMessage: 'Clear filters',\n  },\n  sortBy: {\n    id: 'project.sortby',\n    defaultMessage: 'Sort by',\n  },\n  sortByIdDesc: {\n    id: 'project.sortby.id.descending',\n    defaultMessage: 'New projects',\n  },\n  sortByIdAsc: {\n    id: 'project.sortby.id.ascending',\n    defaultMessage: 'Old projects',\n  },\n  sortByPriority: {\n    id: 'project.sortby.priority',\n    defaultMessage: 'Urgent projects',\n  },\n  sortByEasy: {\n    id: 'project.sortby.difficulty.easy',\n    defaultMessage: 'Easy projects',\n  },\n  sortByChallenging: {\n    id: 'project.sortby.difficulty.challenging',\n    defaultMessage: 'Challenging projects',\n  },\n  sortByMoreActive: {\n    id: 'project.sortby.more_active',\n    defaultMessage: 'Active projects',\n  },\n  apply: {\n    id: 'project.nav.apply',\n    defaultMessage: 'Apply',\n  },\n  clear: {\n    id: 'project.nav.clear',\n    defaultMessage: 'Clear',\n  },\n  retry: {\n    id: 'project.results.retry',\n    defaultMessage: 'Retry',\n  },\n});\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  generic: {\n    id: 'stats.ohsome.timestamp.generic',\n    defaultMessage:\n      'These statistics come from ohsomeNow Stats and were last updated at {formattedDate} ({timeZone}). Missing fields will be made available soon!',\n  },\n  project: {\n    id: 'stats.ohsome.timestamp.project',\n    defaultMessage:\n      'These stats were retrieved using the default changeset comment of the project and were last updated at {formattedDate} ({timeZone}).',\n  },\n});\n","import { useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport ReactTooltip from 'react-tooltip';\n\nimport { fetchExternalJSONAPI } from '../../network/genericJSONRequest';\nimport { OHSOME_STATS_BASE_URL } from '../../config';\nimport { InfoIcon } from '../svgIcons';\nimport messages from './messages';\n\nfunction StatsTimestamp({ messageType }) {\n  const intl = useIntl();\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  useEffect(() => {\n    fetchExternalJSONAPI(`${OHSOME_STATS_BASE_URL}/metadata`)\n      .then((res) => {\n        setLastUpdated(res.result.max_timestamp);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n\n  return (\n    <div>\n      <InfoIcon\n        className=\"blue-grey h1 w1 v-mid ml2 pointer\"\n        data-tip={intl.formatMessage(messages[messageType], {\n          formattedDate: intl.formatDate(lastUpdated, dateOptions),\n          timeZone: intl.timeZone,\n        })}\n        data-for=\"ohsome-timestamp\"\n      />\n      <ReactTooltip id=\"ohsome-timestamp\" place=\"top\" className=\"mw6\" effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default StatsTimestamp;\n","import {\n  format,\n  startOfWeek,\n  startOfMonth,\n  startOfYear,\n  endOfWeek,\n  endOfMonth,\n  endOfYear,\n} from 'date-fns';\n\nexport function getPastMonths(months) {\n  let today = new Date();\n  return today.setMonth(today.getMonth() - months);\n}\n\nconst date = new Date();\nconst dateFormat = 'yyyy-MM-dd';\nexport const dateRanges = {\n  thisWeek: {\n    start: format(startOfWeek(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisMonth: {\n    start: format(startOfMonth(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  thisYear: {\n    start: format(startOfYear(date), dateFormat),\n    end: format(date, dateFormat),\n  },\n  lastWeek: {\n    start: format(startOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n    end: format(endOfWeek(new Date().setDate(date.getDate() - 7)), dateFormat),\n  },\n  lastMonth: {\n    start: format(startOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n    end: format(endOfMonth(new Date().setMonth(date.getMonth() - 1)), dateFormat),\n  },\n  lastYear: {\n    start: format(startOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n    end: format(endOfYear(new Date().setFullYear(date.getFullYear() - 1)), dateFormat),\n  },\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\n\nconst ProgressBar = ({ percent }) => (\n  <div className=\"w-100 relative mt2\">\n    <div\n      style={{ height: '0.5em', width: `${percent * 100}%` }}\n      className=\"bg-red br-pill absolute\"\n    ></div>\n  </div>\n);\n\nexport const BarChartItem = ({ name, link, percentValue, number, numberUnit }: Object) => (\n  <li className=\"w-100 cf list pv3\">\n    <div className=\"w-100 cf mr4\">\n      <div className=\"di ma0 f7 b fl\">\n        {link ? (\n          <Link className=\"link blue-dark\" to={link}>\n            {name}\n          </Link>\n        ) : (\n          name\n        )}\n      </div>\n      <div className=\"di ma0 f7 fr\">\n        <span className=\"b mr1\">{number}</span>\n        {numberUnit && <span className=\"blue-grey\">{numberUnit}</span>}\n      </div>\n    </div>\n    <div className=\"w-100 cf\">\n      <ProgressBar percent={percentValue} />\n    </div>\n  </li>\n);\n\nexport const BarListChart = ({ data, valueField, nameField, linkBase, linkField }) => {\n  return (\n    <ol className=\"pa0 mt1 mb0\">\n      {data.map((p, n) => (\n        <BarChartItem\n          key={n}\n          name={p[nameField]}\n          link={linkBase ? `${linkBase}${p[linkField]}` : null}\n          percentValue={p.percent}\n          number={p[valueField]}\n          numberUnit={<FormattedMessage {...messages.tasks} />}\n        />\n      ))}\n    </ol>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { format, parse } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport 'react-placeholder/lib/reactPlaceholder.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { dateRanges } from '../../utils/date';\nimport messages from './messages';\nimport { CalendarIcon } from '../svgIcons';\n\nexport const ProjectFilterSelect = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  selectedTag,\n  setQueryForChild,\n  allQueryParamsForChild,\n  options,\n  payloadKey,\n}) => {\n  const fieldsetTitle = <FormattedMessage {...messages[fieldsetName]} />;\n  const fieldsetTitlePlural = <FormattedMessage {...messages[`${fieldsetName}s`]} />;\n\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>{fieldsetTitle}</legend>\n      {options.isError ? (\n        <div className=\"bg-tan pa4\">\n          <FormattedMessage\n            {...messages.errorLoadingTheXForY}\n            values={{\n              xWord: <FormattedMessage {...messages.filters} />,\n              yWord: fieldsetTitlePlural,\n            }}\n          />\n        </div>\n      ) : (\n        <TagFilterPickerAutocomplete\n          fieldsetTitle={fieldsetTitle}\n          defaultSelectedItem={fieldsetTitlePlural}\n          fieldsetName={fieldsetName}\n          payloadKey={payloadKey}\n          queryParamSelectedItem={selectedTag || fieldsetTitle}\n          tagOptionsFromAPI={options}\n          setQuery={setQueryForChild}\n          allQueryParams={allQueryParamsForChild}\n        />\n      )}\n    </fieldset>\n  );\n};\n\nexport const DateRangeFilterSelect = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  setQueryForChild,\n  allQueryParamsForChild,\n  isCustomDateRange,\n  setIsCustomDateRange,\n  startDateInQuery,\n  endDateInQuery,\n}) => {\n  const [dateRange, setDateRange] = useState('thisYear');\n\n  const dropdownOptions = [\n    { value: 'thisWeek', label: <FormattedMessage {...messages.thisWeek} /> },\n    { value: 'thisMonth', label: <FormattedMessage {...messages.thisMonth} /> },\n    { value: 'thisYear', label: <FormattedMessage {...messages.thisYear} /> },\n    { value: 'lastWeek', label: <FormattedMessage {...messages.lastWeek} /> },\n    { value: 'lastMonth', label: <FormattedMessage {...messages.lastMonth} /> },\n    { value: 'lastYear', label: <FormattedMessage {...messages.lastYear} /> },\n    (isCustomDateRange || dateRange === 'custom') && {\n      value: 'custom',\n      label: <FormattedMessage {...messages.customRange} />,\n      isOptionDisabled: true,\n    },\n  ].filter((a) => a);\n\n  useEffect(() => {\n    if (!endDateInQuery && startDateInQuery === dateRanges['thisYear'].start) {\n      setDateRange('thisYear');\n      return;\n    }\n    const doesRangeMatch = Object.keys(dateRanges).find(\n      (range) =>\n        dateRanges[range].start === startDateInQuery && dateRanges[range].end === endDateInQuery,\n    );\n    doesRangeMatch ? setDateRange(doesRangeMatch) : setDateRange('custom');\n  }, [startDateInQuery, endDateInQuery]);\n\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>\n        <FormattedMessage {...messages.dateRange} />\n      </legend>\n      <Select\n        onChange={({ value }) => {\n          setQueryForChild(\n            {\n              ...allQueryParamsForChild,\n              page: undefined,\n              startDate: dateRanges[value].start,\n              endDate: dateRanges[value].end,\n            },\n            'pushIn',\n          );\n          setIsCustomDateRange(false);\n          setDateRange(value);\n        }}\n        classNamePrefix=\"react-select\"\n        options={dropdownOptions}\n        value={\n          isCustomDateRange\n            ? dropdownOptions.filter((option) => option.value === 'custom')\n            : dropdownOptions.filter((option) => option.value === dateRange)\n        }\n        isOptionDisabled={(option) => option.isOptionDisabled}\n      />\n    </fieldset>\n  );\n};\n\nexport const DateFilterPicker = ({\n  fieldsetName,\n  fieldsetStyle,\n  titleStyle,\n  selectedValue,\n  setQueryForChild,\n  allQueryParamsForChild,\n  setIsCustomDateRange,\n}) => {\n  const intl = useIntl();\n  const dateFormat = 'yyyy-MM-dd';\n  return (\n    <fieldset id={fieldsetName} className={fieldsetStyle}>\n      <legend className={titleStyle}>\n        <FormattedMessage {...messages[fieldsetName]} />\n      </legend>\n      <div className=\"flex\">\n        <CalendarIcon className=\"blue-grey dib w1 pr2 v-mid\" />\n        <DatePicker\n          selected={selectedValue ? parse(selectedValue, dateFormat, new Date()) : null}\n          onChange={(date) => {\n            setQueryForChild(\n              {\n                ...allQueryParamsForChild,\n                page: undefined,\n                [fieldsetName]: date ? format(date, dateFormat) : null,\n              },\n              'pushIn',\n            );\n            setIsCustomDateRange(true);\n          }}\n          dateFormat={dateFormat}\n          className=\"w-auto pv2 ph1 ba b--grey-light\"\n          placeholderText={intl.formatMessage(messages[`${fieldsetName}Placeholder`])}\n          showYearDropdown\n          scrollableYearDropdown\n        />\n      </div>\n    </fieldset>\n  );\n};\n\n/*\ndefaultSelectedItem gets appended to top of list as an option for reset\n*/\nexport const TagFilterPickerAutocomplete = ({\n  tagOptionsFromAPI: { tags: tagOptions },\n  fieldsetTitle,\n  fieldsetName,\n  queryParamSelectedItem,\n  defaultSelectedItem,\n  allQueryParams,\n  setQuery,\n  payloadKey = 'name',\n}) => {\n  const getLabel = (option) => option.name || option;\n\n  const getValue = (option) => (option && option[payloadKey] ? option[payloadKey] : option);\n\n  const handleTagChange = (change) => {\n    const value = getValue(change);\n    const isAllTags = change && value === defaultSelectedItem;\n    /* should we encodeURIComponent the change.value? */\n    const newValue = isAllTags ? undefined : value;\n    setQuery(\n      {\n        ...allQueryParams,\n        page: undefined,\n        [fieldsetName]: newValue || undefined,\n      },\n      'pushIn',\n    );\n  };\n\n  const selectedOption = tagOptions.find((option) => option[payloadKey] === queryParamSelectedItem);\n\n  return (\n    <Select\n      isLoading={tagOptions.isLoading}\n      onChange={handleTagChange}\n      classNamePrefix=\"react-select\"\n      getOptionLabel={getLabel}\n      getOptionValue={getValue}\n      placeholder={allQueryParams[fieldsetName] || fieldsetTitle}\n      options={tagOptions}\n      value={selectedOption || null}\n      isClearable={true}\n      isDisabled={fieldsetName === 'interests' && allQueryParams.basedOnMyInterests}\n      styles={{\n        menu: (baseStyles) => ({\n          ...baseStyles,\n          // having greater zIndex than switch toggle(5)\n          zIndex: 6,\n        }),\n      }}\n    />\n  );\n};\n","import { useEffect, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { API_URL } from '../config';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        tags: action.payload && action.payload[Object.keys(action.payload)[0]],\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      console.log(action);\n      throw new Error();\n  }\n};\n\nexport const useTagAPI = (initialData, tagType, processDataFn) => {\n  const token = useSelector((state) => state.auth.token);\n  const locale = useSelector((state) => state.preferences.locale);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    tags: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    /* TODO(tdk): support axios cancelling like on projectsAPI,\n       make sure to consider how to monitor if form is unloaded */\n\n    const fetchData = async () => {\n      const queryParams = {\n        organisations: '?omitManagerList=true',\n      };\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        let result;\n        if (token) {\n          result = await axios({\n            url: `${API_URL}${tagType}/${queryParams[tagType] ? queryParams[tagType] : ''}`,\n            method: 'GET',\n            headers: { Authorization: `Token ${token}` },\n          });\n        } else {\n          result = await axios(`${API_URL}${tagType}/`);\n        }\n\n        if (!didCancel) {\n          if (result && result.headers && result.headers['content-type'].indexOf('json') !== -1) {\n            if (processDataFn) {\n              result.data.tags = processDataFn(result.data.tags, locale);\n            }\n            dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n          } else {\n            console.error('Invalid return content-type for organisation tags');\n            dispatch({ type: 'FETCH_FAILURE' });\n          }\n        }\n      } catch (error) {\n        /* if cancelled, this setting state of unmounted\n         * component would be a memory leak */\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [tagType, token, processDataFn, locale]);\n\n  return [state];\n};\n","import { useEffect, useState } from 'react';\n\nfunction getStatusCount(stats, status) {\n  return stats.reduce((total, entry) => total + entry[status], 0);\n}\n\nexport function useTotalTasksStats(stats) {\n  const [totalStats, setTotalStats] = useState({\n    mapped: 0,\n    validated: 0,\n  });\n  useEffect(() => {\n    if (stats && stats.length) {\n      setTotalStats({\n        mapped: getStatusCount(stats, 'mapped'),\n        validated: getStatusCount(stats, 'validated'),\n      });\n    }\n  }, [stats]);\n  return totalStats;\n}\n","import { useEffect, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useQueryParams,\n  encodeQueryParams,\n  StringParam,\n  NumberParam,\n  withDefault,\n} from 'use-query-params';\nimport { stringify as stringifyUQP } from 'query-string';\nimport axios from 'axios';\nimport { format, startOfYear } from 'date-fns';\n\nimport { CommaArrayParam } from '../utils/CommaArrayParam';\nimport { useThrottle } from '../hooks/UseThrottle';\nimport { remapParamsToAPI } from '../utils/remapParamsToAPI';\nimport { API_URL } from '../config';\n\n/* See also moreFiltersForm, the useQueryParams are duplicated there for specific modular usage */\n/* This one is e.g. used for updating the URL when returning to /contribute\n *  and directly submitting the query to the API */\nconst statsQueryAllSpecification = {\n  startDate: withDefault(StringParam, format(startOfYear(Date.now()), 'yyyy-MM-dd')),\n  endDate: StringParam,\n  campaign: StringParam,\n  location: StringParam,\n  project: CommaArrayParam,\n  organisationName: StringParam,\n  organisationId: NumberParam,\n};\n\nexport const useTasksStatsQueryParams = () => {\n  const uqp = useQueryParams(statsQueryAllSpecification);\n  return uqp;\n};\n\n/* The API uses slightly different JSON keys than the queryParams,\n   this fn takes an object with queryparam keys and outputs JSON keys\n   while maintaining the same values */\n/* TODO support full text search and change text=>project for that */\nconst backendToQueryConversion = {\n  startDate: 'startDate',\n  endDate: 'endDate',\n  campaign: 'campaign',\n  location: 'country',\n  project: 'projectId',\n  organisationName: 'organisationName',\n  organisationId: 'organisationId',\n};\n\nconst defaultInitialData = {\n  taskStats: [],\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        stats: action.payload.taskStats,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      console.log(action);\n      throw new Error();\n  }\n};\n\nexport const useTasksStatsQueryAPI = (\n  initialData = defaultInitialData,\n  ExternalQueryParamsState,\n  extraQuery = '',\n) => {\n  const throttledExternalQueryParamsState = useThrottle(ExternalQueryParamsState, 1500);\n  const token = useSelector((state) => state.auth.token);\n  const controller = new AbortController();\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: true,\n    isError: false,\n    stats: initialData.taskStats,\n    queryParamsState: ExternalQueryParamsState[0],\n  });\n\n  const fetchData = async () => {\n    dispatch({\n      type: 'FETCH_INIT',\n    });\n\n    let headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    };\n    const paramsRemapped = remapParamsToAPI(\n      throttledExternalQueryParamsState,\n      backendToQueryConversion,\n    );\n    extraQuery.split(',').forEach((query) => {\n      const [key, value] = query.trim().split('=');\n      paramsRemapped[key] = value;\n    });\n\n    await axios({\n      url: `${API_URL}tasks/statistics/`,\n      method: 'GET',\n      headers: headers,\n      params: paramsRemapped,\n      signal: controller.signal,\n    })\n      .then((result) => {\n        if (result?.headers && result.headers['content-type'].indexOf('json') !== -1) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        } else {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      })\n      .catch((error) => {\n        if (!axios.isCancel(error)) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n        if (error.response?.data?.Error === 'No statistics found') {\n          const zeroPayload = Object.assign(defaultInitialData, { pagination: { total: 0 } });\n          dispatch({ type: 'FETCH_SUCCESS', payload: zeroPayload });\n        }\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [throttledExternalQueryParamsState, token, extraQuery]);\n\n  return [state, fetchData];\n};\n\nexport const stringify = (obj) => {\n  const encodedQuery = encodeQueryParams(statsQueryAllSpecification, obj);\n  return stringifyUQP(encodedQuery);\n};\n","import React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport messages from './messages';\nimport { StatsCardContent } from '../statsCard';\nimport { useTotalTasksStats } from '../../hooks/UseTotalTasksStats';\n\nexport function TasksStatsSummary({ stats }) {\n  const totalStats = useTotalTasksStats(stats);\n  return (\n    <>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.tasksMapped} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.mapped} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-50-m w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.tasksValidated} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.validated} />}\n          />\n        </div>\n      </div>\n      <div className=\"pa2 w-25-l w-100 fl\">\n        <div className=\"cf pa3 bg-white shadow-4\">\n          <StatsCardContent\n            label={<FormattedMessage {...messages.completedActions} />}\n            className=\"tc\"\n            value={<FormattedNumber value={totalStats.mapped + totalStats.validated} />}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { Suspense, useState } from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\nimport { useTagAPI } from '../../hooks/UseTagAPI';\nimport { useValidateDateRange } from '../../hooks/UseValidateDateRange';\nimport { formatFilterCountriesData } from '../../utils/countries';\nimport {\n  ProjectFilterSelect,\n  DateFilterPicker,\n  DateRangeFilterSelect,\n} from '../projects/filterSelectFields';\nimport { TasksStatsSummary } from './tasksStatsSummary';\n\nconst TasksStatsChart = React.lazy(() =>\n  import('./tasksStatsChart' /* webpackChunkName: \"taskStatsChart\" */),\n);\n\nexport const TasksStats = ({ query, setQuery, stats, error, loading, retryFn }) => {\n  const [campaignAPIState] = useTagAPI([], 'campaigns');\n  const [countriesAPIState] = useTagAPI([], 'countries', formatFilterCountriesData);\n  const {\n    startDate: startDateInQuery,\n    endDate: endDateInQuery,\n    campaign: campaignInQuery,\n    location: countryInQuery,\n  } = query;\n  const [isCustomDateRange, setIsCustomDateRange] = useState(false);\n\n  const dateValidation = useValidateDateRange(query);\n\n  const fieldsetStyle = 'bn dib pv0-ns pv2 ph2-ns ph1 mh0 mb1';\n  const titleStyle = 'dib ttu fw5 blue-grey mb1';\n\n  return (\n    <>\n      <div className=\"w-100 cf flex flex-wrap\">\n        <DateFilterPicker\n          fieldsetName=\"startDate\"\n          fieldsetStyle={`${fieldsetStyle} fl`}\n          titleStyle={titleStyle}\n          selectedValue={startDateInQuery}\n          setQueryForChild={setQuery}\n          allQueryParamsForChild={query}\n          setIsCustomDateRange={setIsCustomDateRange}\n        />\n        <DateFilterPicker\n          fieldsetName=\"endDate\"\n          fieldsetStyle={`${fieldsetStyle} fl`}\n          titleStyle={titleStyle}\n          selectedValue={endDateInQuery}\n          setQueryForChild={setQuery}\n          allQueryParamsForChild={query}\n          setIsCustomDateRange={setIsCustomDateRange}\n        />\n        <div className=\"w-60-l w-100 fl\">\n          <DateRangeFilterSelect\n            fieldsetName=\"dateRange\"\n            fieldsetStyle={`${fieldsetStyle} w-20-ns w-100`}\n            titleStyle={titleStyle}\n            selectedValue={startDateInQuery}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n            isCustomDateRange={isCustomDateRange}\n            setIsCustomDateRange={setIsCustomDateRange}\n            startDateInQuery={startDateInQuery}\n            endDateInQuery={endDateInQuery}\n          />\n          <ProjectFilterSelect\n            fieldsetName=\"campaign\"\n            fieldsetStyle={`${fieldsetStyle} w-30-ns w-100`}\n            titleStyle={titleStyle}\n            selectedTag={campaignInQuery}\n            options={campaignAPIState}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n          />\n          <ProjectFilterSelect\n            fieldsetName=\"location\"\n            fieldsetStyle={`${fieldsetStyle} w-30-ns w-100`}\n            titleStyle={titleStyle}\n            selectedTag={countryInQuery}\n            options={countriesAPIState}\n            setQueryForChild={setQuery}\n            allQueryParamsForChild={query}\n            payloadKey=\"value\"\n          />\n        </div>\n      </div>\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        rows={26}\n        ready={!loading}\n        className=\"pv3 ph2 ph4-ns\"\n      >\n        {!loading && error ? (\n          <div className=\"bg-tan pa4\">\n            <FormattedMessage {...messages.errorLoadingStats} />\n            <div className=\"pv3\">\n              {dateValidation && dateValidation.detail ? (\n                <FormattedMessage {...messages[dateValidation.detail]} />\n              ) : (\n                <button className=\"pa1 pointer\" onClick={() => retryFn()}>\n                  <FormattedMessage {...messages.retry} />\n                </button>\n              )}\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"pt3 pb3 ph2 cf mr2 w-100 w-two-thirds-l\">\n              <Suspense fallback={<div>loading...</div>}>\n                <TasksStatsChart stats={stats} />\n              </Suspense>\n            </div>\n            <div className=\"cf w-100\">\n              <TasksStatsSummary stats={stats} />\n            </div>\n          </>\n        )}\n      </ReactPlaceholder>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { startOfTomorrow, startOfToday, parse, differenceInDays } from 'date-fns';\n\nexport function useValidateDateRange(query) {\n  const [validation, setValidation] = useState();\n\n  useEffect(() => {\n    setValidation({ error: false, detail: '' });\n    if (query.startDate) {\n      const startDate = parse(query.startDate, 'yyyy-MM-dd', new Date());\n      const endDate = query.endDate\n        ? parse(query.endDate, 'yyyy-MM-dd', new Date())\n        : startOfToday();\n      if (startDate > startOfTomorrow() || startDate > endDate) {\n        setValidation({ error: true, detail: 'badStartDate' });\n      }\n      if (differenceInDays(endDate, startDate) > 366) {\n        setValidation({ error: true, detail: 'longDateRange' });\n      }\n    }\n  }, [query.startDate, query.endDate]);\n  return validation;\n}\n","import endOfDay from \"../endOfDay/index.js\";\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","import React from 'react';\nimport ReactPlaceholder from 'react-placeholder';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { BarChartItem } from '../userDetail/barListChart';\nimport { useDateRangeQueryParams } from '../../hooks/UseDateRangeQueryParams';\nimport { useFetch } from '../../hooks/UseFetch';\n\nexport const NewUsersStats = ({ datePeriod }) => {\n  const queryParam = useDateRangeQueryParams(datePeriod);\n  const [errorStats, loadingStats, stats] = useFetch(`users/statistics/?${queryParam}`, queryParam);\n  const activeUsers = stats.total > 0 ? stats.contributed / stats.total : 0;\n  const emailVerifiedUsers = stats.total > 0 ? stats.emailVerified / stats.total : 0;\n\n  return (\n    <div className=\"pv2 ph3 bg-white blue-dark shadow-4\">\n      <ReactPlaceholder\n        showLoadingAnimation={true}\n        rows={6}\n        ready={!errorStats && !loadingStats}\n        className=\"pv3 ph2 ph4-ns\"\n      >\n        <h3 className=\"f4 mv0 fw6 pt3\">\n          {datePeriod === 'month' && (\n            <FormattedMessage {...messages.newUsersOnLastMonth} values={{ number: stats.total }} />\n          )}\n          {datePeriod === 'week' && (\n            <FormattedMessage {...messages.newUsersOnLastWeek} values={{ number: stats.total }} />\n          )}\n        </h3>\n        <ol className=\"pa0 mt1 mb2\">\n          <BarChartItem\n            name={<FormattedMessage {...messages.activeNewUsers} />}\n            percentValue={activeUsers}\n            number={`${Math.round(activeUsers * 100)}%`}\n          />\n          <BarChartItem\n            name={<FormattedMessage {...messages.emailVerified} />}\n            percentValue={emailVerifiedUsers}\n            number={`${Math.round(emailVerifiedUsers * 100)}%`}\n          />\n        </ol>\n      </ReactPlaceholder>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { subWeeks, subMonths, format, endOfToday } from 'date-fns';\n\nexport const useDateRangeQueryParams = (period, startDate, endDate) => {\n  const [queryParam, setQueryParam] = useState(null);\n\n  useEffect(() => {\n    let startDateValue = startDate;\n    if (period === 'month') startDateValue = format(subMonths(endOfToday(), 1), 'yyyy-MM-dd');\n    if (period === 'week') startDateValue = format(subWeeks(endOfToday(), 1), 'yyyy-MM-dd');\n    setQueryParam(\n      `startDate=${startDateValue}${endDate && period === 'custom' ? `&endDate=${endDate}` : ''}`,\n    );\n  }, [startDate, period, endDate]);\n\n  return queryParam;\n};\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport userDetailMessages from '../userDetail/messages';\nimport { OHSOME_STATS_BASE_URL } from '../../config';\nimport { RoadIcon, HomeIcon, WavesIcon, MarkerIcon } from '../svgIcons';\nimport { StatsCard } from '../statsCard';\nimport StatsTimestamp from '../statsTimestamp';\n\nexport const FeatureStats = () => {\n  const [stats, setStats] = useState({ edits: 0, buildings: 0, roads: 0, pois: 0, waterways: 0 });\n  const getStats = async () => {\n    try {\n      const response = await axios.get(\n        `${OHSOME_STATS_BASE_URL}/stats/hotosm-project-%2A`,\n      );\n      const { edits, buildings, roads } = response.data.result;\n      setStats({\n        edits,\n        buildings,\n        roads,\n        pois: response.data.poi_count_add,\n        waterways: response.data.waterway_km_add,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getStats();\n  }, []);\n\n  const iconClass = 'h-50 w-50';\n  const iconStyle = { height: '45px' };\n\n  return (\n    <>\n      <div className=\"flex items-center\">\n        <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark\">\n          <FormattedMessage {...messages.totalFeatures} />\n        </h4>\n        <StatsTimestamp messageType=\"generic\" />\n      </div>\n      <div className=\"w-100 cf\">\n        <StatsCard\n          icon={<HomeIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.buildingsMapped} />}\n          value={stats.buildings || 0}\n          className={'w-25-l w-50-m w-100 mv1'}\n        />\n        <StatsCard\n          icon={<RoadIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.roadMapped} />}\n          value={stats.roads || 0}\n          className={'w-25-l w-50-m w-100 mv1'}\n        />\n        <StatsCard\n          icon={<MarkerIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.poiMapped} />}\n          value={stats.pois || 0}\n          className={'w-25-l w-50-m w-100 mv1'}\n        />\n        <StatsCard\n          icon={<WavesIcon className={iconClass} style={iconStyle} />}\n          description={<FormattedMessage {...userDetailMessages.waterwaysMapped} />}\n          value={stats.waterways || 0}\n          className={'w-25-l w-50-m w-100 mv1'}\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport { useTasksStatsQueryParams, useTasksStatsQueryAPI } from '../hooks/UseTasksStatsQueryAPI';\nimport { useSetTitleTag } from '../hooks/UseMetaTags';\nimport { TasksStats } from '../components/teamsAndOrgs/tasksStats';\nimport { NewUsersStats } from '../components/teamsAndOrgs/newUsersStats';\nimport { FeatureStats } from '../components/teamsAndOrgs/featureStats';\n\nexport const Stats = () => {\n  useSetTitleTag('Stats');\n  const [query, setQuery] = useTasksStatsQueryParams();\n  const [apiState, fetchTasksStatistics] = useTasksStatsQueryAPI({ taskStats: [] }, query);\n\n  return (\n    <div className=\"w-100 cf pv4\">\n      <div className=\"w-100 fl cf\">\n        <h3 className=\"f2 ma0 ttu barlow-condensed blue-dark dib v-mid\">\n          <FormattedMessage {...messages.statistics} />\n        </h3>\n        <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb3\">\n          <FormattedMessage {...messages.tasksStatistics} />\n        </h4>\n        <div className=\"pv3 ph2 bg-white blue-dark\">\n          <TasksStats\n            query={query}\n            setQuery={setQuery}\n            stats={apiState.stats}\n            error={apiState.isError}\n            loading={apiState.isLoading}\n            retryFn={fetchTasksStatistics}\n          />\n        </div>\n      </div>\n      <div className=\"w-100 fl cf mt3\">\n        <h4 className=\"f3 fw6 ttu barlow-condensed blue-dark mt0 pt4 mb3\">\n          <FormattedMessage {...messages.newUsers} />\n        </h4>\n        <div className=\"w-third-l w-50-m w-100 dib ph2\">\n          <NewUsersStats datePeriod=\"week\" />\n        </div>\n        <div className=\"w-third-l w-50-m w-100 dib ph2\">\n          <NewUsersStats datePeriod=\"month\" />\n        </div>\n      </div>\n      <div className=\"w-100 fl cf mt3 pb3\">\n        <FeatureStats />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}